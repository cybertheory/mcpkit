name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18]

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build web assets
      run: npm run build:web
    
    - name: Install pkg
      run: npm install -g pkg
    
    - name: Build binary
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          pkg package.json --targets node18-win-x64 --output dist/mcp-kit-win.exe
        elif [ "$RUNNER_OS" == "macOS" ]; then
          pkg package.json --targets node18-macos-x64 --output dist/mcp-kit-macos
        else
          pkg package.json --targets node18-linux-x64 --output dist/mcp-kit-linux
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ matrix.os }}
        path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
    
    - name: Prepare release assets
      run: |
        mkdir -p release-assets
        cp artifacts/binary-ubuntu-latest/mcp-kit-linux release-assets/
        cp artifacts/binary-windows-latest/mcp-kit-win.exe release-assets/
        cp artifacts/binary-macos-latest/mcp-kit-macos release-assets/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-assets/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
