{
  "mcps": [
    {
      "id": "00636d73-03c1-4107-a591-84b271cd1646",
      "name": "io.github.containers/kubernetes-mcp-server",
      "category": "Community",
      "description": "A Model Context Protocol (MCP) server for Kubernetes and OpenShift",
      "version": "0.0.50",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/containers/kubernetes-mcp-server",
      "remotes": [],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T13:14:05.094878294Z",
      "updated_at": "2025-09-16T13:14:05.094878294Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "00b9d4aa-56ab-4f32-9f9f-3b9d48ed023f",
      "name": "ai.waystation/gmail",
      "category": "Community",
      "description": "Read emails, send messages, and manage labels in your Gmail account.",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/gmail/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/gmail/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:46:07.969809594Z",
      "updated_at": "2025-09-09T14:46:07.969809594Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "028de86b-0027-4eb9-875b-c40b9b089215",
      "name": "com.teamwork/mcp",
      "category": "Community",
      "description": "The Teamwork.com official MCP server helps teams efficiently manage client projects with AI.",
      "version": "1.4.0",
      "npm": null,
      "command": null,
      "env": {
        "TW_MCP_BEARER_TOKEN": {
          "required": true,
          "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "TW_MCP_LOG_FORMAT": {
          "required": false,
          "description": "Choose log output format between 'text' or 'json'. Default is 'text'.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "TW_MCP_LOG_LEVEL": {
          "required": false,
          "description": "Choose log level between 'debug', 'info', 'warn' or 'error'. Default is 'info'.",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/teamwork/mcp",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "teamwork/mcp",
          "version": "v1.4.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "TW_MCP_BEARER_TOKEN"
            },
            {
              "description": "Choose log output format between 'text' or 'json'. Default is 'text'.",
              "format": "string",
              "name": "TW_MCP_LOG_FORMAT"
            },
            {
              "description": "Choose log level between 'debug', 'info', 'warn' or 'error'. Default is 'info'.",
              "format": "string",
              "name": "TW_MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T18:13:49.724857292Z",
      "updated_at": "2025-09-17T18:13:49.724857292Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0319ba85-54bd-44eb-97a7-58ee04d05b6e",
      "name": "io.github.kirbah/mcp-youtube",
      "category": "Community",
      "description": "YouTube MCP server for token-optimized, structured data using the YouTube Data API v3.",
      "version": "0.2.6",
      "npm": "@kirbah/mcp-youtube",
      "command": "npx @kirbah/mcp-youtube@0.2.6",
      "env": {
        "YOUTUBE_API_KEY": {
          "required": true,
          "description": "YouTube Data API v3 key",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "MDB_MCP_CONNECTION_STRING": {
          "required": false,
          "description": "MongoDB connection string for caching",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/kirbah/mcp-youtube",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@kirbah/mcp-youtube",
          "version": "0.2.6",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "YouTube Data API v3 key",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUTUBE_API_KEY"
            },
            {
              "description": "MongoDB connection string for caching",
              "format": "string",
              "is_secret": true,
              "name": "MDB_MCP_CONNECTION_STRING"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T17:28:32.237060053Z",
      "updated_at": "2025-09-12T17:28:32.237060053Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "03c1834c-c917-43f5-a8aa-787996969f4f",
      "name": "io.github.jkakar/cookwith-mcp",
      "category": "Community",
      "description": "AI-powered recipe generation and transformation tools by Cookwith",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/blaideinc/cookwith-mcp",
      "remotes": [],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T23:27:56.196697697Z",
      "updated_at": "2025-09-12T19:23:45.415878267Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "04f25b17-331d-48d7-b08b-37baece208a7",
      "name": "app.getdialer/dialer",
      "category": "Community",
      "description": "An MCP server that provides your you make outbound phone calls using your own phone number",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://getdialer.app/mcp"
        },
        {
          "type": "sse",
          "url": "https://getdialer.app/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-08T23:47:09.452137971Z",
      "updated_at": "2025-09-09T00:16:49.162620072Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "058b0ef7-4f48-4bab-a29f-00c43e88baca",
      "name": "garden.stanislav.svelte-llm/svelte-llm-mcp",
      "category": "Community",
      "description": "An MCP server that provides access to Svelte 5 and SvelteKit documentation",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/khromov/svelte-llm-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://svelte-llm.stanislav.garden/mcp/mcp"
        },
        {
          "type": "sse",
          "url": "https://svelte-llm.stanislav.garden/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T15:24:28.061183844Z",
      "updated_at": "2025-09-11T15:24:28.061183844Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0670bddb-8db1-41dd-b5c4-0957401e29b7",
      "name": "com.joelverhagen.mcp/Knapcode.SampleMcpServer",
      "category": "Community",
      "description": "A sample MCP server using the MCP C# SDK. Generates random numbers and random weather.",
      "version": "0.7.0-beta",
      "npm": null,
      "command": null,
      "env": {
        "WEATHER_CHOICES": {
          "required": false,
          "description": "",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/joelverhagen/Knapcode.SampleMcpServer.git",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "registry_base_url": "https://api.nuget.org",
          "identifier": "Knapcode.SampleMcpServer",
          "version": "0.7.0-beta",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "mcp",
              "type": "positional",
              "value_hint": "mcp"
            },
            {
              "value": "start",
              "type": "positional",
              "value_hint": "start"
            }
          ],
          "environment_variables": [
            {
              "value": "{weather_choices}",
              "variables": {
                "weather_choices": {
                  "description": "Comma separated list of weather descriptions to randomly select.",
                  "is_required": true
                }
              },
              "name": "WEATHER_CHOICES"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T15:58:51.492613035Z",
      "updated_at": "2025-09-12T15:58:51.492613035Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "06fd2413-e1aa-4b5e-83c1-6dbfdba84c74",
      "name": "com.jepto/mcp",
      "category": "Community",
      "description": "Jepto MCP server that provides access to client knowledgebase & analytics for connected data sources",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.jepto.com"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T11:36:02.956033052Z",
      "updated_at": "2025-09-15T11:36:02.956033052Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0733c292-e9cd-42f4-8260-3886dd762460",
      "name": "io.github.huoshuiai42/huoshui-file-search",
      "category": "Community",
      "description": "An MCP server that provides fast Spotlight file search capabilities for macOS",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/huoshuiai42/huoshui-file-search",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "huoshui-file-search",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T15:19:22.241726816Z",
      "updated_at": "2025-09-09T15:19:22.241726816Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "08854c3d-f63f-4e09-b762-3703e6af752b",
      "name": "io.github.cmpxchg16/mcp-ethical-hacking",
      "category": "Community",
      "description": "An MCP server that provides LinkedIn & Reddit data",
      "version": "1.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cmpxchg16/mcp-ethical-hacking",
      "remotes": [],
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/cmpxchg16/mcp-ethical-hacking/releases/download/v1.0.0/server.mcpb",
          "version": "1.1.0",
          "file_sha256": "fe333e598595000ae021bd27117db32ec69af6987f507ba7a63c90638ff633ce",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T11:11:03.268175466Z",
      "updated_at": "2025-09-15T12:55:00.139476327Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "095ef563-ac9f-46d0-bc67-8b0f122ab4f9",
      "name": "com.mintmcp/gmail",
      "category": "Community",
      "description": "A MCP server for Gmail that lets you search, read, and draft emails and replies.",
      "version": "1.0.5",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:53:13.486381454Z",
      "updated_at": "2025-09-09T19:53:13.486381454Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0963e3d3-30f2-4ed3-bf44-4941546f2690",
      "name": "io.github.gradion-ai/ipybox",
      "category": "Community",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "version": "auto",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/gradion-ai/ipybox",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "ipybox",
          "version": "auto",
          "runtime_hint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Required MCP server subcommand",
              "is_required": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "is_repeated": true,
              "value_hint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "is_repeated": true,
              "value_hint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "value_hint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "is_repeated": true,
              "value_hint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "value_hint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "is_repeated": true,
              "value_hint": "bind_mount"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T08:07:06.940202842Z",
      "updated_at": "2025-09-14T08:07:06.940202842Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "096d4f24-45f6-4a52-906f-5e7c13e69765",
      "name": "io.github.yuna0x0/anilist-mcp",
      "category": "Community",
      "description": "AniList MCP server for accessing AniList API data",
      "version": "1.3.3",
      "npm": "anilist-mcp",
      "command": "npx anilist-mcp@1.3.3",
      "env": {
        "ANILIST_TOKEN": {
          "required": false,
          "description": "AniList API token for authenticated requests",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/yuna0x0/anilist-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "anilist-mcp",
          "version": "1.3.3",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "is_secret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "yuna0x0/anilist-mcp",
          "version": "1.3.3",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "is_secret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/yuna0x0/anilist-mcp/releases/download/v1.3.3/anilist-mcp-1.3.3.mcpb",
          "version": "1.3.3",
          "file_sha256": "17f509167680edc3923940b31853fe2b27bbae1d5ab9b071525a4260704006ec",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "is_secret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T07:58:52.37605769Z",
      "updated_at": "2025-09-13T07:58:52.37605769Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "09f7ad69-47d4-444a-86c5-499a993a408f",
      "name": "io.github.augmnt/augments-mcp-server",
      "category": "Community",
      "description": "Augments MCP Server - A comprehensive framework documentation provider for Claude Code",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {
        "YOUR_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/augmnt/augments-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "augments-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T16:36:52.743796173Z",
      "updated_at": "2025-09-12T16:52:50.977430499Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0a5a9ada-cc20-4a8f-8cf6-78be9c377014",
      "name": "com.apple-rag/mcp-server",
      "category": "Community",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "version": "2.4.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BingoWon/apple-rag-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T14:43:14.554349016Z",
      "updated_at": "2025-09-17T15:07:56.628066042Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0a62b274-571c-45e9-8b04-5a122e6cc4f5",
      "name": "com.pga/pga-golf",
      "category": "Community",
      "description": "PGA's official MCP Server for all things golf-related. Find a coach, play golf, improve your game.",
      "version": "latest",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/pgahq/mcp-pga-com",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.pga.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T15:22:49.722230578Z",
      "updated_at": "2025-09-10T15:44:45.14464209Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0a9cda7f-2b73-4839-844b-6582f335de42",
      "name": "io.github.ruvnet/ruv-swarm",
      "category": "Community",
      "description": "Neural network swarm orchestration with WebAssembly acceleration and MCP integration",
      "version": "1.0.18",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T17:15:32.69690433Z",
      "updated_at": "2025-09-10T17:21:34.92137012Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0aaf5507-40c0-4780-b24f-5d36c4f851ad",
      "name": "com.peek/mcp",
      "category": "Community",
      "description": "Build travel itineraries with Peek's 300k+ experiences. Search, details, and availability.",
      "version": "0.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.peek.com"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T18:22:01.353357685Z",
      "updated_at": "2025-09-10T18:22:01.353357685Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0d63e37e-b288-4914-9b84-b88c4897e832",
      "name": "io.github.browserbase/mcp-server-browserbase",
      "category": "Community",
      "description": "MCP server for AI web browser automation using Browserbase and Stagehand",
      "version": "2.1.1",
      "npm": "@browserbasehq/mcp-server-browserbase",
      "command": "npx @browserbasehq/mcp-server-browserbase@2.1.1",
      "env": {
        "BROWSERBASE_API_KEY": {
          "required": true,
          "description": "Your Browserbase API key",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "BROWSERBASE_PROJECT_ID": {
          "required": true,
          "description": "Your Browserbase Project ID",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "GEMINI_API_KEY": {
          "required": true,
          "description": "Your Gemini API key (default model)",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/browserbase/mcp-server-browserbase",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@browserbasehq/mcp-server-browserbase",
          "version": "2.1.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your Browserbase API key",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "BROWSERBASE_API_KEY"
            },
            {
              "description": "Your Browserbase Project ID",
              "is_required": true,
              "format": "string",
              "name": "BROWSERBASE_PROJECT_ID"
            },
            {
              "description": "Your Gemini API key (default model)",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "GEMINI_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T21:10:44.068065305Z",
      "updated_at": "2025-09-12T21:10:44.068065305Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0d69f0ab-96b0-454a-96b5-60aeaaa4fbbc",
      "name": "io.github.vfarcic/dot-ai",
      "category": "Community",
      "description": "AI-powered development platform for Kubernetes deployments and intelligent automation",
      "version": "0.90.0",
      "npm": "@vfarcic/dot-ai",
      "command": "npx @vfarcic/dot-ai@0.90.0",
      "env": {
        "ANTHROPIC_API_KEY": {
          "required": true,
          "description": "Anthropic API key for Claude AI integration (required for deployments)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "OPENAI_API_KEY": {
          "required": false,
          "description": "OpenAI API key for embeddings (patterns, policies, capabilities)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "QDRANT_URL": {
          "required": false,
          "description": "Qdrant Vector DB URL for patterns, policies, and capabilities storage",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "QDRANT_API_KEY": {
          "required": false,
          "description": "Qdrant API key for authentication",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "KUBECONFIG": {
          "required": false,
          "description": "Path to kubeconfig file for Kubernetes access",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "DOT_AI_SESSION_DIR": {
          "required": false,
          "description": "Session storage directory for workflow persistence",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "DEBUG_DOT_AI": {
          "required": false,
          "description": "Enable debug logging",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "DOT_AI_DOC_PATTERN": {
          "required": false,
          "description": "Documentation file pattern for discovery",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/vfarcic/dot-ai",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@vfarcic/dot-ai",
          "version": "0.90.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Anthropic API key for Claude AI integration (required for deployments)",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "ANTHROPIC_API_KEY"
            },
            {
              "description": "OpenAI API key for embeddings (patterns, policies, capabilities)",
              "format": "string",
              "is_secret": true,
              "name": "OPENAI_API_KEY"
            },
            {
              "description": "Qdrant Vector DB URL for patterns, policies, and capabilities storage",
              "format": "string",
              "default": "http://localhost:6333",
              "name": "QDRANT_URL"
            },
            {
              "description": "Qdrant API key for authentication",
              "format": "string",
              "is_secret": true,
              "name": "QDRANT_API_KEY"
            },
            {
              "description": "Path to kubeconfig file for Kubernetes access",
              "format": "string",
              "name": "KUBECONFIG"
            },
            {
              "description": "Session storage directory for workflow persistence",
              "format": "string",
              "name": "DOT_AI_SESSION_DIR"
            },
            {
              "description": "Enable debug logging",
              "format": "string",
              "name": "DEBUG_DOT_AI"
            },
            {
              "description": "Documentation file pattern for discovery",
              "format": "string",
              "name": "DOT_AI_DOC_PATTERN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T10:28:59.278154953Z",
      "updated_at": "2025-09-13T10:28:59.278154953Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0db74a8b-5a5f-49de-8f78-fd983d4a9c11",
      "name": "io.github.cameroncooke/XcodeBuildMCP",
      "category": "Community",
      "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
      "version": "1.12.7",
      "npm": "xcodebuildmcp",
      "command": "npx xcodebuildmcp@1.12.7",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cameroncooke/XcodeBuildMCP",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "xcodebuildmcp",
          "version": "1.12.7",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T19:05:37.138310617Z",
      "updated_at": "2025-09-09T19:54:23.231288713Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0e8d3570-c4fa-485a-87a0-b978a16f7910",
      "name": "ai.waystation/postgres",
      "category": "Community",
      "description": "Connect to your PostgreSQL database to query data and schemas.",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/postgres/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/postgres/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:46:09.489651945Z",
      "updated_at": "2025-09-09T14:46:09.489651945Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "0f9ce6bc-c6b5-4901-ba87-ac6dbf3bbc25",
      "name": "io.github.pshivapr/selenium-mcp",
      "category": "Community",
      "description": "Selenium Tools for MCP",
      "version": "0.4.1",
      "npm": "selenium-webdriver-mcp",
      "command": "npx selenium-webdriver-mcp@0.4.1",
      "env": {
        "YOUR_API_KEY": {
          "required": false,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/pshivapr/selenium-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "selenium-webdriver-mcp",
          "version": "0.4.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T13:43:51.350537778Z",
      "updated_at": "2025-09-11T13:43:51.350537778Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "10d39bdb-2500-4fbc-a54d-e651d6aa05f4",
      "name": "io.github.DeanWard/HAL",
      "category": "Community",
      "description": "HAL (HTTP API Layer) - An MCP server that provides HTTP API capabilities to Large Language Models",
      "version": "1.0.14",
      "npm": "hal-mcp",
      "command": "npx hal-mcp@1.0.14",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/DeanWard/HAL",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "hal-mcp",
          "version": "1.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T13:04:11.860929514Z",
      "updated_at": "2025-09-09T13:04:11.860929514Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "11139d6c-3cd1-43a3-bedf-94c30ba8b55b",
      "name": "ai.zine/mcp",
      "category": "Community",
      "description": "Your memory, everywhere AI goes. Build knowledge once, access it via MCP anywhere.",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://www.zine.ai/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T18:02:28.773521652Z",
      "updated_at": "2025-09-10T18:02:28.773521652Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "11664738-d823-4b8e-9ea6-092e8aa450b8",
      "name": "ai.smithery/mjucius-cozi_mcp",
      "category": "Community",
      "description": "Manage your family's calendars and lists in Cozi. View, create, and update appointments; organize…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mjucius/cozi_mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@mjucius/cozi_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T23:46:02.266315306Z",
      "updated_at": "2025-09-13T23:46:02.266315306Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "119ac356-7e94-4445-98e3-49ecea76cf07",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.5.10",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T05:10:59.806509357Z",
      "updated_at": "2025-09-12T05:10:59.806509357Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "142bc4e2-698d-494c-b700-ae62b468fbb7",
      "name": "io.github.florentine-ai/mcp",
      "category": "Community",
      "description": "MCP server for Florentine.ai - Natural language to MongoDB aggregations",
      "version": "0.1.4",
      "npm": "@florentine-ai/mcp",
      "command": "npx @florentine-ai/mcp@0.1.4",
      "env": {
        "FLORENTINE_TOKEN": {
          "required": true,
          "description": "Your Florentine.ai API key, get it from https://florentine.ai/dashboard",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "LLM_SERVICE": {
          "required": false,
          "description": "The LLM service to use, one of 'openai', 'anthropic', 'google' or 'deepseek' (must only be provided if you did not set it in your Florentine.ai account)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "LLM_KEY": {
          "required": false,
          "description": "Your API key for the LLM service (must only be provided if you did not set it in your Florentine.ai account)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "SESSION_ID": {
          "required": false,
          "description": "Session ID for maintaining server-side context across requests",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "RETURN_TYPES": {
          "required": false,
          "description": "Stringified JSON array of return types for the response",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "REQUIRED_INPUTS": {
          "required": false,
          "description": "Stringified JSON array of values for required inputs keys",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/florentine-ai/mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@florentine-ai/mcp",
          "version": "0.1.4",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtime_arguments": [
            {
              "is_required": true,
              "value": "@florentine-ai/mcp@latest",
              "type": "named",
              "name": "-y"
            }
          ],
          "package_arguments": [
            {
              "description": "The mode to run the MCP server in ('static' or 'dynamic')",
              "is_required": true,
              "value": "static",
              "type": "named",
              "name": "--mode"
            },
            {
              "description": "Set to true to enable debug logging",
              "format": "boolean",
              "type": "named",
              "name": "--debug"
            },
            {
              "description": "The path to the log file, must be provided if debug is true",
              "format": "filepath",
              "type": "named",
              "name": "--logpath"
            }
          ],
          "environment_variables": [
            {
              "description": "Your Florentine.ai API key, get it from https://florentine.ai/dashboard",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "FLORENTINE_TOKEN"
            },
            {
              "description": "The LLM service to use, one of 'openai', 'anthropic', 'google' or 'deepseek' (must only be provided if you did not set it in your Florentine.ai account)",
              "format": "string",
              "name": "LLM_SERVICE"
            },
            {
              "description": "Your API key for the LLM service (must only be provided if you did not set it in your Florentine.ai account)",
              "format": "string",
              "is_secret": true,
              "name": "LLM_KEY"
            },
            {
              "description": "Session ID for maintaining server-side context across requests",
              "format": "string",
              "name": "SESSION_ID"
            },
            {
              "description": "Stringified JSON array of return types for the response",
              "format": "string",
              "name": "RETURN_TYPES"
            },
            {
              "description": "Stringified JSON array of values for required inputs keys",
              "format": "string",
              "name": "REQUIRED_INPUTS"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T14:43:00.786960372Z",
      "updated_at": "2025-09-10T14:43:00.786960372Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "14b08127-6083-4132-a35f-34eb832f08c4",
      "name": "io.github.indragiek/uniprof",
      "category": "Community",
      "description": "Universal CPU profiler designed for humans and AI agents",
      "version": "0.3.4",
      "npm": "uniprof",
      "command": "npx uniprof@0.3.4",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/indragiek/uniprof",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "uniprof",
          "version": "0.3.4",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "mcp",
              "type": "positional"
            },
            {
              "value": "run",
              "type": "positional"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T00:59:36.873368238Z",
      "updated_at": "2025-09-11T00:59:36.873368238Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "14b6f291-19f8-4bfc-9e64-82cc728c7708",
      "name": "ai.smithery/PabloLec-keyprobe-mcp",
      "category": "Community",
      "description": "Audit certificates and keystores to surface expiry risks, weak algorithms, and misconfigurations.…",
      "version": "1.13.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/PabloLec/KeyProbe-MCP",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@PabloLec/keyprobe-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T18:08:11.479456255Z",
      "updated_at": "2025-09-10T18:08:11.479456255Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "160a7800-734c-43ab-84ba-81d2f04c042d",
      "name": "io.github.ruvnet/ruv-swarm",
      "category": "Community",
      "description": "Neural network swarm orchestration with WebAssembly acceleration and MCP integration",
      "version": "1.0.19",
      "npm": "ruv-swarm",
      "command": "npx ruv-swarm@1.0.19",
      "env": {
        "RUV_SWARM_LOG_LEVEL": {
          "required": false,
          "description": "Log level for ruv-swarm operations",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "RUV_SWARM_DB_PATH": {
          "required": false,
          "description": "Database path for persistence storage",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "RUV_SWARM_ENABLE_SIMD": {
          "required": false,
          "description": "Enable WebAssembly SIMD optimizations",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ruvnet/ruv-FANN",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "ruv-swarm",
          "version": "1.0.19",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Log level for ruv-swarm operations",
              "format": "string",
              "default": "info",
              "choices": [
                "debug",
                "info",
                "warn",
                "error"
              ],
              "name": "RUV_SWARM_LOG_LEVEL"
            },
            {
              "description": "Database path for persistence storage",
              "format": "string",
              "name": "RUV_SWARM_DB_PATH"
            },
            {
              "description": "Enable WebAssembly SIMD optimizations",
              "format": "boolean",
              "default": "true",
              "choices": [
                "true",
                "false"
              ],
              "name": "RUV_SWARM_ENABLE_SIMD"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T17:21:34.916674805Z",
      "updated_at": "2025-09-10T17:21:34.916674805Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "16e0a153-bf00-44e1-9eec-80c7c82d4773",
      "name": "io.github.domdomegg/airtable-mcp-server",
      "category": "Community",
      "description": "Read and write access to Airtable database schemas, tables, and records.",
      "version": "1.7.2",
      "npm": "airtable-mcp-server",
      "command": "npx airtable-mcp-server@1.7.2",
      "env": {
        "AIRTABLE_API_KEY": {
          "required": true,
          "description": "Airtable personal access token (e.g., pat123.abc123). Create at https://airtable.com/create/tokens/new with scopes: schema.bases:read, data.records:read, and optionally schema.bases:write and data.records:write.",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/domdomegg/airtable-mcp-server.git",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "airtable-mcp-server",
          "version": "1.7.2",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Airtable personal access token (e.g., pat123.abc123). Create at https://airtable.com/create/tokens/new with scopes: schema.bases:read, data.records:read, and optionally schema.bases:write and data.records:write.",
              "is_required": true,
              "is_secret": true,
              "name": "AIRTABLE_API_KEY"
            }
          ]
        },
        {
          "registry_type": "oci",
          "identifier": "domdomegg/airtable-mcp-server",
          "version": "1.7.2",
          "runtime_hint": "docker",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Airtable personal access token (e.g., pat123.abc123). Create at https://airtable.com/create/tokens/new with scopes: schema.bases:read, data.records:read, and optionally schema.bases:write and data.records:write.",
              "is_required": true,
              "is_secret": true,
              "name": "AIRTABLE_API_KEY"
            }
          ]
        },
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/domdomegg/airtable-mcp-server/releases/download/v1.7.2/airtable-mcp-server.mcpb",
          "version": "1.7.2",
          "file_sha256": "8220de07a08ebe908f04da139ea03dbfe29758141347e945da60535fb7bcca20",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T04:31:18.387709537Z",
      "updated_at": "2025-09-12T03:19:04.504086728Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "16f913d5-3f6f-450c-b786-76d38d374b10",
      "name": "com.mintmcp/gmail",
      "category": "Community",
      "description": "A MCP server server for Gmail that lets you search, read, and draft emails and replies.",
      "version": "1.0.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:44:30.662664985Z",
      "updated_at": "2025-09-09T19:49:24.179849796Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "1742332b-fc04-4efd-ad35-64d5ef1a1227",
      "name": "io.github.jkakar/recipe-mcp",
      "category": "Community",
      "description": "Generate and remix recipes using cookwith.co",
      "version": "1.0.4",
      "npm": "@cookwith/recipe-mcp",
      "command": "npx @cookwith/recipe-mcp@1.0.4",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/blaideinc/recipe-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cookwith/recipe-mcp",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T18:33:51.803815048Z",
      "updated_at": "2025-09-11T18:33:51.803815048Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "175bfcef-d334-420a-bedd-80f47cb1a53d",
      "name": "ai.smithery/pinion05-supabase-mcp-lite",
      "category": "Community",
      "description": "Same functionality, consuming only 1/20 of the context window tokens.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/pinion05/supabase-mcp-lite",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pinion05/supabase-mcp-lite/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T09:26:34.424829695Z",
      "updated_at": "2025-09-17T09:26:34.424829695Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "17de8cb0-997b-43c7-9bef-b3f1a59c188c",
      "name": "com.remote-mcp/registry-mcp",
      "category": "Community",
      "description": "An MCP server that serves informtaion from the official MCP registry",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/jaw9c/mcp-registry-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://registry-mcp.remote-mcp.com"
        },
        {
          "type": "sse",
          "url": "https://registry-mcp.remote-mcp.com/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T11:30:24.582712708Z",
      "updated_at": "2025-09-09T11:30:24.582712708Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "17f67eb6-fd05-4299-b453-ec64f85b2c50",
      "name": "io.scorecard/mcp",
      "category": "Community",
      "description": "MCP server providing access to the Scorecard API to evaluate and optimize LLM systems.",
      "version": "2.1.1",
      "npm": "scorecard-ai-mcp",
      "command": "npx scorecard-ai-mcp@2.1.1",
      "env": {
        "SCORECARD_API_KEY": {
          "required": true,
          "description": "Scorecard API key for authentication. Get your API key from https://app.scorecard.io/settings",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/scorecard-ai/scorecard-node",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.scorecard.io/mcp"
        }
      ],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "scorecard-ai-mcp",
          "version": "2.1.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Scorecard API key for authentication. Get your API key from https://app.scorecard.io/settings",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "SCORECARD_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T04:07:55.578778925Z",
      "updated_at": "2025-09-12T04:07:55.578778925Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "18d8185d-62e2-4d83-bbbc-37675b55ef26",
      "name": "app.zenable/zenable",
      "category": "Community",
      "description": "Zenable cleans up sloppy AI code and prevents vulnerabilities with deterministic guardrails",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.www.zenable.app/"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T14:04:47.647565515Z",
      "updated_at": "2025-09-10T14:04:47.647565515Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "18e0107f-76d1-4655-ad09-1c17763150aa",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "category": "Community",
      "description": "Sample .NET MCP Server",
      "version": "0.1.19-beta",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/timheuer/sampledotnetmcpserver",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.19-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T16:00:22.183688927Z",
      "updated_at": "2025-09-16T22:11:37.318046537Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "19236d9d-7d7e-40ea-bcb8-5ab23a75d4a7",
      "name": "ai.smithery/arjunkmrm-perplexity-search",
      "category": "Community",
      "description": "Enable AI assistants to perform web searches using Perplexity's Sonar Pro.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/arjunkmrm/perplexity-search",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/perplexity-search/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T13:59:26.758557156Z",
      "updated_at": "2025-09-10T13:59:26.758557156Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "195f28fb-411d-4e9b-8b97-0ee69c44c7d6",
      "name": "io.github.king-of-the-grackles/reddit-research-mcp",
      "category": "Community",
      "description": "Turn Reddit's chaos into structured insights with full citations - MCP server for Reddit research",
      "version": "0.1.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/king-of-the-grackles/reddit-research-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "identifier": "reddit-research-mcp",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T03:30:11.721350071Z",
      "updated_at": "2025-09-09T03:30:11.721350071Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "19c65252-d9f4-4e5c-9a87-b57990b03b5e",
      "name": "io.github.augmnt/augments-mcp-server",
      "category": "Community",
      "description": "Augments MCP Server - A comprehensive framework documentation provider for Claude Code",
      "version": "1.0.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/augmnt/augments-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "augments-mcp-server",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T16:52:50.968512218Z",
      "updated_at": "2025-09-12T16:52:50.968512218Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "19e98005-9ca2-4eca-84a9-6af3a8c689d0",
      "name": "ai.smithery/hustcc-mcp-mermaid",
      "category": "Community",
      "description": "Generate dynamic Mermaid diagrams and charts with AI assistance. Customize styles and export diagr…",
      "version": "0.1.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/hustcc/mcp-mermaid",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hustcc/mcp-mermaid/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T06:08:16.370383217Z",
      "updated_at": "2025-09-13T06:08:16.370383217Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "1be3d1ef-0844-4f16-a4b9-e34e458b5485",
      "name": "io.github.nesquikm/rubber-duck",
      "category": "Community",
      "description": "An MCP server that bridges to multiple OpenAI-compatible LLMs - your AI rubber duck debugging panel",
      "version": "1.1.1",
      "npm": "mcp-rubber-duck",
      "command": "npx mcp-rubber-duck@1.1.1",
      "env": {
        "OPENAI_API_KEY": {
          "required": false,
          "description": "OpenAI API key (starts with sk-)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "GEMINI_API_KEY": {
          "required": false,
          "description": "Google Gemini API key",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "GROQ_API_KEY": {
          "required": false,
          "description": "Groq API key (starts with gsk_)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "DEFAULT_PROVIDER": {
          "required": false,
          "description": "Default LLM provider to use",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/nesquikm/mcp-rubber-duck",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-rubber-duck",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "OpenAI API key (starts with sk-)",
              "format": "string",
              "is_secret": true,
              "name": "OPENAI_API_KEY"
            },
            {
              "description": "Google Gemini API key",
              "format": "string",
              "is_secret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "Groq API key (starts with gsk_)",
              "format": "string",
              "is_secret": true,
              "name": "GROQ_API_KEY"
            },
            {
              "description": "Default LLM provider to use",
              "format": "string",
              "name": "DEFAULT_PROVIDER"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T13:24:12.420293436Z",
      "updated_at": "2025-09-17T13:24:12.420293436Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "1cbefa81-a37b-45ad-bca6-cefce39cad21",
      "name": "io.github.karanb192/reddit-mcp-buddy",
      "category": "Community",
      "description": "Reddit MCP server - browse posts, search content, analyze users.",
      "version": "1.1.0",
      "npm": "reddit-mcp-buddy",
      "command": "npx reddit-mcp-buddy@1.1.0",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "reddit-mcp-buddy",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T15:39:49.253376736Z",
      "updated_at": "2025-09-17T15:39:49.253376736Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "1cc2e5dc-cf3d-48d2-bd0b-79c31dd6edd7",
      "name": "io.github.ref-tools/ref-tools-mcp",
      "category": "Community",
      "description": "Token efficient search for coding agents over public and private documentation.",
      "version": "3.0.1",
      "npm": "ref-tools-mcp",
      "command": "npx ref-tools-mcp@3.0.1",
      "env": {
        "REF_API_KEY": {
          "required": true,
          "description": "Your API key for Ref",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ref-tools/ref-tools-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "ref-tools-mcp",
          "version": "3.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for Ref",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "REF_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T20:04:16.022584551Z",
      "updated_at": "2025-09-09T20:04:16.022584551Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "1e90334c-ebe1-4973-afe7-68b76da27b52",
      "name": "io.github.gradion-ai/ipybox",
      "category": "Community",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "version": "0.6.3-p1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/gradion-ai/ipybox",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.3-p1",
          "runtime_hint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Required MCP server subcommand",
              "is_required": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "is_repeated": true,
              "value_hint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "is_repeated": true,
              "value_hint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "value_hint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "is_repeated": true,
              "value_hint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "value_hint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "is_repeated": true,
              "value_hint": "bind_mount"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T08:06:30.959441839Z",
      "updated_at": "2025-09-14T08:06:30.959441839Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "1f03f6b8-4a9d-45b3-9f7c-704390897d0b",
      "name": "com.supabase/mcp",
      "category": "Community",
      "description": "MCP server for interacting with the Supabase platform",
      "version": "0.5.4",
      "npm": "@supabase/mcp-server-supabase",
      "command": "npx @supabase/mcp-server-supabase@0.5.4",
      "env": {
        "SUPABASE_ACCESS_TOKEN": {
          "required": true,
          "description": "Personal access token for Supabase API",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/supabase-community/supabase-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@supabase/mcp-server-supabase",
          "version": "0.5.4",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtime_arguments": [
            {
              "description": "Supabase project reference ID",
              "format": "string",
              "type": "named",
              "name": "--project-ref"
            },
            {
              "description": "Enable read-only mode",
              "format": "boolean",
              "type": "named",
              "name": "--read-only"
            },
            {
              "description": "Comma-separated list of features to enable",
              "format": "string",
              "type": "named",
              "name": "--features"
            },
            {
              "description": "Custom API URL",
              "format": "string",
              "type": "named",
              "name": "--api-url"
            }
          ],
          "environment_variables": [
            {
              "description": "Personal access token for Supabase API",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "SUPABASE_ACCESS_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-15T20:35:36.816470801Z",
      "updated_at": "2025-09-15T20:35:36.816470801Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2052b35f-4321-4d32-88b9-0c4ca09771a0",
      "name": "io.github.ruvnet/flow-nexus",
      "category": "Community",
      "description": "Cloud-powered AI platform with multi-agent swarms, sandboxes, and workflow automation",
      "version": "0.1.121",
      "npm": "flow-nexus",
      "command": "npx flow-nexus@0.1.121",
      "env": {
        "FLOW_NEXUS_API_KEY": {
          "required": false,
          "description": "API key for Flow Nexus authentication",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "FLOW_NEXUS_BASE_URL": {
          "required": false,
          "description": "Base URL for Flow Nexus API",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "E2B_API_KEY": {
          "required": false,
          "description": "E2B API key for sandbox creation",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "ANTHROPIC_API_KEY": {
          "required": false,
          "description": "Anthropic API key for Claude integration",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ruvnet/flow-nexus",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "flow-nexus",
          "version": "0.1.121",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "API key for Flow Nexus authentication",
              "format": "string",
              "is_secret": true,
              "name": "FLOW_NEXUS_API_KEY"
            },
            {
              "description": "Base URL for Flow Nexus API",
              "format": "string",
              "name": "FLOW_NEXUS_BASE_URL"
            },
            {
              "description": "E2B API key for sandbox creation",
              "format": "string",
              "is_secret": true,
              "name": "E2B_API_KEY"
            },
            {
              "description": "Anthropic API key for Claude integration",
              "format": "string",
              "is_secret": true,
              "name": "ANTHROPIC_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T16:22:10.934865687Z",
      "updated_at": "2025-09-10T16:22:10.934865687Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2117fb24-f585-49b9-aa0e-e1633980e5ac",
      "name": "io.github.b1ff/atlassian-dc-mcp-confluence",
      "category": "Community",
      "description": "MCP server for Atlassian Confluence Data Center - access and manage content",
      "version": "0.9.9",
      "npm": "@atlassian-dc-mcp/confluence",
      "command": "npx @atlassian-dc-mcp/confluence@0.9.9",
      "env": {
        "CONFLUENCE_HOST": {
          "required": false,
          "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CONFLUENCE_API_BASE_PATH": {
          "required": false,
          "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CONFLUENCE_API_TOKEN": {
          "required": true,
          "description": "Confluence Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/confluence",
          "version": "0.9.9",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "CONFLUENCE_HOST"
            },
            {
              "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
              "format": "string",
              "name": "CONFLUENCE_API_BASE_PATH"
            },
            {
              "description": "Confluence Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CONFLUENCE_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T13:29:18.54035901Z",
      "updated_at": "2025-09-13T13:29:18.54035901Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "218d380f-328d-43a2-8811-1e38078fb7ab",
      "name": "app.thoughtspot/mcp-server",
      "category": "Community",
      "description": "MCP Server for ThoughtSpot - provides OAuth authentication and tools for querying data",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/thoughtspot/mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://agent.thoughtspot.app/mcp"
        },
        {
          "type": "sse",
          "url": "https://agent.thoughtspot.app/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://agent.thoughtspot.app/bearer/mcp",
          "headers": [
            {
              "description": "Bearer token for authentication, have the ts-host as 'token@ts-host' or as a separate 'x-ts-host' header",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            },
            {
              "description": "ThoughtSpot instance URL, if not provided in the authorization header",
              "is_required": true,
              "name": "X-TS-Host"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://agent.thoughtspot.app/bearer/sse",
          "headers": [
            {
              "description": "Bearer token for authentication, have the ts-host as 'token@ts-host' or as a separate 'x-ts-host' header",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            },
            {
              "description": "ThoughtSpot instance URL, if not provided in the authorization header",
              "is_required": true,
              "name": "X-TS-Host"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T20:14:22.451730803Z",
      "updated_at": "2025-09-17T20:15:17.375784438Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "21d4f4da-932c-4f65-8b5f-9cc4e24b7406",
      "name": "ai.smithery/smithery-notion",
      "category": "Community",
      "description": "A Notion workspace is a collaborative environment where teams can organize work, manage projects,…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/smithery-ai/mcp-servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery/notion/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T18:26:59.341637458Z",
      "updated_at": "2025-09-10T18:26:59.341637458Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "221fc588-c202-4bdf-ad8a-8b5843e604f7",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.5.7",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T04:24:04.024827907Z",
      "updated_at": "2025-09-12T04:28:40.56365786Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "24646991-b0ea-4ad2-b588-37034ff85880",
      "name": "ai.smithery/rfdez-pvpc-mcp-server",
      "category": "Community",
      "description": "Retrieve daily PVPC electricity tariffs for 2.0 TD consumers, published by Red Eléctrica.",
      "version": "3.2.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/rfdez/pvpc-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@rfdez/pvpc-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T16:57:17.590562136Z",
      "updated_at": "2025-09-10T16:57:17.590562136Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2483b5fd-74cb-482a-8d83-364b07fc6a2b",
      "name": "io.github.jkakar/cookwith-mcp",
      "category": "Community",
      "description": "AI-powered recipe generation and transformation tools by Cookwith",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/blaideinc/cookwith-mcp",
      "remotes": [],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T19:23:45.409934957Z",
      "updated_at": "2025-09-12T19:27:49.34612908Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "24a55245-1997-4508-bb34-05d67c9795ad",
      "name": "ai.shawndurrani/mcp-merchant",
      "category": "Community",
      "description": "Search-only commerce MCP server backed by Stripe (test)",
      "version": "0.1.1",
      "npm": "mcp-merchant",
      "command": "npx mcp-merchant@0.1.1",
      "env": {
        "STRIPE_SECRET_KEY": {
          "required": true,
          "description": "Stripe secret key (test mode)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "PRODUCT_LIMIT": {
          "required": false,
          "description": "Max products to cache",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "REFRESH_INTERVAL_SEC": {
          "required": false,
          "description": "Catalog refresh interval in seconds",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.shawndurrani.ai/sse"
        }
      ],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-merchant",
          "version": "0.1.1",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Stripe secret key (test mode)",
              "is_required": true,
              "is_secret": true,
              "name": "STRIPE_SECRET_KEY"
            },
            {
              "description": "Max products to cache",
              "default": "100",
              "name": "PRODUCT_LIMIT"
            },
            {
              "description": "Catalog refresh interval in seconds",
              "default": "600",
              "name": "REFRESH_INTERVAL_SEC"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-14T02:22:00.475570659Z",
      "updated_at": "2025-09-16T22:54:28.465114324Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "24ac8760-a6df-4111-bcb6-b2d77f2c42c1",
      "name": "io.github.anyproto/anytype-mcp",
      "category": "Community",
      "description": "Official MCP server for Anytype API - your encrypted, local and collaborative wiki.",
      "version": "1.0.7",
      "npm": "@anyproto/anytype-mcp",
      "command": "npx @anyproto/anytype-mcp@1.0.7",
      "env": {
        "OPENAPI_MCP_HEADERS": {
          "required": true,
          "description": "JSON string of headers for Anytype API. Example: {\"Authorization\":\"Bearer <YOUR_API_KEY>\", \"Anytype-Version\":\"2025-05-20\"}",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/anyproto/anytype-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@anyproto/anytype-mcp",
          "version": "1.0.7",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "JSON string of headers for Anytype API. Example: {\"Authorization\":\"Bearer <YOUR_API_KEY>\", \"Anytype-Version\":\"2025-05-20\"}",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "OPENAPI_MCP_HEADERS"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T11:42:47.920301036Z",
      "updated_at": "2025-09-17T11:42:47.920301036Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "251bf0dd-c4b0-4889-a9e1-447bd23d3d36",
      "name": "net.nymbo/tools",
      "category": "Community",
      "description": "Remote MCP server: fetch, search, Python, TTS, memory, image, video.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.nymbo.net/gradio_api/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T23:56:21.830662858Z",
      "updated_at": "2025-09-13T23:56:21.830662858Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "25a214da-4b05-45e3-832e-601fd8092aa1",
      "name": "io.github.formulahendry/code-runner",
      "category": "Community",
      "description": "Code Runner MCP Server which can run code in various programming languages.",
      "version": "0.1.8",
      "npm": "mcp-server-code-runner",
      "command": "npx mcp-server-code-runner@0.1.8",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/formulahendry/mcp-server-code-runner",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-code-runner",
          "version": "0.1.8",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T04:42:11.802682449Z",
      "updated_at": "2025-09-09T04:42:11.802682449Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "25d413a1-8cc0-491e-bfdd-cb759305516b",
      "name": "io.github.mfukushim/map-traveler-mcp",
      "category": "Community",
      "description": "Virtual traveler library for MCP",
      "version": "0.1.4",
      "npm": "@mfukushim/map-traveler-mcp",
      "command": "npx @mfukushim/map-traveler-mcp@0.1.4",
      "env": {
        "MT_GOOGLE_MAP_KEY": {
          "required": false,
          "description": "[Map] Google Map API key",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "MT_GEMINI_IMAGE_KEY": {
          "required": false,
          "description": "[Image.gemini] Gemini Image Api key",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "MT_MAX_RETRY_GEMINI": {
          "required": false,
          "description": "[Image.gemini] Number of retries when generating Gemini images Default: 0",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_AVATAR_IMAGE_URI": {
          "required": false,
          "description": "[Image.gemini] Character reference image uri (file:// or https://) when generating Gemini image. Multiple settings can be made by separating them with the '|'. When multiple settings are made, they will be selected randomly.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_MAP_API_URL": {
          "required": false,
          "description": "[Map.etc] Optional: Map API custom endpoint. Example: direction=https://xxxx,places=https://yyyy ",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_TIME_SCALE": {
          "required": false,
          "description": "[Map] Optional:Scale of travel time on real roads duration. default 4",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_SQLITE_PATH": {
          "required": false,
          "description": "[db.local] db save path: e.g. %USERPROFILE%/Desktop/traveler.sqlite ,$HOME/traveler.sqlite ",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_TURSO_URL": {
          "required": false,
          "description": "[db.api] Turso sqlite API URL",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_TURSO_TOKEN": {
          "required": false,
          "description": "[db.api] Turso sqlite API access token",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "MT_REMBG_PATH": {
          "required": false,
          "description": "[rembg.local] absolute path of the installed rembg cli",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_REMBG_URL": {
          "required": false,
          "description": "[rembg.api] withoutbg.com rembg API URL",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_REMBG_WO_KEY": {
          "required": false,
          "description": "[rembg.api] withoutbg.com rembg API key",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "MT_PIXAI_KEY": {
          "required": false,
          "description": "[Image.pixAi] pixAi API key",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "MT_SD_KEY": {
          "required": false,
          "description": "[Image.sd] Stability.ai image generation API key",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "MT_PIXAI_MODEL_ID": {
          "required": false,
          "description": "[Image.pixAi] Optional: pixAi ModelId, if not set use default model 1648918127446573124 ",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_COMFY_URL": {
          "required": false,
          "description": "[Image.local.ComfyUi] Option: Generate image using ComfyUI API at specified URL. Example: http://192.168.1.100:8188",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_COMFY_WORKFLOW_T2I": {
          "required": false,
          "description": "[Image.local.ComfyUi] Optional: Path to API workflow file when using text to image with ComfyUI. If not specified: assets/comfy/t2i_sample.json",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_COMFY_WORKFLOW_I2I": {
          "required": false,
          "description": "[Image.local.ComfyUi] Optional: Path of API workflow file when image to image in ComfyUI. If not specified: assets/comfy/i2i_sample.json",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_COMFY_PARAMS": {
          "required": false,
          "description": "[Image.local.ComfyUi] Optional: Variable values to send to the workflow via comfyUI API",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_FIXED_MODEL_PROMPT": {
          "required": false,
          "description": "[Image] Optional: Fixed avatar generation prompt. You will no longer be able to change your avatar during conversations.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_BODY_AREA_RATIO": {
          "required": false,
          "description": "[Image] Optional: Acceptable avatar image area ratio. default 0.042",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_BODY_HW_RATIO": {
          "required": false,
          "description": "[Image] Optional: Acceptable avatar image aspect ratios. default 1.5~2.3",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_BODY_WINDOW_RATIO_W": {
          "required": false,
          "description": "[Image] Optional: Avatar composite window horizontal ratio. default 0.5",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_BODY_WINDOW_RATIO_H": {
          "required": false,
          "description": "[Image] Optional: Avatar composite window aspect ratio. default 0.75",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_BS_ID": {
          "required": false,
          "description": "[Sns.Bs] Bluesky sns registration address",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_BS_PASS": {
          "required": false,
          "description": "[Sns.Bs] bluesky sns password",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "MT_BS_HANDLE": {
          "required": false,
          "description": "[Sns.Bs] bluesky sns handle name: e.g. xxxxxxxx.bsky.social ",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_FILTER_TOOLS": {
          "required": false,
          "description": "[etc] Optional: Directly filter the tools to be used. All are available if not specified. e.g. tips,set_traveler_location",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_MOVE_MODE": {
          "required": false,
          "description": "[etc] Option: Specify whether the movement mode is 'realtime' or 'skip'. default realtime",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_IMAGE_WIDTH": {
          "required": false,
          "description": "[Image] Option: Output image width (pixels) Default is 512",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_NO_IMAGE": {
          "required": false,
          "description": "[Image] Options: 'true' = do not output image, not specified = output image if possible, default is not specified",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_NO_AVATAR": {
          "required": false,
          "description": "[Image] Option: 'true' = Output StreetView image as is without avatar superimposition. Not specified = Superimpose avatar image. Default is not specified.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_FEED_TAG": {
          "required": false,
          "description": "[Sns] Optional: Specify the feed tag when posting to SNS (#required, 15 characters or more) Default is #geo_less_traveler",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_MAX_SESSIONS": {
          "required": false,
          "description": "[Streamable-http] Maximum number of sessions when using Streamable-http",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_SESSION_TTL_MS": {
          "required": false,
          "description": "[Streamable-http] Session TTL when using Streamable-http",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MT_SERVICE_TTL_MS": {
          "required": false,
          "description": "[Streamable-http] Service TTL when using Streamable-http",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mfukushim/map-traveler-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@mfukushim/map-traveler-mcp",
          "version": "0.1.4",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "[Map] Google Map API key",
              "format": "string",
              "is_secret": true,
              "name": "MT_GOOGLE_MAP_KEY"
            },
            {
              "description": "[Image.gemini] Gemini Image Api key",
              "format": "string",
              "is_secret": true,
              "name": "MT_GEMINI_IMAGE_KEY"
            },
            {
              "description": "[Image.gemini] Number of retries when generating Gemini images Default: 0",
              "format": "string",
              "name": "MT_MAX_RETRY_GEMINI"
            },
            {
              "description": "[Image.gemini] Character reference image uri (file:// or https://) when generating Gemini image. Multiple settings can be made by separating them with the '|'. When multiple settings are made, they will be selected randomly.",
              "format": "string",
              "name": "MT_AVATAR_IMAGE_URI"
            },
            {
              "description": "[Map.etc] Optional: Map API custom endpoint. Example: direction=https://xxxx,places=https://yyyy ",
              "format": "string",
              "name": "MT_MAP_API_URL"
            },
            {
              "description": "[Map] Optional:Scale of travel time on real roads duration. default 4",
              "format": "string",
              "name": "MT_TIME_SCALE"
            },
            {
              "description": "[db.local] db save path: e.g. %USERPROFILE%/Desktop/traveler.sqlite ,$HOME/traveler.sqlite ",
              "format": "string",
              "name": "MT_SQLITE_PATH"
            },
            {
              "description": "[db.api] Turso sqlite API URL",
              "format": "string",
              "name": "MT_TURSO_URL"
            },
            {
              "description": "[db.api] Turso sqlite API access token",
              "format": "string",
              "is_secret": true,
              "name": "MT_TURSO_TOKEN"
            },
            {
              "description": "[rembg.local] absolute path of the installed rembg cli",
              "format": "string",
              "name": "MT_REMBG_PATH"
            },
            {
              "description": "[rembg.api] withoutbg.com rembg API URL",
              "format": "string",
              "name": "MT_REMBG_URL"
            },
            {
              "description": "[rembg.api] withoutbg.com rembg API key",
              "format": "string",
              "is_secret": true,
              "name": "MT_REMBG_WO_KEY"
            },
            {
              "description": "[Image.pixAi] pixAi API key",
              "format": "string",
              "is_secret": true,
              "name": "MT_PIXAI_KEY"
            },
            {
              "description": "[Image.sd] Stability.ai image generation API key",
              "format": "string",
              "is_secret": true,
              "name": "MT_SD_KEY"
            },
            {
              "description": "[Image.pixAi] Optional: pixAi ModelId, if not set use default model 1648918127446573124 ",
              "format": "string",
              "name": "MT_PIXAI_MODEL_ID"
            },
            {
              "description": "[Image.local.ComfyUi] Option: Generate image using ComfyUI API at specified URL. Example: http://192.168.1.100:8188",
              "format": "string",
              "name": "MT_COMFY_URL"
            },
            {
              "description": "[Image.local.ComfyUi] Optional: Path to API workflow file when using text to image with ComfyUI. If not specified: assets/comfy/t2i_sample.json",
              "format": "string",
              "name": "MT_COMFY_WORKFLOW_T2I"
            },
            {
              "description": "[Image.local.ComfyUi] Optional: Path of API workflow file when image to image in ComfyUI. If not specified: assets/comfy/i2i_sample.json",
              "format": "string",
              "name": "MT_COMFY_WORKFLOW_I2I"
            },
            {
              "description": "[Image.local.ComfyUi] Optional: Variable values to send to the workflow via comfyUI API",
              "format": "string",
              "name": "MT_COMFY_PARAMS"
            },
            {
              "description": "[Image] Optional: Fixed avatar generation prompt. You will no longer be able to change your avatar during conversations.",
              "format": "string",
              "name": "MT_FIXED_MODEL_PROMPT"
            },
            {
              "description": "[Image] Optional: Acceptable avatar image area ratio. default 0.042",
              "format": "string",
              "name": "MT_BODY_AREA_RATIO"
            },
            {
              "description": "[Image] Optional: Acceptable avatar image aspect ratios. default 1.5~2.3",
              "format": "string",
              "name": "MT_BODY_HW_RATIO"
            },
            {
              "description": "[Image] Optional: Avatar composite window horizontal ratio. default 0.5",
              "format": "string",
              "name": "MT_BODY_WINDOW_RATIO_W"
            },
            {
              "description": "[Image] Optional: Avatar composite window aspect ratio. default 0.75",
              "format": "string",
              "name": "MT_BODY_WINDOW_RATIO_H"
            },
            {
              "description": "[Sns.Bs] Bluesky sns registration address",
              "format": "string",
              "name": "MT_BS_ID"
            },
            {
              "description": "[Sns.Bs] bluesky sns password",
              "format": "string",
              "is_secret": true,
              "name": "MT_BS_PASS"
            },
            {
              "description": "[Sns.Bs] bluesky sns handle name: e.g. xxxxxxxx.bsky.social ",
              "format": "string",
              "name": "MT_BS_HANDLE"
            },
            {
              "description": "[etc] Optional: Directly filter the tools to be used. All are available if not specified. e.g. tips,set_traveler_location",
              "format": "string",
              "name": "MT_FILTER_TOOLS"
            },
            {
              "description": "[etc] Option: Specify whether the movement mode is 'realtime' or 'skip'. default realtime",
              "format": "string",
              "name": "MT_MOVE_MODE"
            },
            {
              "description": "[Image] Option: Output image width (pixels) Default is 512",
              "format": "string",
              "name": "MT_IMAGE_WIDTH"
            },
            {
              "description": "[Image] Options: 'true' = do not output image, not specified = output image if possible, default is not specified",
              "format": "string",
              "name": "MT_NO_IMAGE"
            },
            {
              "description": "[Image] Option: 'true' = Output StreetView image as is without avatar superimposition. Not specified = Superimpose avatar image. Default is not specified.",
              "format": "string",
              "name": "MT_NO_AVATAR"
            },
            {
              "description": "[Sns] Optional: Specify the feed tag when posting to SNS (#required, 15 characters or more) Default is #geo_less_traveler",
              "format": "string",
              "name": "MT_FEED_TAG"
            },
            {
              "description": "[Streamable-http] Maximum number of sessions when using Streamable-http",
              "format": "string",
              "name": "MT_MAX_SESSIONS"
            },
            {
              "description": "[Streamable-http] Session TTL when using Streamable-http",
              "format": "string",
              "name": "MT_SESSION_TTL_MS"
            },
            {
              "description": "[Streamable-http] Service TTL when using Streamable-http",
              "format": "string",
              "name": "MT_SERVICE_TTL_MS"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T12:17:16.508389545Z",
      "updated_at": "2025-09-11T12:17:16.508389545Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "26bccebb-a881-4993-b339-5d2ea18fd2cb",
      "name": "io.github.MasonChow/source-map-parser-mcp",
      "category": "Community",
      "description": "Parse JavaScript error stack traces back to original source code using source maps",
      "version": "1.3.2",
      "npm": "source-map-parser-mcp",
      "command": "npx source-map-parser-mcp@1.3.2",
      "env": {
        "SOURCE_MAP_PARSER_CONTEXT_OFFSET_LINE": {
          "required": false,
          "description": "Context lines around error locations in source code",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "SOURCE_MAP_PARSER_RESOURCE_CACHE_MAX_SIZE": {
          "required": false,
          "description": "Maximum memory cache size in MB for source maps",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/MasonChow/source-map-parser-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "source-map-parser-mcp",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Context lines around error locations in source code",
              "format": "string",
              "name": "SOURCE_MAP_PARSER_CONTEXT_OFFSET_LINE"
            },
            {
              "description": "Maximum memory cache size in MB for source maps",
              "format": "string",
              "name": "SOURCE_MAP_PARSER_RESOURCE_CACHE_MAX_SIZE"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T15:03:12.048715379Z",
      "updated_at": "2025-09-10T15:03:12.048715379Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2735b14b-33d9-43d1-905f-1166e419ed82",
      "name": "io.github.jkakar/recipe-mcp",
      "category": "Community",
      "description": "Generate and remix recipes using cookwith.co",
      "version": "1.0.2",
      "npm": "@cookwith/recipe-mcp",
      "command": "npx @cookwith/recipe-mcp@1.0.2",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/blaideinc/recipe-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cookwith/recipe-mcp",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T18:27:40.577812923Z",
      "updated_at": "2025-09-11T18:30:58.534722167Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "27519bf0-ff62-4be2-8806-6d0c9c7cd079",
      "name": "io.github.dba-i/mssql-dba",
      "category": "Community",
      "description": "An MCP server that provides [describe what your server does]",
      "version": "1.0.0",
      "npm": "mssql-dba",
      "command": "npx mssql-dba@1.0.0",
      "env": {
        "YOUR_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/dba-i/mssql-dba",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mssql-dba",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-16T16:43:44.243434061Z",
      "updated_at": "2025-09-16T16:43:44.243434061Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "27d9860e-1449-4ff1-ab18-7adb02c09159",
      "name": "io.github.railwayapp/mcp-server",
      "category": "Community",
      "description": "Official Railway MCP server",
      "version": "0.1.5",
      "npm": "@railway/mcp-server",
      "command": "npx @railway/mcp-server@0.1.5",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/railwayapp/railway-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@railway/mcp-server",
          "version": "0.1.5",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T20:31:27.714450245Z",
      "updated_at": "2025-09-10T20:31:27.714450245Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "282edfdd-a4e5-46cb-877f-eae2ef06897c",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "category": "Community",
      "description": "Sample .NET MCP Server",
      "version": "0.1.28-beta",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/timheuer/sampledotnetmcpserver",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.28-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T01:27:02.813144548Z",
      "updated_at": "2025-09-17T01:44:26.048539235Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "28732cec-512d-49ec-940e-832ee19277bc",
      "name": "io.github.Antonytm/mcp-sitecore-server",
      "category": "Community",
      "description": "A Model Context Protocol server for Sitecore",
      "version": "1.3.2",
      "npm": "@antonytm/mcp-sitecore-server",
      "command": "npx @antonytm/mcp-sitecore-server@1.3.2",
      "env": {
        "": {
          "required": false,
          "description": "",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/Antonytm/mcp-sitecore-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-sitecore-server",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "name": ""
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T16:49:19.073211847Z",
      "updated_at": "2025-09-17T16:49:19.073211847Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "288ccf72-1fde-4754-8d0e-9d67a9795125",
      "name": "com.xcodebuildmcp/XcodeBuildMCP",
      "category": "Community",
      "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
      "version": "1.12.10",
      "npm": "xcodebuildmcp",
      "command": "npx xcodebuildmcp@1.12.10",
      "env": {
        "INCREMENTAL_BUILDS_ENABLED": {
          "required": false,
          "description": "Enable experimental xcodemake incremental builds (true/false or 1/0).",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "XCODEBUILDMCP_DYNAMIC_TOOLS": {
          "required": false,
          "description": "Enable AI-powered dynamic tool discovery to load only relevant workflows.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "XCODEBUILDMCP_ENABLED_WORKFLOWS": {
          "required": false,
          "description": "Comma-separated list of workflows to load in Static Mode (e.g., 'simulator,device,project-discovery').",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "XCODEBUILDMCP_SENTRY_DISABLED": {
          "required": false,
          "description": "Disable Sentry error reporting (preferred flag).",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "XCODEBUILDMCP_DEBUG": {
          "required": false,
          "description": "Enable verbose debug logging from the server.",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cameroncooke/XcodeBuildMCP",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "xcodebuildmcp",
          "version": "1.12.10",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Enable experimental xcodemake incremental builds (true/false or 1/0).",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false",
                "1",
                "0"
              ],
              "name": "INCREMENTAL_BUILDS_ENABLED"
            },
            {
              "description": "Enable AI-powered dynamic tool discovery to load only relevant workflows.",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false"
              ],
              "name": "XCODEBUILDMCP_DYNAMIC_TOOLS"
            },
            {
              "description": "Comma-separated list of workflows to load in Static Mode (e.g., 'simulator,device,project-discovery').",
              "format": "string",
              "name": "XCODEBUILDMCP_ENABLED_WORKFLOWS"
            },
            {
              "description": "Disable Sentry error reporting (preferred flag).",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false"
              ],
              "name": "XCODEBUILDMCP_SENTRY_DISABLED"
            },
            {
              "description": "Enable verbose debug logging from the server.",
              "format": "boolean",
              "default": "false",
              "choices": [
                "true",
                "false"
              ],
              "name": "XCODEBUILDMCP_DEBUG"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T14:44:46.398091571Z",
      "updated_at": "2025-09-10T14:44:46.398091571Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "29029c32-4067-48c0-b831-058bc34623a1",
      "name": "com.mintmcp/outlook-email",
      "category": "Community",
      "description": "A MCP server for Outlook email that lets you search, read, and draft emails and replies.",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://outlook-email.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T20:02:38.025522049Z",
      "updated_at": "2025-09-09T20:02:38.025522049Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "292995df-7000-4eda-9cdb-2048ac93e8c4",
      "name": "ai.smithery/smithery-toolbox",
      "category": "Community",
      "description": "Toolbox dynamically routes to all MCPs in the Smithery registry based on your agent's need. When a…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery/toolbox/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T20:39:40.188723394Z",
      "updated_at": "2025-09-10T20:39:40.188723394Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2a4159ec-d44c-4b6b-85c5-67aa9d054fa0",
      "name": "io.github.spences10/mcp-sqlite-tools",
      "category": "Community",
      "description": "MCP server for local SQLite database operations",
      "version": "0.0.11",
      "npm": "mcp-sqlite-tools",
      "command": "npx mcp-sqlite-tools@0.0.11",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/spences10/mcp-sqlite-tools",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-sqlite-tools",
          "version": "0.0.11",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T19:01:31.903922632Z",
      "updated_at": "2025-09-10T19:01:31.903922632Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2aa61ac7-1ddc-4b02-9493-2bf42458130c",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.4.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T01:00:19.713725403Z",
      "updated_at": "2025-09-11T01:06:15.729222586Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2aaa0953-917f-43d5-bbe3-d4c99688a86b",
      "name": "ai.smithery/smithery-ai-cookbook-ts-smithery-cli",
      "category": "Community",
      "description": "A simple Typescript MCP server built using the official MCP Typescript SDK and smithery/cli. This…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/smithery-ai/smithery-cookbook",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/cookbook-ts-smithery-cli/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T12:45:28.964187978Z",
      "updated_at": "2025-09-13T12:45:28.964187978Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2ad4f9a6-1c40-4839-948a-9749d9435395",
      "name": "ai.smithery/brave",
      "category": "Community",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "version": "1.3.7",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/brave/brave-search-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T19:25:38.948771647Z",
      "updated_at": "2025-09-12T14:23:41.796186943Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2b930666-203a-431f-838e-34c408c93126",
      "name": "ai.smithery/Kryptoskatt-mcp-server",
      "category": "Community",
      "description": "Enable AI assistants to interact seamlessly with the DefiLlama API by translating MCP tool calls i…",
      "version": "0.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Kryptoskatt/mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T19:42:06.349266762Z",
      "updated_at": "2025-09-17T10:41:17.53656895Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2bfeb809-2c63-4a03-94b6-5a9e316cda41",
      "name": "ai.smithery/smithery-ai-national-weather-service",
      "category": "Community",
      "description": "Provide real-time and forecast weather information for locations in the United States using natura…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/smithery-ai/mcp-servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/national-weather-service/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T02:29:56.9281054Z",
      "updated_at": "2025-09-11T02:29:56.9281054Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2d44fea0-9779-4e2b-b37f-fb8c4fd42e6e",
      "name": "ai.smithery/docfork-mcp",
      "category": "Community",
      "description": "@latest documentation and code examples to 9000+ libraries for LLMs and AI code editors in a singl…",
      "version": "0.6.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/docfork/docfork-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@docfork/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T21:06:07.509501146Z",
      "updated_at": "2025-09-12T18:25:16.141869963Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2d6c8c1c-bbd0-4bd1-8a22-1fbb8c23014b",
      "name": "io.github.shalevshalit/image-recognition-mcp",
      "category": "Community",
      "description": "MCP server for AI-powered image recognition and description using OpenAI vision models.",
      "version": "1.0.0",
      "npm": "image-recognition-mcp",
      "command": "npx image-recognition-mcp@1.0.0",
      "env": {
        "OPENAI_API_KEY": {
          "required": true,
          "description": "Your OpenAI API key for image recognition and description services",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcp-s-ai/image-recognition-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "image-recognition-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your OpenAI API key for image recognition and description services",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T15:18:06.73756302Z",
      "updated_at": "2025-09-10T15:18:06.73756302Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2dafc3fb-4bde-4a22-aac2-9d3dc3c78f74",
      "name": "app.thoughtspot/mcp-server",
      "category": "Community",
      "description": "MCP Server for ThoughtSpot - provides OAuth authentication and tools for querying data",
      "version": "0.5.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/thoughtspot/mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://agent.thoughtspot.app/mcp"
        },
        {
          "type": "sse",
          "url": "https://agent.thoughtspot.app/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T20:04:01.821026897Z",
      "updated_at": "2025-09-17T20:14:22.510543332Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2de2ee3a-fc9a-4ac4-8ded-3fda14b29051",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "category": "Community",
      "description": "Sample .NET MCP Server",
      "version": "0.1.30-beta",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/timheuer/sampledotnetmcpserver",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.30-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T01:44:26.040148686Z",
      "updated_at": "2025-09-17T01:44:26.040148686Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2e84c83f-1672-4916-a337-84e76d93b4e2",
      "name": "io.github.pshivapr/selenium-mcp",
      "category": "Community",
      "description": "Selenium Tools for MCP",
      "version": "0.3.8",
      "npm": "selenium-webdriver-mcp",
      "command": "npx selenium-webdriver-mcp@0.3.8",
      "env": {
        "YOUR_API_KEY": {
          "required": false,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/pshivapr/selenium-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "selenium-webdriver-mcp",
          "version": "0.3.8",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T13:53:12.051952089Z",
      "updated_at": "2025-09-09T19:08:26.438447364Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2eff9885-def0-4f46-84df-d1a4ae2cd697",
      "name": "ai.smithery/hithereiamaliff-mcp-datagovmy",
      "category": "Community",
      "description": "This MCP server provides seamless access to Malaysia's government open data, including datasets, w…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/hithereiamaliff/mcp-datagovmy",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hithereiamaliff/mcp-datagovmy/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T05:56:30.066840479Z",
      "updated_at": "2025-09-11T05:56:30.066840479Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2f082904-ddd0-4f6e-8d12-f655111b2bc0",
      "name": "app.thoughtspot/mcp-server",
      "category": "Community",
      "description": "MCP Server for ThoughtSpot - provides OAuth authentication and tools for querying data",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/thoughtspot/mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://agent.thoughtspot.app/mcp"
        },
        {
          "type": "sse",
          "url": "https://agent.thoughtspot.app/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://agent.thoughtspot.app/bearer/mcp",
          "headers": [
            {
              "description": "Bearer token for authentication, have the ts-host as 'token@ts-host' or as a separate 'x-ts-host' header",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            },
            {
              "description": "ThoughtSpot instance URL, if not provided in the authorization header",
              "name": "X-TS-Host"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://agent.thoughtspot.app/bearer/sse",
          "headers": [
            {
              "description": "Bearer token for authentication, have the ts-host as 'token@ts-host' or as a separate 'x-ts-host' header",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            },
            {
              "description": "ThoughtSpot instance URL, if not provided in the authorization header",
              "name": "X-TS-Host"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T20:15:17.362824581Z",
      "updated_at": "2025-09-17T20:15:17.362824581Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2f4d81e5-6933-4117-882b-105c9f0e0da5",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "category": "Community",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "version": "0.0.15",
      "npm": "@himorishige/hatago-mcp-hub",
      "command": "npx @himorishige/hatago-mcp-hub@0.0.15",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/himorishige/hatago-mcp-hub",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.15",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-14T10:38:58.007599947Z",
      "updated_at": "2025-09-14T14:57:18.60721393Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "2f7c96af-4749-405b-9721-8e2651ff347b",
      "name": "io.github.p1va/symbols",
      "category": "Community",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "version": "0.0.12",
      "npm": "@p1va/symbols",
      "command": "npx @p1va/symbols@0.0.12",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/p1va/symbols",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.12",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-16T10:02:42.424531594Z",
      "updated_at": "2025-09-16T10:02:42.424531594Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "30080003-fbcd-4552-b40e-a1c192d1f412",
      "name": "io.github.joelverhagen/Knapcode.SampleMcpServer",
      "category": "Community",
      "description": "A sample MCP server using the MCP C# SDK. Generates random numbers and random weather.",
      "version": "0.7.0-beta",
      "npm": null,
      "command": null,
      "env": {
        "WEATHER_CHOICES": {
          "required": false,
          "description": "",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/joelverhagen/Knapcode.SampleMcpServer.git",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "registry_base_url": "https://api.nuget.org",
          "identifier": "Knapcode.SampleMcpServer",
          "version": "0.7.0-beta",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "mcp",
              "type": "positional",
              "value_hint": "mcp"
            },
            {
              "value": "start",
              "type": "positional",
              "value_hint": "start"
            }
          ],
          "environment_variables": [
            {
              "value": "{weather_choices}",
              "variables": {
                "weather_choices": {
                  "description": "Comma separated list of weather descriptions to randomly select.",
                  "is_required": true
                }
              },
              "name": "WEATHER_CHOICES"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T15:42:35.512389899Z",
      "updated_at": "2025-09-12T15:42:35.512389899Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "302ebbc8-8b7f-4952-9706-7ad2ade5fd38",
      "name": "io.github.cr7258/elasticsearch-mcp-server",
      "category": "Community",
      "description": "MCP server for interacting with Elasticsearch",
      "version": "2.0.15",
      "npm": null,
      "command": null,
      "env": {
        "ELASTICSEARCH_HOSTS": {
          "required": false,
          "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "ELASTICSEARCH_API_KEY": {
          "required": false,
          "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "ELASTICSEARCH_USERNAME": {
          "required": false,
          "description": "Username for basic authentication (alternative to API key)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "ELASTICSEARCH_PASSWORD": {
          "required": false,
          "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "ELASTICSEARCH_VERIFY_CERTS": {
          "required": false,
          "description": "Whether to verify SSL certificates (true/false)",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cr7258/elasticsearch-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "elasticsearch-mcp-server",
          "version": "2.0.15",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
              "format": "string",
              "default": "https://localhost:9200",
              "name": "ELASTICSEARCH_HOSTS"
            },
            {
              "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
              "format": "string",
              "is_secret": true,
              "name": "ELASTICSEARCH_API_KEY"
            },
            {
              "description": "Username for basic authentication (alternative to API key)",
              "format": "string",
              "name": "ELASTICSEARCH_USERNAME"
            },
            {
              "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
              "format": "string",
              "is_secret": true,
              "name": "ELASTICSEARCH_PASSWORD"
            },
            {
              "description": "Whether to verify SSL certificates (true/false)",
              "format": "boolean",
              "default": "false",
              "name": "ELASTICSEARCH_VERIFY_CERTS"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T14:34:34.758628029Z",
      "updated_at": "2025-09-15T14:34:34.758628029Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "309d5dbf-3f27-4235-ae4d-56a1bb0285d1",
      "name": "ai.alpic.test/test-mcp-server",
      "category": "Community",
      "description": "Alpic Test MCP Server - great server!",
      "version": "0.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://test.alpic.ai/"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T13:57:43.256738808Z",
      "updated_at": "2025-09-10T13:57:43.256738808Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "31a850e0-2f62-4d61-b128-6c4bca76bdd1",
      "name": "com.mintmcp/outlook-calendar",
      "category": "Community",
      "description": "A MCP server that works with Outlook Calendar to manage event listing, reading, and updates.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://outlook-calendar.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T20:03:56.940660247Z",
      "updated_at": "2025-09-09T20:03:56.940660247Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "31e8d9b1-e043-4594-8ccc-6cd7b829fa6c",
      "name": "ai.smithery/ImRonAI-mcp-server-browserbase",
      "category": "Community",
      "description": "Automate cloud browsers to navigate websites, interact with elements, and extract structured data.…",
      "version": "2.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ImRonAI/mcp-server-browserbase",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ImRonAI/mcp-server-browserbase/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T06:05:33.453618608Z",
      "updated_at": "2025-09-16T06:05:33.453618608Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3295b540-5655-4ddd-9726-8dd060e7e05a",
      "name": "com.mintmcp/gcal",
      "category": "Community",
      "description": "A MintMCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:35:28.121701943Z",
      "updated_at": "2025-09-09T19:36:28.010860991Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "32d74c21-60c3-4dde-afe7-4ade73371301",
      "name": "io.github.huoshuiai42/huoshui-fetch",
      "category": "Community",
      "description": "An MCP server that provides tools for fetching, converting, and extracting data from web pages.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/huoshuiai42/huoshui-fetch",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "huoshui-fetch",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T01:33:53.944848968Z",
      "updated_at": "2025-09-11T01:33:53.944848968Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "34d352da-6c0f-4348-8cb5-f1c44f7eb7dd",
      "name": "io.github.bytedance/mcp-server-browser",
      "category": "Community",
      "description": "MCP server for browser use access",
      "version": "1.0.0",
      "npm": "@agent-infra/mcp-server-browser",
      "command": "npx @agent-infra/mcp-server-browser@latest",
      "env": {
        "DISPLAY": {
          "required": false,
          "description": "DISPLAY environment variable for browser rendering",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/bytedance/UI-TARS-desktop",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-browser",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "browser or chrome channel to use, possible values: chrome, edge, firefox.",
              "format": "string",
              "type": "named",
              "name": "browser"
            },
            {
              "description": "Chrome DevTools Protocol endpoint URL",
              "format": "string",
              "type": "named",
              "name": "cdp-endpoint"
            },
            {
              "description": "WebSocket endpoint to connect to, for example",
              "format": "string",
              "type": "named",
              "name": "ws-endpoint"
            },
            {
              "description": "Path to the browser executable",
              "format": "string",
              "type": "named",
              "name": "executable-path"
            },
            {
              "description": "Path to the output directory",
              "format": "string",
              "type": "named",
              "name": "output-dir"
            },
            {
              "description": "Comma-separated list of patterns to bypass the proxy",
              "format": "string",
              "type": "named",
              "name": "proxy-bypass"
            },
            {
              "description": "Proxy server address",
              "format": "string",
              "type": "named",
              "name": "proxy-server"
            },
            {
              "description": "Run server that uses screenshots (Aria snapshots are used by default)",
              "format": "boolean",
              "type": "named",
              "name": "vision"
            }
          ],
          "environment_variables": [
            {
              "description": "DISPLAY environment variable for browser rendering",
              "format": "string",
              "name": "DISPLAY"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-browser",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "package_arguments": [
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            },
            {
              "description": "browser or chrome channel to use, possible values: chrome, edge, firefox.",
              "format": "string",
              "type": "named",
              "name": "browser"
            },
            {
              "description": "Chrome DevTools Protocol endpoint URL",
              "format": "string",
              "type": "named",
              "name": "cdp-endpoint"
            },
            {
              "description": "WebSocket endpoint to connect to, for example",
              "format": "string",
              "type": "named",
              "name": "ws-endpoint"
            },
            {
              "description": "Path to the browser executable",
              "format": "string",
              "type": "named",
              "name": "executable-path"
            },
            {
              "description": "Path to the output directory",
              "format": "string",
              "type": "named",
              "name": "output-dir"
            },
            {
              "description": "Comma-separated list of patterns to bypass the proxy",
              "format": "string",
              "type": "named",
              "name": "proxy-bypass"
            },
            {
              "description": "Proxy server address",
              "format": "string",
              "type": "named",
              "name": "proxy-server"
            },
            {
              "description": "Run server that uses screenshots (Aria snapshots are used by default)",
              "format": "boolean",
              "type": "named",
              "name": "vision"
            }
          ],
          "environment_variables": [
            {
              "description": "DISPLAY environment variable for browser rendering",
              "format": "string",
              "name": "DISPLAY"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-browser",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "package_arguments": [
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            },
            {
              "description": "browser or chrome channel to use, possible values: chrome, edge, firefox.",
              "format": "string",
              "type": "named",
              "name": "browser"
            },
            {
              "description": "Chrome DevTools Protocol endpoint URL",
              "format": "string",
              "type": "named",
              "name": "cdp-endpoint"
            },
            {
              "description": "WebSocket endpoint to connect to, for example",
              "format": "string",
              "type": "named",
              "name": "ws-endpoint"
            },
            {
              "description": "Path to the browser executable",
              "format": "string",
              "type": "named",
              "name": "executable-path"
            },
            {
              "description": "Path to the output directory",
              "format": "string",
              "type": "named",
              "name": "output-dir"
            },
            {
              "description": "Comma-separated list of patterns to bypass the proxy",
              "format": "string",
              "type": "named",
              "name": "proxy-bypass"
            },
            {
              "description": "Proxy server address",
              "format": "string",
              "type": "named",
              "name": "proxy-server"
            },
            {
              "description": "Run server that uses screenshots (Aria snapshots are used by default)",
              "format": "boolean",
              "type": "named",
              "name": "vision"
            }
          ],
          "environment_variables": [
            {
              "description": "DISPLAY environment variable for browser rendering",
              "format": "string",
              "name": "DISPLAY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T06:16:24.728252874Z",
      "updated_at": "2025-09-09T06:16:24.728252874Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "35516102-2530-4e9f-9c13-4e613c3375f3",
      "name": "ai.smithery/yuna0x0-anilist-mcp",
      "category": "Community",
      "description": "Access and interact with anime and manga data seamlessly. Retrieve detailed information about your…",
      "version": "1.3.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/yuna0x0/anilist-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/anilist-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T08:34:23.401483403Z",
      "updated_at": "2025-09-13T08:34:23.401483403Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "36b0da99-4b6f-4d12-b60f-b66950d8600d",
      "name": "ai.smithery/BigVik193-reddit-ads-mcp-test",
      "category": "Community",
      "description": "Manage Reddit advertising end-to-end: browse ad accounts and payment methods, and organize campaig…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BigVik193/reddit-ads-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp-test/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T21:38:57.98433852Z",
      "updated_at": "2025-09-14T21:38:57.98433852Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "36c22c9a-0448-40af-8312-2fb36b8b7cea",
      "name": "io.github.croit/mcp-croit-ceph",
      "category": "Community",
      "description": "MCP server for Croit Ceph cluster management with dynamic OpenAPI tool generation",
      "version": "0.2.16",
      "npm": null,
      "command": null,
      "env": {
        "CROIT_HOST": {
          "required": false,
          "description": "Croit cluster URL (e.g., http://your-cluster.croit.io:8080)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CROIT_API_TOKEN": {
          "required": false,
          "description": "API authentication token for Croit cluster",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/croit/mcp-croit-ceph",
      "remotes": [],
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "croit/mcp-croit-ceph",
          "version": "0.2.16",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Croit cluster URL (e.g., http://your-cluster.croit.io:8080)",
              "name": "CROIT_HOST"
            },
            {
              "description": "API authentication token for Croit cluster",
              "name": "CROIT_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T09:30:42.325917413Z",
      "updated_at": "2025-09-17T09:30:42.325917413Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "37a73b98-7065-4144-8bd2-9b7aa57340a5",
      "name": "io.github.karanb192/reddit-buddy-mcp",
      "category": "Community",
      "description": "Reddit MCP server - browse posts, search content, analyze users.",
      "version": "1.0.6-test.7",
      "npm": "@karanb192/reddit-buddy-mcp",
      "command": "npx @karanb192/reddit-buddy-mcp@1.0.6-test.7",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "@karanb192/reddit-buddy-mcp",
          "version": "1.0.6-test.7",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T07:27:45.7983415Z",
      "updated_at": "2025-09-15T07:27:45.7983415Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "37cb7306-1433-4aae-9aa4-79eaedfb7b5a",
      "name": "com.devcycle/mcp",
      "category": "Community",
      "description": "DevCycle MCP server for feature flag management",
      "version": "6.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/DevCycleHQ/cli",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.devcycle.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.devcycle.com/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T20:28:36.449466527Z",
      "updated_at": "2025-09-17T20:28:36.449466527Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3ace42d4-426f-4aed-bb97-1ef46d6cdcb5",
      "name": "io.github.cr7258/elasticsearch-mcp-server",
      "category": "Community",
      "description": "MCP server for interacting with Elasticsearch",
      "version": "2.0.14",
      "npm": null,
      "command": null,
      "env": {
        "ELASTICSEARCH_HOSTS": {
          "required": false,
          "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "ELASTICSEARCH_API_KEY": {
          "required": false,
          "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "ELASTICSEARCH_USERNAME": {
          "required": false,
          "description": "Username for basic authentication (alternative to API key)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "ELASTICSEARCH_PASSWORD": {
          "required": false,
          "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "ELASTICSEARCH_VERIFY_CERTS": {
          "required": false,
          "description": "Whether to verify SSL certificates (true/false)",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cr7258/elasticsearch-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "elasticsearch-mcp-server",
          "version": "2.0.14",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
              "format": "string",
              "default": "https://localhost:9200",
              "name": "ELASTICSEARCH_HOSTS"
            },
            {
              "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
              "format": "string",
              "is_secret": true,
              "name": "ELASTICSEARCH_API_KEY"
            },
            {
              "description": "Username for basic authentication (alternative to API key)",
              "format": "string",
              "name": "ELASTICSEARCH_USERNAME"
            },
            {
              "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
              "format": "string",
              "is_secret": true,
              "name": "ELASTICSEARCH_PASSWORD"
            },
            {
              "description": "Whether to verify SSL certificates (true/false)",
              "format": "boolean",
              "default": "false",
              "name": "ELASTICSEARCH_VERIFY_CERTS"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T03:19:12.574630083Z",
      "updated_at": "2025-09-15T14:34:34.785294588Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3b9a8107-0e4f-4b30-b1af-004ba2e5db16",
      "name": "io.github.nerfels/mind-map",
      "category": "Community",
      "description": "Experimental code intelligence platform for Claude Code with AST parsing and context analysis",
      "version": "1.12.13",
      "npm": "mind-map-mcp",
      "command": "npx mind-map-mcp@1.12.13",
      "env": {
        "MCP_PROJECT_ROOT": {
          "required": false,
          "description": "Project root directory for MCP to analyze (optional - uses current working directory if not specified)",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/nerfels/mind-map",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mind-map-mcp",
          "version": "1.12.13",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Project root directory for MCP to analyze (optional - uses current working directory if not specified)",
              "format": "string",
              "name": "MCP_PROJECT_ROOT"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-16T16:29:26.08179909Z",
      "updated_at": "2025-09-16T16:29:26.08179909Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3ba865b1-cea7-4427-851b-f5ab05a6ace1",
      "name": "io.github.cmpxchg16/mcp-ethical-hacking",
      "category": "Community",
      "description": "An MCP server that provides LinkedIn & Reddit data",
      "version": "1.3.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cmpxchg16/mcp-ethical-hacking",
      "remotes": [],
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/cmpxchg16/mcp-ethical-hacking/releases/download/v1.3.0/server.mcpb",
          "version": "1.3.0",
          "file_sha256": "294365cbf53a602df093e3757e6a31cca6c50dd6af343fefa4a528ab869d24a0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T12:56:52.957978875Z",
      "updated_at": "2025-09-16T04:55:02.308871938Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3bd6e07f-df97-48f4-8ae1-58c1682f3255",
      "name": "com.mintmcp/gmail",
      "category": "Community",
      "description": "A MintMCP server for Gmail that lets you search, read, and draft emails and replies.",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:25:39.933995125Z",
      "updated_at": "2025-09-09T19:44:30.666451776Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3c4fd086-a0bc-46f9-9f71-cb3709dacf33",
      "name": "io.github.lapfelix/xcodemcp",
      "category": "Community",
      "description": "Control Xcode directly via JXA for build, test, debug operations with XCLogParser integration",
      "version": "2.1.2",
      "npm": "xcodemcp",
      "command": "npx xcodemcp@2.1.2",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/lapfelix/XcodeMCP",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "xcodemcp",
          "version": "2.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-16T18:37:57.587730906Z",
      "updated_at": "2025-09-16T18:37:57.587730906Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3d452687-9ce1-4b5e-98b9-2fbf1fb7abb7",
      "name": "io.github.variflight/variflight-mcp",
      "category": "Community",
      "description": "Variflight MCP Server",
      "version": "1.0.1",
      "npm": "@variflight-ai/variflight-mcp",
      "command": "npx @variflight-ai/variflight-mcp@1.0.0",
      "env": {
        "VARIFLIGHT_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/variflight/variflight-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@variflight-ai/variflight-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "VARIFLIGHT_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T13:43:56.480560569Z",
      "updated_at": "2025-09-12T07:06:18.911110007Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3dc93eed-43b9-4a3d-9ed2-c40a39084e56",
      "name": "io.github.cmpxchg16/mcp-ethical-hacking",
      "category": "Community",
      "description": "An MCP server that provides LinkedIn & Reddit data",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cmpxchg16/mcp-ethical-hacking",
      "remotes": [],
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/cmpxchg16/mcp-ethical-hacking/releases/download/v1.0.0/server.mcpb",
          "version": "1.0.0",
          "file_sha256": "fe333e598595000ae021bd27117db32ec69af6987f507ba7a63c90638ff633ce",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T16:13:29.782164285Z",
      "updated_at": "2025-09-15T11:11:03.326685721Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3e81fe2c-e973-4e0e-8aa1-d4c20b9aa106",
      "name": "io.github.savhascelik/meta-api-mcp-server",
      "category": "Community",
      "description": "You can connect any API to LLMs. This enables AI to interact directly with APIs",
      "version": "1.0.1",
      "npm": "meta-api-mcp-server",
      "command": "npx meta-api-mcp-server@1.0.4",
      "env": {
        "YOUR_API_KEY": {
          "required": true,
          "description": "If the api you are connecting to requires api_key, you can use this variable and you can also define different variables",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/savhascelik/meta-api-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "meta-api-mcp-server",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "If the api you are connecting to requires api_key, you can use this variable and you can also define different variables",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T04:14:51.983727698Z",
      "updated_at": "2025-09-09T04:14:51.983727698Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3ea9d856-0c93-4fcd-9d83-ede67968a5f4",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "category": "Community",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "version": "0.9.9",
      "npm": "@atlassian-dc-mcp/bitbucket",
      "command": "npx @atlassian-dc-mcp/bitbucket@0.9.9",
      "env": {
        "BITBUCKET_HOST": {
          "required": false,
          "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "BITBUCKET_API_BASE_PATH": {
          "required": false,
          "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "BITBUCKET_API_TOKEN": {
          "required": true,
          "description": "Bitbucket Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.9",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T13:29:18.888401856Z",
      "updated_at": "2025-09-13T13:29:18.888401856Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "3ee8a0e0-fb00-4d94-b983-4aa4a9bfdd8f",
      "name": "io.github.bytedance/mcp-server-search",
      "category": "Community",
      "description": "MCP server for web search operations",
      "version": "1.0.0",
      "npm": "@agent-infra/mcp-server-search",
      "command": "npx @agent-infra/mcp-server-search@latest",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/bytedance/UI-TARS-desktop",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-search",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Search engine to use for browser search (default: google)",
              "format": "string",
              "default": "google",
              "type": "named",
              "name": "engine"
            },
            {
              "description": "API key for the search provider",
              "format": "string",
              "type": "named",
              "name": "api-key"
            },
            {
              "description": "Base URL for the search provider",
              "format": "string",
              "type": "named",
              "name": "base-url"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-search",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "package_arguments": [
            {
              "description": "Search engine to use for browser search (default: google)",
              "format": "string",
              "default": "google",
              "type": "named",
              "name": "engine"
            },
            {
              "description": "API key for the search provider",
              "format": "string",
              "type": "named",
              "name": "api-key"
            },
            {
              "description": "Base URL for the search provider",
              "format": "string",
              "type": "named",
              "name": "base-url"
            },
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-search",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "package_arguments": [
            {
              "description": "Search engine to use for browser search (default: google)",
              "format": "string",
              "default": "google",
              "type": "named",
              "name": "engine"
            },
            {
              "description": "API key for the search provider",
              "format": "string",
              "type": "named",
              "name": "api-key"
            },
            {
              "description": "Base URL for the search provider",
              "format": "string",
              "type": "named",
              "name": "base-url"
            },
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T06:16:40.975101309Z",
      "updated_at": "2025-09-09T06:16:40.975101309Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "4025acb1-1da6-40bf-bcea-e8614fabe911",
      "name": "com.pga/pga-golf",
      "category": "Community",
      "description": "PGA's official MCP Server for all things golf-related. Find a coach, play golf, improve your game.",
      "version": "0.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.pga.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T15:44:45.139319366Z",
      "updated_at": "2025-09-10T15:44:45.139319366Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "40ab6512-9c86-4a99-b057-84887e27b0a2",
      "name": "io.github.leshchenko1979/fast-mcp-telegram",
      "category": "Community",
      "description": "Telegram MCP server with search and messaging capabilities",
      "version": "0.4.5",
      "npm": null,
      "command": null,
      "env": {
        "API_ID": {
          "required": true,
          "description": "Telegram API ID (from https://my.telegram.org/apps)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "API_HASH": {
          "required": true,
          "description": "Telegram API Hash (from https://my.telegram.org/apps)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "SERVER_MODE": {
          "required": false,
          "description": "Server mode: stdio (local), http-no-auth (dev), http-auth (prod)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "SESSION_DIR": {
          "required": false,
          "description": "Custom session directory (defaults to ~/.config/fast-mcp-telegram/)",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/leshchenko1979/fast-mcp-telegram",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "fast-mcp-telegram",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Telegram API ID (from https://my.telegram.org/apps)",
              "is_required": true,
              "name": "API_ID"
            },
            {
              "description": "Telegram API Hash (from https://my.telegram.org/apps)",
              "is_required": true,
              "is_secret": true,
              "name": "API_HASH"
            },
            {
              "description": "Server mode: stdio (local), http-no-auth (dev), http-auth (prod)",
              "default": "stdio",
              "choices": [
                "stdio",
                "http-no-auth",
                "http-auth"
              ],
              "name": "SERVER_MODE"
            },
            {
              "description": "Custom session directory (defaults to ~/.config/fast-mcp-telegram/)",
              "name": "SESSION_DIR"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T08:03:29.248076221Z",
      "updated_at": "2025-09-17T14:08:48.78146357Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "40fe13aa-29cb-4524-9230-6878bfde553b",
      "name": "io.github.p1va/symbols",
      "category": "Community",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "version": "0.0.13",
      "npm": "@p1va/symbols",
      "command": "npx @p1va/symbols@0.0.13",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/p1va/symbols",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.13",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-16T12:14:32.125980136Z",
      "updated_at": "2025-09-16T12:14:32.125980136Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "4198dc87-4f6b-4470-8d35-691ad9c34771",
      "name": "io.github.yuna0x0/anilist-mcp",
      "category": "Community",
      "description": "AniList MCP server for accessing AniList API data",
      "version": "1.3.2",
      "npm": "anilist-mcp",
      "command": "npx anilist-mcp@1.3.2",
      "env": {
        "ANILIST_TOKEN": {
          "required": false,
          "description": "AniList API token for authenticated requests",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/yuna0x0/anilist-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "anilist-mcp",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "is_secret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "yuna0x0/anilist-mcp",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "is_secret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        },
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/yuna0x0/anilist-mcp/releases/download/v1.3.2/anilist-mcp-1.3.2.mcpb",
          "version": "1.3.2",
          "file_sha256": "5d6c9d0b6a420ccdb884ac982e9e1f8140be856012c157e85ab5bacb78a013c8",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "AniList API token for authenticated requests",
              "format": "string",
              "is_secret": true,
              "name": "ANILIST_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T07:42:46.258254946Z",
      "updated_at": "2025-09-13T07:58:52.384172296Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "42b4e771-e8d6-4a5d-8988-0707672f922b",
      "name": "io.github.nickzren/opentargets",
      "category": "Community",
      "description": "Open Targets MCP server for targets, diseases, drugs, variants, and evidence",
      "version": "0.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/nickzren/opentargets-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "opentargets-mcp",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T22:22:05.051791975Z",
      "updated_at": "2025-09-16T22:22:05.051791975Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "4356c3f4-4a0c-4d2c-970e-213eef76ce21",
      "name": "io.github.LinuxSuRen/atest-mcp-server",
      "category": "Community",
      "description": "Auto-download & launch https://github.com/LinuxSuRen/atest-mcp-server",
      "version": "1.0.2",
      "npm": "atest-mcp-server-launcher",
      "command": "npx atest-mcp-server-launcher@1.0.2",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/LinuxSuRen/atest-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "atest-mcp-server-launcher",
          "version": "1.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T07:37:00.342793911Z",
      "updated_at": "2025-09-09T07:37:00.342793911Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "435db01f-5936-44ac-8165-469b1e3491b6",
      "name": "io.github.p1va/symbols",
      "category": "Community",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "version": "0.0.14",
      "npm": "@p1va/symbols",
      "command": "npx @p1va/symbols@0.0.14",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/p1va/symbols",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T14:15:12.928928281Z",
      "updated_at": "2025-09-17T14:15:12.928928281Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "4385f929-3b4c-4d4a-993f-a59a90d4c2be",
      "name": "ai.mcpanalytics/analytics",
      "category": "Community",
      "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
      "version": "1.0.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/embeddedlayers/mcp-analytics",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T03:17:49.595345663Z",
      "updated_at": "2025-09-17T03:17:49.595345663Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "455556b3-fce2-42d7-87f5-4fa1ed3db5e1",
      "name": "ai.smithery/BigVik193-reddit-ads-mcp",
      "category": "Community",
      "description": "Manage Reddit advertising across accounts, campaigns, ad groups, posts, and ads. List accounts, fu…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BigVik193/reddit-ads-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T22:00:51.726310747Z",
      "updated_at": "2025-09-14T22:00:51.726310747Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "45c4154d-8dbe-4452-aff1-739b8107d11b",
      "name": "ai.waystation/airtable",
      "category": "Community",
      "description": "Access and manage your Airtable bases, tables, and records seamlessly",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/airtable/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/airtable/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:23:23.086629092Z",
      "updated_at": "2025-09-09T14:23:23.086629092Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "45c8d51d-6b71-4f8c-aecd-733f1fc60d75",
      "name": "com.teamwork/mcp",
      "category": "Community",
      "description": "The Teamwork.com official MCP server helps teams efficiently manage client projects with AI.",
      "version": "1.2.4",
      "npm": null,
      "command": null,
      "env": {
        "TW_MCP_BEARER_TOKEN": {
          "required": true,
          "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "TW_MCP_LOG_FORMAT": {
          "required": false,
          "description": "Choose log output format between 'text' or 'json'. Default is 'text'.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "TW_MCP_LOG_LEVEL": {
          "required": false,
          "description": "Choose log level between 'debug', 'info', 'warn' or 'error'. Default is 'info'.",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/teamwork/mcp",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "teamwork/mcp",
          "version": "v1.2.4",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "TW_MCP_BEARER_TOKEN"
            },
            {
              "description": "Choose log output format between 'text' or 'json'. Default is 'text'.",
              "format": "string",
              "name": "TW_MCP_LOG_FORMAT"
            },
            {
              "description": "Choose log level between 'debug', 'info', 'warn' or 'error'. Default is 'info'.",
              "format": "string",
              "name": "TW_MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T15:06:41.256512883Z",
      "updated_at": "2025-09-15T12:27:37.741620698Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "45dd171d-1cc6-4868-a6a3-e56dab5185ce",
      "name": "ai.smithery/fitaf-ai-fitaf-mcp",
      "category": "Community",
      "description": "Track workouts, nutrition, body metrics, habits, and SMART goals with insights and trends. Connect…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fitaf-ai/fitaf-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T20:09:50.974662926Z",
      "updated_at": "2025-09-12T20:09:50.974662926Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "467b0011-9334-4913-8a5f-bf597ea09179",
      "name": "ai.smithery/smithery-ai-github",
      "category": "Community",
      "description": "Access the GitHub API, enabling file operations, repository management, search functionality, and…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/smithery-ai/mcp-servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/github/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T18:22:12.93052822Z",
      "updated_at": "2025-09-10T18:22:12.93052822Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "48932704-6cfe-4708-b935-50c82afb3d42",
      "name": "ai.waystation/mcp",
      "category": "Community",
      "description": "Ultimate toolbox to connect your LLM to popular productivity tools such as Monday, AirTable, Slack",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T12:10:02.487930463Z",
      "updated_at": "2025-09-09T12:10:02.487930463Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "489daf00-1b61-4a8d-a421-5aa1e4058360",
      "name": "io.github.gradion-ai/ipybox",
      "category": "Community",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "version": "0.6.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/gradion-ai/ipybox",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T14:43:00.869172467Z",
      "updated_at": "2025-09-14T09:27:10.09472192Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "48f54e2e-d42d-4182-9598-351aa48f7a0c",
      "name": "dev.rostro/rostro",
      "category": "Community",
      "description": "Turn any LLM multimodal; generate images, voices, videos, 3D models, music, and more.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/francis-ros/rostro-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://proto.rostro.dev/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T16:44:28.57398885Z",
      "updated_at": "2025-09-10T16:44:28.57398885Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "490703ba-12b3-48d8-81ef-056010280a9a",
      "name": "io.github.wonderwhy-er/desktop-commander",
      "category": "Community",
      "description": "MCP server for terminal commands, file operations, and process management",
      "version": "0.2.14",
      "npm": "@wonderwhy-er/desktop-commander",
      "command": "npx @wonderwhy-er/desktop-commander@0.2.14",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/wonderwhy-er/DesktopCommanderMCP",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@wonderwhy-er/desktop-commander",
          "version": "0.2.14",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T19:05:34.284609703Z",
      "updated_at": "2025-09-12T19:05:34.284609703Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "491dd4a6-86a5-41d9-8ab0-dafaa3e9d2d0",
      "name": "io.github.Antonytm/mcp-sitecore-server",
      "category": "Community",
      "description": "A Model Context Protocol server for Sitecore",
      "version": "1.3.0",
      "npm": "@antonytm/mcp-sitecore-server",
      "command": "npx @antonytm/mcp-sitecore-server@1.3.0",
      "env": {
        "": {
          "required": false,
          "description": "",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/Antonytm/mcp-sitecore-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@antonytm/mcp-sitecore-server",
          "version": "1.3.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "name": ""
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T16:40:08.3256487Z",
      "updated_at": "2025-09-17T16:49:19.079089206Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "498f3840-d628-416f-bccd-db23adaf4700",
      "name": "com.teamwork/mcp",
      "category": "Community",
      "description": "The Teamwork.com official MCP server helps teams efficiently manage client projects with AI.",
      "version": "1.3.0",
      "npm": null,
      "command": null,
      "env": {
        "TW_MCP_BEARER_TOKEN": {
          "required": true,
          "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "TW_MCP_LOG_FORMAT": {
          "required": false,
          "description": "Choose log output format between 'text' or 'json'. Default is 'text'.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "TW_MCP_LOG_LEVEL": {
          "required": false,
          "description": "Choose log level between 'debug', 'info', 'warn' or 'error'. Default is 'info'.",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/teamwork/mcp",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.ai.teamwork.com",
          "headers": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "teamwork/mcp",
          "version": "v1.3.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "API key generated from the Teamwork.com OAuth2 process: https://apidocs.teamwork.com/guides/teamwork/app-login-flow",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "TW_MCP_BEARER_TOKEN"
            },
            {
              "description": "Choose log output format between 'text' or 'json'. Default is 'text'.",
              "format": "string",
              "name": "TW_MCP_LOG_FORMAT"
            },
            {
              "description": "Choose log level between 'debug', 'info', 'warn' or 'error'. Default is 'info'.",
              "format": "string",
              "name": "TW_MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T12:27:37.668500509Z",
      "updated_at": "2025-09-17T18:13:49.787673531Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "4a8da115-afef-47ee-af61-c4fbd1c6b0c4",
      "name": "io.github.p1va/symbols",
      "category": "Community",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "version": "0.0.11",
      "npm": "@p1va/symbols",
      "command": "npx @p1va/symbols@0.0.11",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/p1va/symbols",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.11",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-16T07:43:34.104606016Z",
      "updated_at": "2025-09-16T07:43:34.104606016Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "4bb00657-4481-44a5-be50-27f6382d0dd2",
      "name": "ch.martinelli/jooq-mcp",
      "category": "Community",
      "description": "An MCP server that provides access to the jOOQ documentation",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/martinellich/jooq-mcp",
      "remotes": [
        {
          "type": "sse",
          "url": "https://jooq-mcp.martinelli.ch/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T13:41:08.40707085Z",
      "updated_at": "2025-09-12T13:41:08.40707085Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "4e8f5697-3584-407f-9988-cafe00fa8ffb",
      "name": "ai.smithery/hjsh200219-pharminfo-mcp",
      "category": "Community",
      "description": "Look up Korean drug ingredient and product data by HIRA component and product codes via Pilldoc. V…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/hjsh200219/pharminfo-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hjsh200219/pharminfo-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T06:55:47.401979389Z",
      "updated_at": "2025-09-17T06:55:47.401979389Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "4f89957c-7ca9-46a2-82b6-088c1124ffb4",
      "name": "io.github.marianfoo/mcp-sap-docs",
      "category": "Community",
      "description": "Fast MCP server for unified SAP docs search (SAPUI5, CAP, OpenUI5, wdi5) with BM25 full-text search",
      "version": "0.3.9",
      "npm": "mcp-sap-docs",
      "command": "npx mcp-sap-docs@0.3.9",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/marianfoo/mcp-sap-docs",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-sap-docs",
          "version": "0.3.9",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T05:59:06.222569167Z",
      "updated_at": "2025-09-09T05:59:06.222569167Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5034aa1f-3534-4079-8fc5-131563ece72f",
      "name": "ai.smithery/pinion05-supabase-mcp-lite",
      "category": "Community",
      "description": "Same functionality, consuming only 1/20 of the context window tokens.",
      "version": "0.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/pinion05/supabase-mcp-lite",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pinion05/supabase-mcp-lite/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T13:24:18.881488263Z",
      "updated_at": "2025-09-17T13:24:18.881488263Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "511f2dc8-4b9d-4e80-a0eb-4abb26a36c74",
      "name": "io.github.rfdez/pvpc-mcp-server",
      "category": "Community",
      "description": "Fetch the Voluntary Price for the Small Consumer (PVPC) published daily by Red Eléctrica.",
      "version": "3.2.2",
      "npm": "@rfdez/pvpc-mcp-server",
      "command": "npx @rfdez/pvpc-mcp-server@3.2.2",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/rfdez/pvpc-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@rfdez/pvpc-mcp-server",
          "version": "3.2.2",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Use stdio transport type for MCP server",
              "value": "stdio",
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "ESIOS API key for authentication",
              "is_required": true,
              "is_secret": true,
              "type": "named",
              "name": "--api-key"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@rfdez/pvpc-mcp-server",
          "version": "3.2.2",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:8080/mcp",
            "headers": [
              {
                "description": "ESIOS API key for authentication",
                "is_required": true,
                "is_secret": true,
                "name": "X-API-Key"
              }
            ]
          },
          "package_arguments": [
            {
              "description": "Use HTTP transport type for MCP server",
              "value": "http",
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "Port for HTTP transport",
              "default": "8080",
              "type": "named",
              "name": "--port"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T16:28:04.867936223Z",
      "updated_at": "2025-09-10T16:53:23.925845807Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "51513004-36e9-4683-88d3-91221c43d2f3",
      "name": "ai.smithery/cpretzinger-ai-assistant-simple",
      "category": "Community",
      "description": "UPDATED 9/1/2025! NEW TOOLS! Use the Redis Stream tools with n8n MCP Client Node for use anywhere!…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@cpretzinger/ai-assistant-simple/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T00:26:36.144735854Z",
      "updated_at": "2025-09-15T00:26:36.144735854Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5197fe61-3f7f-45dd-9c93-2f43dd37787d",
      "name": "io.github.cmpxchg16/mcp-ethical-hacking",
      "category": "Community",
      "description": "An MCP server that provides LinkedIn & Reddit data",
      "version": "1.4.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cmpxchg16/mcp-ethical-hacking",
      "remotes": [],
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/cmpxchg16/mcp-ethical-hacking/releases/download/v1.4.0/server.mcpb",
          "version": "1.4.0",
          "file_sha256": "5e4f25e7f21b62974861f055cff90c1aef80d3b8bd1f32e05db744d1cbd67605",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T04:55:02.185050652Z",
      "updated_at": "2025-09-16T04:55:02.185050652Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "52318e0f-56de-406f-8558-4fd4e638060e",
      "name": "io.github.b1ff/atlassian-dc-mcp-confluence",
      "category": "Community",
      "description": "MCP server for Atlassian Confluence Data Center - access and manage content",
      "version": "0.9.0",
      "npm": "@atlassian-dc-mcp/confluence",
      "command": "npx @atlassian-dc-mcp/confluence@0.9.0",
      "env": {
        "CONFLUENCE_HOST": {
          "required": false,
          "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CONFLUENCE_API_BASE_PATH": {
          "required": false,
          "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CONFLUENCE_API_TOKEN": {
          "required": true,
          "description": "Confluence Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/confluence",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "CONFLUENCE_HOST"
            },
            {
              "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
              "format": "string",
              "name": "CONFLUENCE_API_BASE_PATH"
            },
            {
              "description": "Confluence Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CONFLUENCE_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T11:40:42.156626724Z",
      "updated_at": "2025-09-13T13:17:33.205675704Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "526b6940-2ff7-4b65-a4b4-03439dd8e4d4",
      "name": "io.github.stefanoamorelli/sec-edgar-mcp",
      "category": "Community",
      "description": "SEC EDGAR MCP server that provides access to the US public filings through the US SEC EDGAR API",
      "version": "1.0.5",
      "npm": null,
      "command": null,
      "env": {
        "SEC_EDGAR_USER_AGENT": {
          "required": true,
          "description": "The user agent to access the SEC EDGAR API",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/stefanoamorelli/sec-edgar-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "sec-edgar-mcp",
          "version": "1.0.5",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "The user agent to access the SEC EDGAR API",
              "is_required": true,
              "format": "string",
              "name": "SEC_EDGAR_USER_AGENT"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T07:06:26.344648212Z",
      "updated_at": "2025-09-09T07:06:26.344648212Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5289430f-1a42-4a32-a130-7dd851f9a378",
      "name": "io.github.augee99/mcp-weather",
      "category": "Community",
      "description": "An MCP server that provides [describe what your server does]",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/augee99/mcp-weather",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcp-weather-augee99",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T13:24:44.527456713Z",
      "updated_at": "2025-09-12T13:24:44.527456713Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "52c6f0fa-7114-4adc-afae-d48cfbbe97c0",
      "name": "com.apple-rag/mcp-server",
      "category": "Community",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "version": "1.1.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BingoWon/apple-rag-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T14:15:14.604093039Z",
      "updated_at": "2025-09-17T14:41:53.299387399Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "54131da0-99e1-4d90-a5d3-e0333a265843",
      "name": "ai.waystation/miro",
      "category": "Community",
      "description": "Collaborate on visual boards with your team using Miro integration.",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/miro/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/miro/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:32:52.805916164Z",
      "updated_at": "2025-09-09T14:32:52.805916164Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "542b567a-17c2-4a09-905b-313d6ead48d7",
      "name": "io.github.domdomegg/time-mcp-nuget",
      "category": "Community",
      "description": "Get the current UTC time in RFC 3339 format.",
      "version": "1.0.8",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/domdomegg/time-mcp-nuget.git",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimeMcpServer",
          "version": "1.0.8",
          "runtime_hint": "dnx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T02:58:39.843958183Z",
      "updated_at": "2025-09-12T02:58:39.843958183Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5473ea29-7534-4d74-ad1d-5b8185114052",
      "name": "io.github.isamu/mulmocast-vision",
      "category": "Community",
      "description": "Easy and stylish presentation slide generator.",
      "version": "1.0.1",
      "npm": "mulmocast-vision",
      "command": "npx mulmocast-vision@1.0.1",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/receptron/mulmocast-vision",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mulmocast-vision",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T21:46:16.168898479Z",
      "updated_at": "2025-09-12T21:46:16.168898479Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "55cfffa3-6f27-4010-97ce-7946cd76cad2",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "category": "Community",
      "description": "Sample .NET MCP Server",
      "version": "latest",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/timheuer/sampledotnetmcpserver",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.11-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T13:58:00.558767962Z",
      "updated_at": "2025-09-10T15:31:23.618984633Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "56080a46-21d6-48d2-91ff-ae1b9cb378b5",
      "name": "com.mintmcp/gcal",
      "category": "Community",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "version": "1.0.4",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:49:54.013255259Z",
      "updated_at": "2025-09-09T19:49:54.013255259Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "576220c7-0d51-4d02-bcc6-26c7917a366f",
      "name": "ai.smithery/yuhuison-mediawiki-mcp-server-auth",
      "category": "Community",
      "description": "Connect to your MediaWiki using simple credentials and manage content without OAuth. Search, read,…",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuhuison/mediawiki-mcp-server-auth/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T11:19:24.929803426Z",
      "updated_at": "2025-09-16T11:19:24.929803426Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "580738da-9f8f-426c-a690-03e6784e2000",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "category": "Community",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "version": "0.9.9",
      "npm": "@atlassian-dc-mcp/jira",
      "command": "npx @atlassian-dc-mcp/jira@0.9.9",
      "env": {
        "JIRA_HOST": {
          "required": false,
          "description": "Jira host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "JIRA_API_BASE_PATH": {
          "required": false,
          "description": "Jira API base path (alternative to JIRA_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "JIRA_API_TOKEN": {
          "required": true,
          "description": "Jira Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.9",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T13:29:18.029022573Z",
      "updated_at": "2025-09-13T13:29:18.029022573Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "584c8dd5-4a8c-4a9a-a8a2-2ef350e576a7",
      "name": "io.github.arielbk/anki-mcp",
      "category": "Community",
      "description": "MCP server for integrating with Anki flashcards through conversational AI",
      "version": "0.3.2",
      "npm": "@arielbk/anki-mcp",
      "command": "npx @arielbk/anki-mcp@0.3.2",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/arielbk/anki-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@arielbk/anki-mcp",
          "version": "0.3.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T12:16:49.682389389Z",
      "updated_at": "2025-09-11T12:16:49.682389389Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5996e50e-d147-4b9d-ab2e-c771cd7dc73d",
      "name": "io.github.ycjcl868/mcp-server-fear-greed",
      "category": "Community",
      "description": "An MCP server for mcp-server-fear-greed",
      "version": "1.0.2",
      "npm": "mcp-server-fear-greed",
      "command": "npx mcp-server-fear-greed@latest",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ycjcl868/mcp-server-fear-greed",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "transport": {
            "type": "stdio"
          }
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "package_arguments": [
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "package_arguments": [
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T04:08:35.601637811Z",
      "updated_at": "2025-09-09T04:08:35.601637811Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5a8b6b36-7f28-48df-ae97-31f9a032aad5",
      "name": "ai.mcpanalytics/analytics",
      "category": "Community",
      "description": "ML statistical analysis platform for data teams",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T02:35:06.675809197Z",
      "updated_at": "2025-09-17T02:38:18.073872009Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5b031d63-c0be-4663-aa02-43a97a488467",
      "name": "io.github.grupo-avispa/dsr_mcp_server",
      "category": "Community",
      "description": "An MCP server that provides tools for interacting with Deep State Representation (DSR) graphs.",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/grupo-avispa/dsr_mcp_server",
      "remotes": [],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T10:22:23.135622672Z",
      "updated_at": "2025-09-17T10:22:23.135622672Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5b990a17-1e02-4112-9d51-50e0ce0bc8bd",
      "name": "io.minnas/mcp",
      "category": "Community",
      "description": "Share prompts and context with your team and discover community collections.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/sensoris/minnas-service",
      "remotes": [
        {
          "type": "sse",
          "url": "https://api.minnas.io/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T15:43:19.145095272Z",
      "updated_at": "2025-09-10T15:43:19.145095272Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5b9f4081-5b9b-4790-81e8-0e4003f87912",
      "name": "io.github.b1ff/atlassian-dc-mcp-confluence",
      "category": "Community",
      "description": "MCP server for Atlassian Confluence Data Center - access and manage content",
      "version": "0.9.8",
      "npm": "@atlassian-dc-mcp/confluence",
      "command": "npx @atlassian-dc-mcp/confluence@0.9.8",
      "env": {
        "CONFLUENCE_HOST": {
          "required": false,
          "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CONFLUENCE_API_BASE_PATH": {
          "required": false,
          "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CONFLUENCE_API_TOKEN": {
          "required": true,
          "description": "Confluence Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/confluence",
          "version": "0.9.8",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "CONFLUENCE_HOST"
            },
            {
              "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
              "format": "string",
              "name": "CONFLUENCE_API_BASE_PATH"
            },
            {
              "description": "Confluence Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CONFLUENCE_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T13:18:50.968631388Z",
      "updated_at": "2025-09-13T13:29:18.545408762Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5c567ecc-775d-4b1d-b990-1b14ec02ffe8",
      "name": "ai.smithery/blbl147-xhs-mcp",
      "category": "Community",
      "description": "搜索笔记、浏览首页推荐、查看笔记内容与评论，并发表你的评论。直接在工作流中与小红书内容互动，高效跟进话题。",
      "version": "1.6.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/blbl147/xhs-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@blbl147/xhs-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T03:34:24.676762516Z",
      "updated_at": "2025-09-15T03:34:24.676762516Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5c7b580d-19dc-45c3-957f-303efdd1f4b7",
      "name": "io.github.jkakar/cookwith-mcp",
      "category": "Community",
      "description": "AI-powered recipe generation and transformation tools by Cookwith",
      "version": "1.0.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/blaideinc/cookwith-mcp",
      "remotes": [],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T19:27:49.340445667Z",
      "updated_at": "2025-09-12T19:27:49.340445667Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5cf0cf74-f9f5-4c6d-84a2-59529a8a445a",
      "name": "ai.smithery/sasabasara-where_is_my_bus_mcp",
      "category": "Community",
      "description": "Get real-time NYC bus arrivals, live vehicle locations, and service alerts. Plan trips between any…",
      "version": "2.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sasabasara/where_is_my_bus_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T03:53:53.151653448Z",
      "updated_at": "2025-09-11T03:53:53.151653448Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5db5281e-f8b9-49a8-bf3d-b15b911f634a",
      "name": "io.github.ruvnet/claude-flow",
      "category": "Community",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "version": "2.0.0-alpha.107",
      "npm": "claude-flow",
      "command": "npx claude-flow@2.0.0-alpha.107",
      "env": {
        "ANTHROPIC_API_KEY": {
          "required": false,
          "description": "Anthropic API key for Claude AI models",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "CLAUDE_FLOW_MODE": {
          "required": false,
          "description": "Operation mode: development, production, or test",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CLAUDE_FLOW_MEMORY_PATH": {
          "required": false,
          "description": "Path for persistent memory storage",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CLAUDE_FLOW_MAX_AGENTS": {
          "required": false,
          "description": "Maximum number of concurrent agents",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CLAUDE_FLOW_PORT": {
          "required": false,
          "description": "MCP server port",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "GITHUB_TOKEN": {
          "required": false,
          "description": "GitHub personal access token for repository operations",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "FLOW_NEXUS_API_KEY": {
          "required": false,
          "description": "Flow Nexus cloud platform API key",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ruvnet/claude-flow",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.107",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Anthropic API key for Claude AI models",
              "format": "string",
              "is_secret": true,
              "name": "ANTHROPIC_API_KEY"
            },
            {
              "description": "Operation mode: development, production, or test",
              "format": "string",
              "name": "CLAUDE_FLOW_MODE"
            },
            {
              "description": "Path for persistent memory storage",
              "format": "string",
              "name": "CLAUDE_FLOW_MEMORY_PATH"
            },
            {
              "description": "Maximum number of concurrent agents",
              "format": "string",
              "name": "CLAUDE_FLOW_MAX_AGENTS"
            },
            {
              "description": "MCP server port",
              "format": "string",
              "name": "CLAUDE_FLOW_PORT"
            },
            {
              "description": "GitHub personal access token for repository operations",
              "format": "string",
              "is_secret": true,
              "name": "GITHUB_TOKEN"
            },
            {
              "description": "Flow Nexus cloud platform API key",
              "format": "string",
              "is_secret": true,
              "name": "FLOW_NEXUS_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T16:59:34.218265771Z",
      "updated_at": "2025-09-10T16:59:34.218265771Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5ec94c6d-6b50-42af-bdd9-895a57fe7d38",
      "name": "ai.human4/mcp",
      "category": "Community",
      "description": "Human4AI: bridging human perception with AI agents for seamless collaborative intelligence.",
      "version": "latest",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/Human4AI/MCP",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.human4.ai/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T18:51:30.428936188Z",
      "updated_at": "2025-09-17T18:51:30.428936188Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5f655162-becc-41bc-b9f6-959e3611e138",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.5.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T01:50:59.054896721Z",
      "updated_at": "2025-09-12T01:53:51.97863881Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5f80b1e5-5b3b-437a-99dc-c743cae8a2c7",
      "name": "io.github.variflight/variflight-mcp",
      "category": "Community",
      "description": "VariFlight's official MCP server provides tools to query flight, weather, comfort, and fare data.",
      "version": "1.0.2",
      "npm": "@variflight-ai/variflight-mcp",
      "command": "npx @variflight-ai/variflight-mcp@1.0.1",
      "env": {
        "VARIFLIGHT_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/variflight/variflight-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@variflight-ai/variflight-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "VARIFLIGHT_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T07:06:18.904080025Z",
      "updated_at": "2025-09-12T07:06:18.904080025Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "5fae66cd-f99b-40e6-a097-3990537cd513",
      "name": "ai.tickettailor/mcp",
      "category": "Community",
      "description": "Provides event organisers with tools to interact with a Ticket Tailor box office account.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.tickettailor.ai/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.tickettailor.ai/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T10:10:54.1887638Z",
      "updated_at": "2025-09-12T10:10:54.1887638Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "60eaa6b1-e687-49a0-a783-95e6033bc0c6",
      "name": "io.github.koki-develop/esa-mcp-server",
      "category": "Community",
      "description": "A Model Context Protocol (MCP) server for esa.io",
      "version": "0.3.2",
      "npm": "@koki-develop/esa-mcp-server",
      "command": "npx @koki-develop/esa-mcp-server@0.3.2",
      "env": {
        "ESA_TEAM": {
          "required": true,
          "description": "Your esa team",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "ESA_ACCESS_TOKEN": {
          "required": true,
          "description": "Your esa personal access token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/koki-develop/esa-mcp-server.git",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@koki-develop/esa-mcp-server",
          "version": "0.3.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your esa team",
              "is_required": true,
              "format": "string",
              "name": "ESA_TEAM"
            },
            {
              "description": "Your esa personal access token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "ESA_ACCESS_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T00:37:16.035462939Z",
      "updated_at": "2025-09-11T00:37:16.035462939Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "61190782-7594-4290-a23b-555aeabbf9fb",
      "name": "ai.smithery/Kim-soung-won-mcp-smithery-exam",
      "category": "Community",
      "description": "Craft quick, personalized greetings by name. Generate ready-to-use greeting prompts for a consiste…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/Kim-soung-won/mcp-smithery-exam",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Kim-soung-won/mcp-smithery-exam/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T06:32:38.498461921Z",
      "updated_at": "2025-09-16T06:32:38.498461921Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "62033d66-b83d-4f62-a294-a2c212cb06e6",
      "name": "ai.smithery/BadRooBot-my_test_mcp",
      "category": "Community",
      "description": "Get current weather for any city and create images from your prompts. Streamline planning, reports…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BadRooBot/python_mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BadRooBot/my_test_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T14:25:46.09449626Z",
      "updated_at": "2025-09-14T14:25:46.09449626Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "62854e83-941a-464c-8798-2f3ae4908410",
      "name": "ai.waystation/jira",
      "category": "Community",
      "description": "Track issues, manage projects, and streamline workflows in Jira.",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/jira/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/jira/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:46:07.210890661Z",
      "updated_at": "2025-09-09T14:46:07.210890661Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "62db1a40-2f62-4fc8-97b5-b03186d26b28",
      "name": "so.jinko/jinko-mcp",
      "category": "Community",
      "description": "Jinko is a travel MCP server that provides hotel search and booking capabilities.",
      "version": "0.0.27",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/jinkoso/jinko-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp-remote.jinko.so/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T21:19:26.720481714Z",
      "updated_at": "2025-09-16T21:19:26.720481714Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "63412105-c23a-4c00-9651-fc721fb12539",
      "name": "io.github.xorrkaz/cml-mcp",
      "category": "Community",
      "description": "An MCP server that provides access to common Cisco Modeling Labs (CML) operations.",
      "version": "0.8.3",
      "npm": null,
      "command": null,
      "env": {
        "CML_URL": {
          "required": true,
          "description": "URL for the CML Server",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CML_USERNAME": {
          "required": true,
          "description": "Username for CML authentication",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CML_PASSWORD": {
          "required": true,
          "description": "Password for CML authentication",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "PYATS_USERNAME": {
          "required": false,
          "description": "Username for authentication to devices running in CML",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "PYATS_PASSWORD": {
          "required": false,
          "description": "Password for authentication to devices running in CML",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "PYATS_AUTH_PASS": {
          "required": false,
          "description": "Enable password for authentication to devices running in CML",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/xorrkaz/cml-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "cml-mcp",
          "version": "0.8.3",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "URL for the CML Server",
              "is_required": true,
              "format": "string",
              "name": "CML_URL"
            },
            {
              "description": "Username for CML authentication",
              "is_required": true,
              "format": "string",
              "name": "CML_USERNAME"
            },
            {
              "description": "Password for CML authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CML_PASSWORD"
            },
            {
              "description": "Username for authentication to devices running in CML",
              "format": "string",
              "name": "PYATS_USERNAME"
            },
            {
              "description": "Password for authentication to devices running in CML",
              "format": "string",
              "is_secret": true,
              "name": "PYATS_PASSWORD"
            },
            {
              "description": "Enable password for authentication to devices running in CML",
              "format": "string",
              "is_secret": true,
              "name": "PYATS_AUTH_PASS"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T19:14:35.862874767Z",
      "updated_at": "2025-09-14T14:57:56.312035195Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "64bd1c4f-bbc1-4909-b49a-5d7f1d4efe33",
      "name": "ai.shawndurrani/mcp-registry",
      "category": "Community",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "version": "0.1.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T04:01:11.057921329Z",
      "updated_at": "2025-09-15T04:20:53.740529471Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "65e223a4-8b55-42c4-91df-7b2460240d71",
      "name": "io.github.karanb192/reddit-buddy-mcp",
      "category": "Community",
      "description": "Reddit MCP server - browse posts, search content, analyze users.",
      "version": "1.0.6-test.4",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T06:34:25.789411405Z",
      "updated_at": "2025-09-15T07:27:45.804628309Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "66c173f7-0916-4751-a250-eafd1433af94",
      "name": "md.install/try",
      "category": "Community",
      "description": "Create guides as MCP servers to instruct coding agents to use your software (library, API, etc).",
      "version": "0.1.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://install.md/mcp/try"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T07:10:11.156679866Z",
      "updated_at": "2025-09-09T07:10:11.156679866Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "67a1944e-1574-44f0-8165-f434ae3a141b",
      "name": "travel.kismet/mcp-server",
      "category": "Community",
      "description": "Semantic hotel search with real-time availability and price comparison for Kismet Travel",
      "version": "0.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/kismet-tech/kismet-travel-mcp-v2",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.kismet.travel/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.kismet.travel/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T22:00:17.761143256Z",
      "updated_at": "2025-09-10T22:00:17.761143256Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "69c0381a-387b-4398-af92-294377ecb5ec",
      "name": "io.github.Flightradar24/fr24api-mcp",
      "category": "Community",
      "description": "MCP server providing access to the Flightradar24 API for real-time and historical flight data",
      "version": "1.0.1",
      "npm": "@flightradar24/fr24api-mcp",
      "command": "npx @flightradar24/fr24api-mcp@1.0.1",
      "env": {
        "FR24_API_KEY": {
          "required": true,
          "description": "Your API key for Flightradar24 API",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/Flightradar24/fr24api-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@flightradar24/fr24api-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for Flightradar24 API",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "FR24_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T11:42:51.309275268Z",
      "updated_at": "2025-09-09T11:42:51.309275268Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "6ad19c69-c96e-4efa-ad6f-4c347f477dd5",
      "name": "ai.explorium/mcp-explorium",
      "category": "Community",
      "description": "Access live company and contact data from Explorium's AgentSource B2B platform.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-github-registry.explorium.ai/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T21:06:15.352228609Z",
      "updated_at": "2025-09-16T21:06:15.352228609Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "6c33e594-e211-4c48-94d6-2b7d2d1b834d",
      "name": "io.github.antvis/mcp-server-chart",
      "category": "Community",
      "description": "A Model Context Protocol server for generating charts using AntV.",
      "version": "1.0.0",
      "npm": "@antv/mcp-server-chart",
      "command": "npx @antv/mcp-server-chart@0.9.0-beta.1",
      "env": {
        "VIS_REQUEST_SERVER": {
          "required": false,
          "description": "Custom chart generation service URL for private deployment",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "SERVICE_ID": {
          "required": false,
          "description": "Service identifier for chart generation records",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "DISABLED_TOOLS": {
          "required": false,
          "description": "Comma-separated list of tool names to disable",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/antvis/mcp-server-chart",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@antv/mcp-server-chart",
          "version": "0.9.0-beta.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Custom chart generation service URL for private deployment",
              "format": "string",
              "default": "https://antv-studio.alipay.com/api/gpt-vis",
              "name": "VIS_REQUEST_SERVER"
            },
            {
              "description": "Service identifier for chart generation records",
              "format": "string",
              "is_secret": true,
              "name": "SERVICE_ID"
            },
            {
              "description": "Comma-separated list of tool names to disable",
              "format": "string",
              "name": "DISABLED_TOOLS"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-15T12:44:26.492264006Z",
      "updated_at": "2025-09-15T12:44:26.492264006Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "6e30b2bc-f0e2-4725-89f4-458932232c12",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "category": "Community",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "version": "0.0.14",
      "npm": "@himorishige/hatago-mcp-hub",
      "command": "npx @himorishige/hatago-mcp-hub@0.0.14",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/himorishige/hatago-mcp-hub",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.14",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-14T07:53:18.713900781Z",
      "updated_at": "2025-09-14T10:38:58.014142407Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "6e44548a-ef55-4303-86aa-eaf8807c7dab",
      "name": "io.github.cr7258/elasticsearch-mcp-server",
      "category": "Community",
      "description": "MCP server for interacting with Elasticsearch",
      "version": "2.0.12",
      "npm": null,
      "command": null,
      "env": {
        "ELASTICSEARCH_HOSTS": {
          "required": false,
          "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "ELASTICSEARCH_API_KEY": {
          "required": false,
          "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "ELASTICSEARCH_USERNAME": {
          "required": false,
          "description": "Username for basic authentication (alternative to API key)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "ELASTICSEARCH_PASSWORD": {
          "required": false,
          "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "ELASTICSEARCH_VERIFY_CERTS": {
          "required": false,
          "description": "Whether to verify SSL certificates (true/false)",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cr7258/elasticsearch-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "elasticsearch-mcp-server",
          "version": "2.0.12",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Comma-separated list of Elasticsearch hosts (e.g., https://localhost:9200)",
              "format": "string",
              "default": "https://localhost:9200",
              "name": "ELASTICSEARCH_HOSTS"
            },
            {
              "description": "API key for Elasticsearch or Elastic Cloud authentication (recommended)",
              "format": "string",
              "is_secret": true,
              "name": "ELASTICSEARCH_API_KEY"
            },
            {
              "description": "Username for basic authentication (alternative to API key)",
              "format": "string",
              "name": "ELASTICSEARCH_USERNAME"
            },
            {
              "description": "Password for basic authentication (used with ELASTICSEARCH_USERNAME)",
              "format": "string",
              "is_secret": true,
              "name": "ELASTICSEARCH_PASSWORD"
            },
            {
              "description": "Whether to verify SSL certificates (true/false)",
              "format": "boolean",
              "default": "false",
              "name": "ELASTICSEARCH_VERIFY_CERTS"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T02:48:54.493070641Z",
      "updated_at": "2025-09-11T03:19:12.600102971Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "6f1c2c5d-192b-4964-919f-d2850f383aa2",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.5.4",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T01:53:51.972295258Z",
      "updated_at": "2025-09-12T01:55:40.789431661Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "6f36c75d-1776-443a-b9d9-ed6f45dd1f88",
      "name": "ai.smithery/ctaylor86-mcp-video-download-server",
      "category": "Community",
      "description": "Connect your video workflows to cloud storage. Organize and access video assets across projects wi…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ctaylor86/mcp-video-download-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@ctaylor86/mcp-video-download-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T11:45:18.173946266Z",
      "updated_at": "2025-09-15T11:45:18.173946266Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "6f372f99-089b-4cc7-a9b6-b3fcbd39074b",
      "name": "io.github.JustasMonkev/mcp-accessibility-scanner",
      "category": "Community",
      "description": "MCP server for automated web accessibility scanning with Playwright and Axe-core.",
      "version": "1.1.1",
      "npm": "mcp-accessibility-scanner",
      "command": "npx mcp-accessibility-scanner@1.1.1",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/JustasMonkev/mcp-accessibility-scanner",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-accessibility-scanner",
          "version": "1.1.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T15:19:19.721714851Z",
      "updated_at": "2025-09-10T15:19:19.721714851Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "703df496-b98b-4069-94b3-077fe6c1afae",
      "name": "ai.smithery/DynamicEndpoints-powershell-exec-mcp-server",
      "category": "Community",
      "description": "Execute PowerShell commands securely with controlled timeouts and input validation. Retrieve syste…",
      "version": "1.13.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/DynamicEndpoints/PowerShell-Exec-MCP-Server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/powershell-exec-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T13:54:30.703394885Z",
      "updated_at": "2025-09-11T13:54:30.703394885Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "704ccc9a-25b1-44bf-a882-59130f6b02ab",
      "name": "dev.promplate/hmr",
      "category": "Community",
      "description": "Hot Module Reload (HMR) for Python with reactive programming and MCP tools",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/promplate/pyth-on-line",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://pyth-on-line.promplate.dev/hmr/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T21:07:34.315525152Z",
      "updated_at": "2025-09-17T21:09:37.855503018Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7128a4ba-390a-458f-b95a-46c72c7a0b81",
      "name": "com.falkordb/QueryWeaver",
      "category": "Community",
      "description": "An MCP server for Text2SQL: transforms natural language into SQL using graph schema understanding.",
      "version": "0.0.11",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/FalkorDB/QueryWeaver",
      "remotes": [],
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "falkordb/queryweaver",
          "version": "0.0.11",
          "transport": {
            "type": "streamable-http",
            "url": "https://localhost:5000/mcp"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T06:54:10.018880049Z",
      "updated_at": "2025-09-11T06:54:10.018880049Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "71de5a2a-6cfb-4250-a196-f93080ecc860",
      "name": "io.github.dockersamples/mcp-docker-release-information",
      "category": "Community",
      "description": "MCP server providing Docker Desktop release notes and security information.",
      "version": "0.3.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/dockersamples/mcp-docker-release-information",
      "remotes": [],
      "packages": [
        {
          "registry_type": "oci",
          "identifier": "dockersamples/mcp-docker-release-information",
          "version": "0.3.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T18:54:52.764339069Z",
      "updated_at": "2025-09-10T18:54:52.764339069Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "73689205-75f4-4c3d-94ef-0bcee089fbaa",
      "name": "ai.mcpanalytics/analytics",
      "category": "Community",
      "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
      "version": "1.0.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/embeddedlayers/mcp-analytics",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T03:00:38.248011994Z",
      "updated_at": "2025-09-17T03:17:49.632449123Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "74573935-5dac-4879-a567-9ecaa3256200",
      "name": "io.github.imbenrabi/financial-modeling-prep-mcp-server",
      "category": "Community",
      "description": "MCP server for Financial Modeling Prep API with 250+ financial data tools",
      "version": "2.5.1",
      "npm": "financial-modeling-prep-mcp-server",
      "command": "npx financial-modeling-prep-mcp-server@2.5.1",
      "env": {
        "FMP_ACCESS_TOKEN": {
          "required": false,
          "description": "Financial Modeling Prep API access token",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "PORT": {
          "required": false,
          "description": "Port number for HTTP server mode",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "DYNAMIC_TOOL_DISCOVERY": {
          "required": false,
          "description": "Enable dynamic tool discovery mode",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "FMP_TOOL_SETS": {
          "required": false,
          "description": "Comma-separated list of tool sets to load",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/imbenrabi/Financial-Modeling-Prep-MCP-Server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "financial-modeling-prep-mcp-server",
          "version": "2.5.1",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "https://financial-modeling-prep-mcp-server-production.up.railway.app/mcp"
          },
          "package_arguments": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "type": "named",
              "name": "--fmp-token"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "type": "named",
              "name": "--dynamic-tool-discovery"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "type": "named",
              "name": "--fmp-tool-sets"
            }
          ],
          "environment_variables": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "is_secret": true,
              "name": "FMP_ACCESS_TOKEN"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "name": "PORT"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "name": "DYNAMIC_TOOL_DISCOVERY"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "name": "FMP_TOOL_SETS"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T12:44:51.14737572Z",
      "updated_at": "2025-09-11T12:44:51.14737572Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7499cd69-6bca-46dd-9b27-57bc69cceab6",
      "name": "io.github.huoshuiai42/huoshui-pdf-translator",
      "category": "Community",
      "description": "An MCP server that provides PDF translation service",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/huoshuiai42/huoshui-pdf-translator",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "huoshui-pdf-translator",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T01:31:51.354566076Z",
      "updated_at": "2025-09-11T01:31:51.354566076Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "76d4ea95-489a-41e7-8bc9-f8d3263fc913",
      "name": "com.apple-rag/mcp-server",
      "category": "Community",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "version": "2.5.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BingoWon/apple-rag-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T15:07:56.618881283Z",
      "updated_at": "2025-09-17T15:08:38.010176491Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "77b25763-8cce-444e-9914-939596568922",
      "name": "ai.smithery/docfork-mcp",
      "category": "Community",
      "description": "@latest documentation and code examples to 9000+ libraries for LLMs and AI code editors in a singl…",
      "version": "0.7.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/docfork/docfork-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@docfork/mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T18:25:16.049646725Z",
      "updated_at": "2025-09-12T18:25:16.049646725Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "77c15324-cc34-417a-800f-673c2c44909b",
      "name": "com.mintmcp/gmail",
      "category": "Community",
      "description": "A MintMCP server for Gmail that lets you search, read, and draft emails and replies.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:20:31.788880118Z",
      "updated_at": "2025-09-09T19:25:39.937486339Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "783d46a6-9456-412b-bce2-2d9c5a26dada",
      "name": "io.github.ryaker/appstore-connect-mcp",
      "category": "Community",
      "description": "MCP server for Apple Store Connect API integration with OAuth authentication support",
      "version": "1.0.0",
      "npm": "@ryaker/appstore-connect-mcp",
      "command": "npx @ryaker/appstore-connect-mcp@1.0.0",
      "env": {
        "APPLE_KEY_ID": {
          "required": true,
          "description": "Apple App Store Connect API Key ID",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "APPLE_ISSUER_ID": {
          "required": true,
          "description": "Apple App Store Connect Issuer ID",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "APPLE_PRIVATE_KEY": {
          "required": true,
          "description": "Apple App Store Connect Private Key (base64 encoded or raw)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "APPLE_BUNDLE_ID": {
          "required": false,
          "description": "Optional: Specific Bundle ID to filter apps",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "APPLE_APP_STORE_ID": {
          "required": false,
          "description": "Optional: Specific App Store ID",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "OAUTH_ENABLED": {
          "required": false,
          "description": "Enable OAuth authentication (true/false)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "OAUTH_ISSUER": {
          "required": false,
          "description": "OAuth issuer URL (e.g., https://your-tenant.auth0.com)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "OAUTH_AUDIENCE": {
          "required": false,
          "description": "OAuth audience URL",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "OAUTH_JWKS_URI": {
          "required": false,
          "description": "OAuth JWKS URI for token validation",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "SERVER_URL": {
          "required": false,
          "description": "Server URL for OAuth deployment",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ryaker/appstore-connect-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@ryaker/appstore-connect-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Apple App Store Connect API Key ID",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "APPLE_KEY_ID"
            },
            {
              "description": "Apple App Store Connect Issuer ID",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "APPLE_ISSUER_ID"
            },
            {
              "description": "Apple App Store Connect Private Key (base64 encoded or raw)",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "APPLE_PRIVATE_KEY"
            },
            {
              "description": "Optional: Specific Bundle ID to filter apps",
              "format": "string",
              "name": "APPLE_BUNDLE_ID"
            },
            {
              "description": "Optional: Specific App Store ID",
              "format": "string",
              "name": "APPLE_APP_STORE_ID"
            },
            {
              "description": "Enable OAuth authentication (true/false)",
              "format": "string",
              "name": "OAUTH_ENABLED"
            },
            {
              "description": "OAuth issuer URL (e.g., https://your-tenant.auth0.com)",
              "format": "string",
              "name": "OAUTH_ISSUER"
            },
            {
              "description": "OAuth audience URL",
              "format": "string",
              "name": "OAUTH_AUDIENCE"
            },
            {
              "description": "OAuth JWKS URI for token validation",
              "format": "string",
              "name": "OAUTH_JWKS_URI"
            },
            {
              "description": "Server URL for OAuth deployment",
              "format": "string",
              "name": "SERVER_URL"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T14:59:09.11988275Z",
      "updated_at": "2025-09-10T14:59:09.11988275Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7881f8bf-ec94-417d-9f01-45771faaba17",
      "name": "io.github.formulahendry/mcp-server-mcp-registry",
      "category": "Community",
      "description": "MCP Server for MCP Registry to discover and search for available MCP servers in the registry",
      "version": "0.1.0",
      "npm": "mcp-server-mcp-registry",
      "command": "npx mcp-server-mcp-registry@0.1.0",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/formulahendry/mcp-server-mcp-registry",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-mcp-registry",
          "version": "0.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-14T07:16:07.571743009Z",
      "updated_at": "2025-09-14T07:16:07.571743009Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "79ba496b-2c62-45ca-8fd7-2f00f259c6d2",
      "name": "ai.smithery/sachicali-discordmcp-suite",
      "category": "Community",
      "description": "Control your Discord community: send/read messages, manage channels and forums, and handle webhook…",
      "version": "1.2.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@sachicali/discordmcp-suite/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T18:19:06.20151699Z",
      "updated_at": "2025-09-10T18:19:06.20151699Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7a139c10-a255-4de8-a17a-0046fa3916ae",
      "name": "ai.smithery/yuna0x0-hackmd-mcp",
      "category": "Community",
      "description": "Interact with your HackMD notes and teams seamlessly. Manage your notes, view reading history, and…",
      "version": "1.5.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/yuna0x0/hackmd-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/hackmd-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T03:33:42.649641272Z",
      "updated_at": "2025-09-15T03:33:42.649641272Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7a6efd6d-130c-4586-9399-376f11836b1a",
      "name": "ai.waystation/slack",
      "category": "Community",
      "description": "Send messages, access channels, and manage files in your Slack workspace.",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/slack/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/slack/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:32:49.571767151Z",
      "updated_at": "2025-09-09T14:32:49.571767151Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7b66d3bf-72fa-4832-87fa-c80a60668aae",
      "name": "io.github.ryanbaumann/platform-ai",
      "category": "Community",
      "description": "Google Maps Platform Code Assist MCP",
      "version": "0.2.0",
      "npm": "@googlemaps/code-assist-mcp",
      "command": "npx @googlemaps/code-assist-mcp@0.2.0",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/googlemaps/platform-ai",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "@googlemaps/code-assist-mcp",
          "version": "0.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T17:56:34.808006126Z",
      "updated_at": "2025-09-10T17:56:34.808006126Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7bc56184-ea78-465a-863c-76c9fe7e48a8",
      "name": "ai.smithery/morosss-sdfsdf",
      "category": "Community",
      "description": "Find academic papers across major sources like arXiv, PubMed, bioRxiv, and more. Download PDFs whe…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/morosss/sdfsdf",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@morosss/sdfsdf/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T17:26:11.858999857Z",
      "updated_at": "2025-09-13T17:26:11.858999857Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7bf7e778-039a-4420-b96b-c614bef2f879",
      "name": "io.github.henilcalagiya/google-sheets-mcp",
      "category": "Community",
      "description": "Powerful tools for automating Google Sheets using Model Context Protocol (MCP)",
      "version": "0.1.6",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/henilcalagiya/google-sheets-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "google-sheets-mcp",
          "version": "0.1.6",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T05:56:37.073750488Z",
      "updated_at": "2025-09-11T05:56:37.073750488Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7c414dfb-e7f1-4456-b296-0fd9f6cfc2ad",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "category": "Community",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "version": "0.9.7",
      "npm": "@atlassian-dc-mcp/jira",
      "command": "npx @atlassian-dc-mcp/jira@0.9.7",
      "env": {
        "JIRA_HOST": {
          "required": false,
          "description": "Jira host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "JIRA_API_BASE_PATH": {
          "required": false,
          "description": "Jira API base path (alternative to JIRA_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "JIRA_API_TOKEN": {
          "required": true,
          "description": "Jira Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T13:17:32.827442866Z",
      "updated_at": "2025-09-13T13:18:50.721430383Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7e37fcc2-e95f-4f4e-a104-b7c617fbf3dc",
      "name": "io.github.mickymultani/crypto-bytes",
      "category": "Community",
      "description": "Crypto Bytes MCP Server",
      "version": "0.1.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "identifier": "crypto_bytes_mcp_server",
          "version": "0.1.1",
          "runtime_hint": "python",
          "transport": {
            "type": "stdio"
          },
          "runtime_arguments": [
            {
              "value": "-m",
              "type": "positional"
            },
            {
              "value": "crypto_bytes_mcp_server",
              "type": "positional"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T01:24:42.862303085Z",
      "updated_at": "2025-09-12T01:24:42.862303085Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7ee8d214-db7f-450d-93c7-c941d8196e03",
      "name": "io.github.gradion-ai/ipybox",
      "category": "Community",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "version": "0.6.5",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/gradion-ai/ipybox",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.5",
          "runtime_hint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Required MCP server subcommand",
              "is_required": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "is_repeated": true,
              "value_hint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "is_repeated": true,
              "value_hint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "value_hint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "is_repeated": true,
              "value_hint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "value_hint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "is_repeated": true,
              "value_hint": "bind_mount"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T09:27:10.026612503Z",
      "updated_at": "2025-09-14T09:57:57.966657748Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "7f80c7e7-1906-4315-a639-9a82089224b2",
      "name": "ai.smithery/kwp-lab-rss-reader-mcp",
      "category": "Community",
      "description": "Track and browse RSS feeds with ease. Fetch the latest entries from any feed URL and extract full…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/kwp-lab/rss-reader-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kwp-lab/rss-reader-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T17:02:25.896522471Z",
      "updated_at": "2025-09-10T17:02:25.896522471Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "80990c6c-9b96-4c8c-ad64-0cc19f78bc8d",
      "name": "ai.smithery/BigVik193-reddit-user-mcp",
      "category": "Community",
      "description": "Browse and manage Reddit posts, comments, and threads. Fetch user activity, explore hot/new/rising…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BigVik193/reddit-user-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-user-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T21:19:18.649080266Z",
      "updated_at": "2025-09-14T21:19:18.649080266Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "8177937a-2aa9-4956-8578-5e07976a1e25",
      "name": "ai.toolprint/hypertool-mcp",
      "category": "Community",
      "description": "Dynamically expose tools from proxied servers based on an Agent Persona",
      "version": "0.0.42",
      "npm": "@toolprint/hypertool-mcp",
      "command": "npx @toolprint/hypertool-mcp@0.0.42",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/toolprint/hypertool-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@toolprint/hypertool-mcp",
          "version": "0.0.42",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T22:05:20.655840343Z",
      "updated_at": "2025-09-10T22:05:20.655840343Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "8296f9ff-65ab-431a-8368-d348330ec141",
      "name": "io.github.xkelxmc/uranium-mcp",
      "category": "Community",
      "description": "MCP for Uranium NFT tools to mint, list, and manage digital assets on the permaweb.",
      "version": "1.0.8",
      "npm": "uranium-tools-mcp",
      "command": "npx uranium-tools-mcp@1.0.8",
      "env": {
        "URANIUM_API_KEY": {
          "required": true,
          "description": "You can generate an API key from your Uranium account settings: https://portal.uranium.pro/dashboard/profile/api-keys",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/xkelxmc/uranium-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "uranium-tools-mcp",
          "version": "1.0.8",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "You can generate an API key from your Uranium account settings: https://portal.uranium.pro/dashboard/profile/api-keys",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "URANIUM_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T06:37:08.768329657Z",
      "updated_at": "2025-09-12T06:40:04.125900265Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "831f2f8f-e1fd-42df-a72b-204364d2e08f",
      "name": "io.github.ChiR24/unreal-engine-mcp",
      "category": "Community",
      "description": "Production-ready MCP server for Unreal Engine with comprehensive game development tools",
      "version": "0.2.1",
      "npm": "unreal-engine-mcp-server",
      "command": "npx unreal-engine-mcp-server@0.2.1",
      "env": {
        "UE_HOST": {
          "required": false,
          "description": "Unreal Engine host address",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "UE_RC_HTTP_PORT": {
          "required": false,
          "description": "Remote Control HTTP port",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "UE_RC_WS_PORT": {
          "required": false,
          "description": "Remote Control WebSocket port",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ChiR24/Unreal_mcp.git",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "unreal-engine-mcp-server",
          "version": "0.2.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Unreal Engine host address",
              "value": "127.0.0.1",
              "name": "UE_HOST"
            },
            {
              "description": "Remote Control HTTP port",
              "value": "30010",
              "name": "UE_RC_HTTP_PORT"
            },
            {
              "description": "Remote Control WebSocket port",
              "value": "30020",
              "name": "UE_RC_WS_PORT"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T08:19:12.108456567Z",
      "updated_at": "2025-09-17T12:43:41.544322203Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "83673f9d-7093-4f48-b57c-34f21f774802",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.5.9",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T04:48:10.687272107Z",
      "updated_at": "2025-09-12T05:10:59.819863662Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "83791fdd-0f24-4050-800c-0eb432e14022",
      "name": "io.github.xkelxmc/uranium-mcp",
      "category": "Community",
      "description": "MCP for Uranium NFT tools to mint, list, and manage digital assets on the permaweb.",
      "version": "1.0.9",
      "npm": "uranium-tools-mcp",
      "command": "npx uranium-tools-mcp@1.0.9",
      "env": {
        "URANIUM_API_KEY": {
          "required": true,
          "description": "You can generate an API key from your Uranium account settings: https://portal.uranium.pro/dashboard/profile/api-keys",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/xkelxmc/uranium-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "uranium-tools-mcp",
          "version": "1.0.9",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "You can generate an API key from your Uranium account settings: https://portal.uranium.pro/dashboard/profile/api-keys",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "URANIUM_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T06:40:04.121499157Z",
      "updated_at": "2025-09-12T06:40:04.121499157Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "8438de75-ed65-4fbe-9e3e-9570a9f8370d",
      "name": "ai.smithery/lukaskostka99-marketing-miner-mcp",
      "category": "Community",
      "description": "Discover high-impact keyword ideas across Central and Eastern European and English markets. Analyz…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/lukaskostka99/marketing-miner-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@lukaskostka99/marketing-miner-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T19:53:18.718565229Z",
      "updated_at": "2025-09-16T19:53:18.718565229Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "846f2bd9-c60c-4129-8ab2-73d5939c126b",
      "name": "io.github.ChengJiale150/jupyter-mcp-server",
      "category": "Community",
      "description": "A powerful MCP server for AI-driven Jupyter Notebook management and execution",
      "version": "1.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ChengJiale150/jupyter-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "better-jupyter-mcp-server",
          "version": "1.1.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T06:19:21.754937017Z",
      "updated_at": "2025-09-17T06:19:21.754937017Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "857bf329-eeca-4c11-aeb9-2f82f5a1fa24",
      "name": "ai.smithery/demomagic-duckchain-mcp",
      "category": "Community",
      "description": "Explore blockchain data across addresses, tokens, blocks, and transactions. Investigate any transa…",
      "version": "1.13.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/demomagic/duckchain-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@demomagic/duckchain-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T05:32:58.075993678Z",
      "updated_at": "2025-09-14T05:32:58.075993678Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "86627f06-52cf-41a8-8121-b1cfbea8f542",
      "name": "io.github.kevint-cerebras/cerebras-code-mcp",
      "category": "Community",
      "description": "Model Context Protocol (MCP) server for Cerebras to make coding faster in AI-first IDEs",
      "version": "1.3.1",
      "npm": "cerebras-code-mcp",
      "command": "npx cerebras-code-mcp@1.3.1",
      "env": {
        "CEREBRAS_API_KEY": {
          "required": true,
          "description": "Your Cerebras API key from cloud.cerebras.ai",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "OPENROUTER_API_KEY": {
          "required": false,
          "description": "Optional OpenRouter API key for fallback when Cerebras rate limits are hit",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/kevint-cerebras/cerebras-code-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "cerebras-code-mcp",
          "version": "1.3.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your Cerebras API key from cloud.cerebras.ai",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CEREBRAS_API_KEY"
            },
            {
              "description": "Optional OpenRouter API key for fallback when Cerebras rate limits are hit",
              "format": "string",
              "is_secret": true,
              "name": "OPENROUTER_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T19:59:53.502109932Z",
      "updated_at": "2025-09-09T19:59:53.502109932Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "86667e38-34da-44eb-a0ce-e34112fd98c6",
      "name": "io.github.joelverhagen/Knapcode.SampleMcpServer/aot",
      "category": "Community",
      "description": "A sample MCP server using the MCP C# SDK. Generates random numbers and random weather.",
      "version": "0.8.0-beta",
      "npm": null,
      "command": null,
      "env": {
        "WEATHER_CHOICES": {
          "required": false,
          "description": "",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/joelverhagen/Knapcode.SampleMcpServer.git",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "registry_base_url": "https://api.nuget.org",
          "identifier": "Knapcode.SampleMcpServer",
          "version": "0.8.0-beta",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "mcp",
              "type": "positional",
              "value_hint": "mcp"
            },
            {
              "value": "start",
              "type": "positional",
              "value_hint": "start"
            }
          ],
          "environment_variables": [
            {
              "value": "{weather_choices}",
              "variables": {
                "weather_choices": {
                  "description": "Comma separated list of weather descriptions to randomly select.",
                  "is_required": true
                }
              },
              "name": "WEATHER_CHOICES"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T21:54:51.656512708Z",
      "updated_at": "2025-09-12T21:54:51.656512708Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "868fcbf0-a0d5-40fc-ab05-90150f408d12",
      "name": "io.github.kkjdaniel/bgg-mcp",
      "category": "Community",
      "description": "BoardGameGeek MCP server providing access to BGG API data through standardized tools",
      "version": "1.3.2",
      "npm": null,
      "command": null,
      "env": {
        "BGG_USERNAME": {
          "required": false,
          "description": "Your BoardGameGeek username for references such as ME or MY in prompts",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/kkjdaniel/bgg-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "kdaniel/bgg-mcp",
          "version": "1.3.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your BoardGameGeek username for references such as ME or MY in prompts",
              "format": "string",
              "name": "BGG_USERNAME"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T00:05:40.274408146Z",
      "updated_at": "2025-09-16T01:51:47.036829827Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "86a34c13-67d8-4c36-9b29-47fee0e72635",
      "name": "ai.smithery/Hint-Services-obsidian-github-mcp",
      "category": "Community",
      "description": "Connect AI assistants to your GitHub-hosted Obsidian vault to seamlessly access, search, and analy…",
      "version": "0.4.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/Hint-Services/obsidian-github-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Hint-Services/obsidian-github-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T15:20:36.371442208Z",
      "updated_at": "2025-09-14T15:20:36.371442208Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "86d5e960-a135-427a-ab53-046209080b2e",
      "name": "com.ritzademo/acme-todo",
      "category": "Community",
      "description": "An MCP server for a simple todo list",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ritza-co/acme-todo",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.ritzademo.com/mcp/ritza-rzx-our91"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T16:48:08.379170462Z",
      "updated_at": "2025-09-15T16:48:08.379170462Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "87793efe-79b4-4e91-8012-6a5cc6abe61e",
      "name": "net.gepuro.mcp-company-lens-v1/company-lens-mcp-registry",
      "category": "Community",
      "description": "Search Japanese company database",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/gepuro/company-lens-mcp-registry",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp-company-lens-v1.gepuro.net/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T02:14:01.9221662Z",
      "updated_at": "2025-09-13T02:14:01.9221662Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "87df9cc3-6c2b-40c4-8087-7644b05f005d",
      "name": "ai.smithery/smithery-ai-slack",
      "category": "Community",
      "description": "Enable interaction with Slack workspaces. Supports subscribing to Slack events through Resources.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/smithery-ai/mcp-servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/slack/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T20:56:36.643850073Z",
      "updated_at": "2025-09-10T20:56:36.643850073Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "881c11dc-c6c4-4bdb-8baf-17c32f1e611b",
      "name": "com.mintmcp/outlook-email",
      "category": "Community",
      "description": "A MCP server for Outlook email that lets you search, read, and draft emails and replies.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://outlook-email.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:59:31.832251453Z",
      "updated_at": "2025-09-09T20:02:38.029140257Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "8858e484-2e5e-4166-b39f-7f1002fa27a4",
      "name": "io.github.containers/kubernetes-mcp-server",
      "category": "Community",
      "description": "An MCP server that provides [describe what your server does]",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/containers/kubernetes-mcp-server",
      "remotes": [],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T13:06:55.742929857Z",
      "updated_at": "2025-09-16T13:06:55.742929857Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "88833a2c-b1b8-4a0f-ba12-43193b270796",
      "name": "com.getunblocked/unblocked-mcp",
      "category": "Community",
      "description": "Unblocked MCP Server",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://getunblocked.com/api/mcpsse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T17:32:31.670692124Z",
      "updated_at": "2025-09-17T17:32:31.670692124Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "89304685-3f90-4915-9b41-7742cf94b56a",
      "name": "io.github.mobile-next/mobile-mcp",
      "category": "Community",
      "description": "MCP server for iOS and Android Mobile Development, Automation and Testing",
      "version": "0.0.26",
      "npm": "@mobilenext/mobile-mcp",
      "command": "npx @mobilenext/mobile-mcp@0.0.26",
      "env": {
        "": {
          "required": false,
          "description": "",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mobile-next/mobile-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@mobilenext/mobile-mcp",
          "version": "0.0.26",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "name": ""
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T06:51:49.988573415Z",
      "updated_at": "2025-09-09T06:51:49.988573415Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "89606265-25b6-4e44-8c36-0988fd23211c",
      "name": "io.github.surendranb/google-analytics-mcp",
      "category": "Community",
      "description": "An MCP server that provides [describe what your server does]",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {
        "YOUR_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/surendranb/google-analytics-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "google-analytics-mcp",
          "version": "1.2.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T06:10:41.49026764Z",
      "updated_at": "2025-09-09T06:10:41.49026764Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "899391c2-e787-4df6-9788-0fcb0e1f086d",
      "name": "com.mintmcp/gcal",
      "category": "Community",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "version": "1.0.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:36:27.962358954Z",
      "updated_at": "2025-09-09T19:42:00.468110436Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "89da352b-cb6c-4940-89bd-45b58a4740d3",
      "name": "io.github.gradion-ai/ipybox",
      "category": "Community",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "version": "0.6.3-p2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/gradion-ai/ipybox",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.3-p2",
          "runtime_hint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Required MCP server subcommand",
              "is_required": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "is_repeated": true,
              "value_hint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "is_repeated": true,
              "value_hint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "value_hint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "is_repeated": true,
              "value_hint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "value_hint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "is_repeated": true,
              "value_hint": "bind_mount"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T08:12:36.178778068Z",
      "updated_at": "2025-09-14T08:12:36.178778068Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "8bb26bcc-ecea-433a-ac25-ad9a370a4617",
      "name": "dev.lingo/main",
      "category": "Community",
      "description": "Lingo.dev MCP Server - World-class i18n implementation with ICU MessageFormat.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.lingo.dev/main"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T08:32:24.189924177Z",
      "updated_at": "2025-09-17T08:32:24.189924177Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "8d07348b-fc98-4ddd-8fa3-31502600c39c",
      "name": "ai.smithery/DynamicEndpoints-autogen_mcp",
      "category": "Community",
      "description": "Create and manage AI agents that collaborate and solve problems through natural language interacti…",
      "version": "0.3.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/DynamicEndpoints/Autogen_MCP",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/autogen_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T13:57:38.185529674Z",
      "updated_at": "2025-09-11T13:57:38.185529674Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "8d2ec6b3-7e55-40b9-8d76-7e45f5063e29",
      "name": "io.github.savhascelik/meta-api-mcp-server",
      "category": "Community",
      "description": "A configuration-driven Meta API Gateway server for the Model Context Protocol (MCP).",
      "version": "1.0.0",
      "npm": "meta-api-mcp-server",
      "command": "npx meta-api-mcp-server@1.0.4",
      "env": {
        "YOUR_API_KEY": {
          "required": true,
          "description": "If the api you are connecting to requires api_key, you can use this variable and you can also define different variables",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/savhascelik/meta-api-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "meta-api-mcp-server",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "If the api you are connecting to requires api_key, you can use this variable and you can also define different variables",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T04:02:19.493255754Z",
      "updated_at": "2025-09-09T04:14:51.989316259Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "8e307ce2-4847-4aa9-952f-22017f14f7ef",
      "name": "io.github.GLips/Figma-Context-MCP",
      "category": "Community",
      "description": "Give your coding agent access to your Figma data. Implement designs in any framework in one-shot.",
      "version": "0.6.0",
      "npm": "figma-developer-mcp",
      "command": "npx figma-developer-mcp@0.6.0",
      "env": {
        "FIGMA_API_KEY": {
          "required": true,
          "description": "Your Figma Personal Access Token, learn more here: https://www.figma.com/developers/api#access-tokens",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "NODE_ENV": {
          "required": false,
          "description": "Start the server in stdio mode, keep as CLI",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/GLips/Figma-Context-MCP",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "figma-developer-mcp",
          "version": "0.6.0",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "--stdio",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Your Figma Personal Access Token, learn more here: https://www.figma.com/developers/api#access-tokens",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "FIGMA_API_KEY"
            },
            {
              "description": "Start the server in stdio mode, keep as CLI",
              "default": "cli",
              "name": "NODE_ENV"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T16:40:36.136529165Z",
      "updated_at": "2025-09-09T16:40:36.136529165Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "8f91d610-22eb-4116-9fb7-413af6d27c0a",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "category": "Community",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "version": "0.9.8",
      "npm": "@atlassian-dc-mcp/bitbucket",
      "command": "npx @atlassian-dc-mcp/bitbucket@0.9.8",
      "env": {
        "BITBUCKET_HOST": {
          "required": false,
          "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "BITBUCKET_API_BASE_PATH": {
          "required": false,
          "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "BITBUCKET_API_TOKEN": {
          "required": true,
          "description": "Bitbucket Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.8",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T13:18:51.361262856Z",
      "updated_at": "2025-09-13T13:29:18.892466109Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "8fc6704f-44b1-4c4b-9046-40bf54316419",
      "name": "ai.shawndurrani/mcp-registry",
      "category": "Community",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "version": "0.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T03:11:16.637453593Z",
      "updated_at": "2025-09-15T04:01:11.068068105Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "902233d1-24e6-48d2-8461-d652edecdd2d",
      "name": "ai.smithery/Kryptoskatt-mcp-server",
      "category": "Community",
      "description": "Enable AI assistants to interact seamlessly with the DefiLlama API by translating MCP tool calls i…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Kryptoskatt/mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T10:41:17.40297863Z",
      "updated_at": "2025-09-17T10:41:17.40297863Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "91091a5c-39bf-499b-a706-7036631faff1",
      "name": "com.pulsemcp.servers/pulse-fetch",
      "category": "Community",
      "description": "MCP server that extracts clean, structured content from web pages with anti-bot bypass capabilities.",
      "version": "0.2.14",
      "npm": "@pulsemcp/pulse-fetch",
      "command": "npx @pulsemcp/pulse-fetch@0.2.14",
      "env": {
        "FIRECRAWL_API_KEY": {
          "required": false,
          "description": "API key for Firecrawl service to bypass anti-bot measures",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "BRIGHTDATA_API_KEY": {
          "required": false,
          "description": "Bearer token for BrightData Web Unlocker service",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "STRATEGY_CONFIG_PATH": {
          "required": false,
          "description": "Path to markdown file containing scraping strategy configuration",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "OPTIMIZE_FOR": {
          "required": false,
          "description": "Optimization strategy for scraping: cost or speed",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_RESOURCE_STORAGE": {
          "required": false,
          "description": "Storage backend for saved resources: memory or filesystem",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_RESOURCE_FILESYSTEM_ROOT": {
          "required": false,
          "description": "Directory for filesystem storage (only used with filesystem type)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "SKIP_HEALTH_CHECKS": {
          "required": false,
          "description": "Skip API authentication health checks at startup",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "LLM_PROVIDER": {
          "required": false,
          "description": "LLM provider for extract feature: anthropic, openai, openai-compatible",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "LLM_API_KEY": {
          "required": false,
          "description": "API key for the chosen LLM provider",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "LLM_API_BASE_URL": {
          "required": false,
          "description": "Base URL for OpenAI-compatible providers",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "LLM_MODEL": {
          "required": false,
          "description": "Specific model to use for extraction",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/pulsemcp/mcp-servers",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@pulsemcp/pulse-fetch",
          "version": "0.2.14",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "API key for Firecrawl service to bypass anti-bot measures",
              "is_secret": true,
              "name": "FIRECRAWL_API_KEY"
            },
            {
              "description": "Bearer token for BrightData Web Unlocker service",
              "is_secret": true,
              "name": "BRIGHTDATA_API_KEY"
            },
            {
              "description": "Path to markdown file containing scraping strategy configuration",
              "default": "/tmp/pulse-fetch/strategy.md",
              "name": "STRATEGY_CONFIG_PATH"
            },
            {
              "description": "Optimization strategy for scraping: cost or speed",
              "default": "cost",
              "choices": [
                "cost",
                "speed"
              ],
              "name": "OPTIMIZE_FOR"
            },
            {
              "description": "Storage backend for saved resources: memory or filesystem",
              "default": "memory",
              "choices": [
                "memory",
                "filesystem"
              ],
              "name": "MCP_RESOURCE_STORAGE"
            },
            {
              "description": "Directory for filesystem storage (only used with filesystem type)",
              "default": "/tmp/pulse-fetch/resources",
              "name": "MCP_RESOURCE_FILESYSTEM_ROOT"
            },
            {
              "description": "Skip API authentication health checks at startup",
              "format": "boolean",
              "default": "false",
              "name": "SKIP_HEALTH_CHECKS"
            },
            {
              "description": "LLM provider for extract feature: anthropic, openai, openai-compatible",
              "choices": [
                "anthropic",
                "openai",
                "openai-compatible"
              ],
              "name": "LLM_PROVIDER"
            },
            {
              "description": "API key for the chosen LLM provider",
              "is_secret": true,
              "name": "LLM_API_KEY"
            },
            {
              "description": "Base URL for OpenAI-compatible providers",
              "name": "LLM_API_BASE_URL"
            },
            {
              "description": "Specific model to use for extraction",
              "name": "LLM_MODEL"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T00:19:19.119117909Z",
      "updated_at": "2025-09-09T00:19:19.119117909Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "91ce777a-4be7-4d0a-a084-ed4c5419e97d",
      "name": "io.github.jkawamoto/mcp-youtube-transcript",
      "category": "Community",
      "description": "An MCP server retrieving transcripts of YouTube videos",
      "version": "0.5.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/jkawamoto/mcp-youtube-transcript",
      "remotes": [],
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-youtube-transcript/releases/download/v0.5.0/mcp-youtube-transcript.mcpb",
          "version": "0.5.0",
          "file_sha256": "d44842be1e8029c9eaa4412668d06825d668b4eeb645a70386b1c98ab9de49ec",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T07:27:14.970033687Z",
      "updated_at": "2025-09-17T08:10:03.905251986Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "92f5d42d-76de-461d-bbc0-51316831f6a9",
      "name": "io.github.agentailor/slimcontext-mcp-server",
      "category": "Community",
      "description": "MCP Server for SlimContext - AI chat history compression tools",
      "version": "0.1.2",
      "npm": "slimcontext-mcp-server",
      "command": "npx slimcontext-mcp-server@0.1.2",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/agentailor/slimcontext-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "slimcontext-mcp-server",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-16T07:56:23.181995741Z",
      "updated_at": "2025-09-16T07:56:23.181995741Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "92fb64f2-8006-4551-bb6d-ed2b87b65887",
      "name": "ai.smithery/BigVik193-reddit-ads-mcp-api",
      "category": "Community",
      "description": "Manage Reddit advertising end to end across accounts, funding methods, campaigns, ad groups, and a…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BigVik193/reddit-ads-mcp-api",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@BigVik193/reddit-ads-mcp-api/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T22:40:30.852738154Z",
      "updated_at": "2025-09-14T22:40:30.852738154Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "93bdbdfb-3c54-4757-bebf-3a0041945d68",
      "name": "io.github.cyanheads/mcp-ts-template",
      "category": "Community",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "version": "2.0.3",
      "npm": "mcp-ts-template",
      "command": "npx mcp-ts-template@2.0.2",
      "env": {
        "MCP_LOG_LEVEL": {
          "required": false,
          "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_HTTP_PORT": {
          "required": false,
          "description": "The port to run the HTTP server on.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_AUTH_MODE": {
          "required": false,
          "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cyanheads/mcp-ts-template",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.2",
          "runtime_hint": "bun",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.2",
          "runtime_hint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-15T13:43:27.494335026Z",
      "updated_at": "2025-09-15T13:43:27.494335026Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "93c43441-0cd8-4fad-b46d-28887997e1d2",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "category": "Community",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "version": "1.4.2",
      "npm": "hackmd-mcp",
      "command": "npx hackmd-mcp@1.4.2",
      "env": {
        "HACKMD_API_TOKEN": {
          "required": true,
          "description": "Your HackMD API token for API authentication",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "HACKMD_API_URL": {
          "required": false,
          "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/yuna0x0/hackmd-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.4.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.4.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.4.2/hackmd-mcp-1.4.2.mcpb",
          "version": "1.4.2",
          "file_sha256": "7b6ee105271d8595e3e5a0a3e4f9075ab3a2b7b373f529f4c3e99d1f93dead62",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T08:20:45.650204026Z",
      "updated_at": "2025-09-15T03:10:53.114708285Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "94689419-d526-4008-b0df-d79635930fa1",
      "name": "ai.waystation/office",
      "category": "Community",
      "description": "Create, edit, and collaborate on Office documents and spreadsheets.",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/office/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/office/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:32:54.33420243Z",
      "updated_at": "2025-09-09T14:32:54.33420243Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "94c0be03-60cf-45e3-9f6e-db4ad643f243",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "category": "Community",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "version": "0.9.0",
      "npm": "@atlassian-dc-mcp/jira",
      "command": "npx @atlassian-dc-mcp/jira@0.9.0",
      "env": {
        "JIRA_HOST": {
          "required": false,
          "description": "Jira host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "JIRA_API_BASE_PATH": {
          "required": false,
          "description": "Jira API base path (alternative to JIRA_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "JIRA_API_TOKEN": {
          "required": true,
          "description": "Jira Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T11:40:51.735988794Z",
      "updated_at": "2025-09-13T13:17:32.83365354Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "94cfdee1-6a62-4d40-8bf4-dab7646d4548",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "category": "Community",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "version": "0.0.13",
      "npm": "@himorishige/hatago-mcp-hub",
      "command": "npx @himorishige/hatago-mcp-hub@0.0.13",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/himorishige/hatago-mcp-hub",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.13",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T14:40:04.386322089Z",
      "updated_at": "2025-09-14T07:53:18.719599831Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "94d6b736-48d0-46f1-909f-9ce1dd82851e",
      "name": "io.github.priyankark/lighthouse-mcp",
      "category": "Community",
      "description": "MCP server for Google Lighthouse performance metrics",
      "version": "0.1.9",
      "npm": "lighthouse-mcp",
      "command": "npx lighthouse-mcp@0.1.9",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/priyankark/lighthouse-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "lighthouse-mcp",
          "version": "0.1.9",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T10:02:57.086660409Z",
      "updated_at": "2025-09-09T10:02:57.086660409Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "94e6cd5b-6def-4054-bf2d-91c8c31205a5",
      "name": "io.github.jkakar/recipe-mcp",
      "category": "Community",
      "description": "Generate and remix recipes using cookwith.co",
      "version": "1.0.3",
      "npm": "@cookwith/recipe-mcp",
      "command": "npx @cookwith/recipe-mcp@1.0.3",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/blaideinc/recipe-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cookwith/recipe-mcp",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T18:30:58.5302013Z",
      "updated_at": "2025-09-11T18:33:51.807883948Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "95109f0a-8fb4-45ef-93d1-8c38874c2be7",
      "name": "md.install/try",
      "category": "Community",
      "description": "Create guides to instruct coding agents to use your software (SDK, library, framework, API, etc).",
      "version": "0.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://install.md/mcp/try"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T07:04:48.602631925Z",
      "updated_at": "2025-09-09T07:10:11.210375884Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "95837ebe-5fcd-4692-8020-5920d760d47c",
      "name": "io.github.p1va/symbols",
      "category": "Community",
      "description": "MCP server to read, inspect and troubleshoot codebase symbols",
      "version": "1.0.0",
      "npm": "@p1va/symbols",
      "command": "npx @p1va/symbols@0.0.10",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/p1va/symbols",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@p1va/symbols",
          "version": "0.0.10",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T16:29:27.100278154Z",
      "updated_at": "2025-09-12T16:29:27.100278154Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "95fc358c-7c94-4f0f-ad50-e7e516940dba",
      "name": "com.onkernel/kernel-mcp-server",
      "category": "Community",
      "description": "Access Kernel's cloud-based browsers and app actions via MCP (remote HTTP + OAuth).",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/onkernel/kernel-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.onkernel.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T18:04:37.61770657Z",
      "updated_at": "2025-09-09T18:04:37.61770657Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "9623b70e-af1d-48ac-8338-e37ef96ca8cf",
      "name": "io.github.ruvnet/claude-flow",
      "category": "Community",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "version": "2.0.0-alpha.106",
      "npm": "claude-flow",
      "command": "npx claude-flow@2.0.0-alpha.106",
      "env": {
        "ANTHROPIC_API_KEY": {
          "required": false,
          "description": "Anthropic API key for Claude AI models",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "CLAUDE_FLOW_MODE": {
          "required": false,
          "description": "Operation mode: development, production, or test",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CLAUDE_FLOW_MEMORY_PATH": {
          "required": false,
          "description": "Path for persistent memory storage",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CLAUDE_FLOW_MAX_AGENTS": {
          "required": false,
          "description": "Maximum number of concurrent agents",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CLAUDE_FLOW_PORT": {
          "required": false,
          "description": "MCP server port",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "GITHUB_TOKEN": {
          "required": false,
          "description": "GitHub personal access token for repository operations",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "FLOW_NEXUS_API_KEY": {
          "required": false,
          "description": "Flow Nexus cloud platform API key",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ruvnet/claude-flow",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.106",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Anthropic API key for Claude AI models",
              "format": "string",
              "is_secret": true,
              "name": "ANTHROPIC_API_KEY"
            },
            {
              "description": "Operation mode: development, production, or test",
              "format": "string",
              "name": "CLAUDE_FLOW_MODE"
            },
            {
              "description": "Path for persistent memory storage",
              "format": "string",
              "name": "CLAUDE_FLOW_MEMORY_PATH"
            },
            {
              "description": "Maximum number of concurrent agents",
              "format": "string",
              "name": "CLAUDE_FLOW_MAX_AGENTS"
            },
            {
              "description": "MCP server port",
              "format": "string",
              "name": "CLAUDE_FLOW_PORT"
            },
            {
              "description": "GitHub personal access token for repository operations",
              "format": "string",
              "is_secret": true,
              "name": "GITHUB_TOKEN"
            },
            {
              "description": "Flow Nexus cloud platform API key",
              "format": "string",
              "is_secret": true,
              "name": "FLOW_NEXUS_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T16:55:33.070739114Z",
      "updated_at": "2025-09-10T16:59:34.223138386Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "967249f6-33c1-430d-a5b2-a1064337384d",
      "name": "ai.shawndurrani/mcp-registry",
      "category": "Community",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "version": "0.1.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T23:02:09.73866209Z",
      "updated_at": "2025-09-16T23:02:09.73866209Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "96a8497f-6246-4326-9394-a28ff6908fe2",
      "name": "io.github.leshchenko1979/fast-mcp-telegram",
      "category": "Community",
      "description": "Telegram MCP server with search and messaging capabilities",
      "version": "0.5.0",
      "npm": null,
      "command": null,
      "env": {
        "API_ID": {
          "required": true,
          "description": "Telegram API ID (from https://my.telegram.org/apps)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "API_HASH": {
          "required": true,
          "description": "Telegram API Hash (from https://my.telegram.org/apps)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "SERVER_MODE": {
          "required": false,
          "description": "Server mode: stdio (local), http-no-auth (dev), http-auth (prod)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "SESSION_DIR": {
          "required": false,
          "description": "Custom session directory (defaults to ~/.config/fast-mcp-telegram/)",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/leshchenko1979/fast-mcp-telegram",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "fast-mcp-telegram",
          "version": "0.5.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Telegram API ID (from https://my.telegram.org/apps)",
              "is_required": true,
              "name": "API_ID"
            },
            {
              "description": "Telegram API Hash (from https://my.telegram.org/apps)",
              "is_required": true,
              "is_secret": true,
              "name": "API_HASH"
            },
            {
              "description": "Server mode: stdio (local), http-no-auth (dev), http-auth (prod)",
              "default": "stdio",
              "choices": [
                "stdio",
                "http-no-auth",
                "http-auth"
              ],
              "name": "SERVER_MODE"
            },
            {
              "description": "Custom session directory (defaults to ~/.config/fast-mcp-telegram/)",
              "name": "SESSION_DIR"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T14:08:48.770808907Z",
      "updated_at": "2025-09-17T14:08:48.770808907Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "96cb8c0c-c096-4fa3-bc84-2e34a14f4f81",
      "name": "io.github.shinpr/mcp-image",
      "category": "Community",
      "description": "AI image generation MCP server using Nano Banana with intelligent prompt enhancement",
      "version": "0.2.3",
      "npm": "mcp-image",
      "command": "npx mcp-image@0.2.3",
      "env": {
        "GEMINI_API_KEY": {
          "required": true,
          "description": "Google Gemini API key for image generation (get from https://aistudio.google.com/apikey)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "IMAGE_OUTPUT_DIR": {
          "required": false,
          "description": "Absolute path to directory where generated images will be saved (defaults to ./output)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "SKIP_PROMPT_ENHANCEMENT": {
          "required": false,
          "description": "Set to 'true' to disable automatic prompt optimization and use direct prompts",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/shinpr/mcp-image",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-image",
          "version": "0.2.3",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Google Gemini API key for image generation (get from https://aistudio.google.com/apikey)",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "Absolute path to directory where generated images will be saved (defaults to ./output)",
              "format": "string",
              "name": "IMAGE_OUTPUT_DIR"
            },
            {
              "description": "Set to 'true' to disable automatic prompt optimization and use direct prompts",
              "format": "boolean",
              "name": "SKIP_PROMPT_ENHANCEMENT"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T00:28:17.174731889Z",
      "updated_at": "2025-09-12T00:28:17.174731889Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "97337d30-5e47-421e-9599-30487d21ea45",
      "name": "io.github.bytedance/mcp-server-commands",
      "category": "Community",
      "description": "An MCP server to run arbitrary commands",
      "version": "1.0.0",
      "npm": "@agent-infra/mcp-server-commands",
      "command": "npx @agent-infra/mcp-server-commands@latest",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/bytedance/UI-TARS-desktop",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "package_arguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            },
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-commands",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "runtime_arguments": [
            {
              "description": "current working directory",
              "format": "string",
              "type": "named",
              "name": "cwd"
            }
          ],
          "package_arguments": [
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T06:16:30.41372415Z",
      "updated_at": "2025-09-09T06:16:30.41372415Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "975e0708-c43d-42ba-a27f-6d69f7c8e91a",
      "name": "io.coupler/remote-mcp-server",
      "category": "Community",
      "description": "Coupler.io remote MCP server",
      "version": "0.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.coupler.io/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T16:12:03.417415684Z",
      "updated_at": "2025-09-10T16:12:03.417415684Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "983ebbb0-1365-44c9-9832-edafca128508",
      "name": "ai.smithery/jirispilka-actors-mcp-server",
      "category": "Community",
      "description": "Greet anyone by name with friendly, personalized messages. Explore the origin of Hello, World thro…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/jirispilka/actors-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@jirispilka/actors-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T11:59:13.452963424Z",
      "updated_at": "2025-09-11T11:59:13.452963424Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "987b074f-a2ca-493d-9830-7ccb0b5bd165",
      "name": "io.github.bytedance/mcp-server-filesystem",
      "category": "Community",
      "description": "MCP server for filesystem access",
      "version": "1.0.0",
      "npm": "@agent-infra/mcp-server-filesystem",
      "command": "npx @agent-infra/mcp-server-filesystem@latest",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/bytedance/UI-TARS-desktop",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "is_required": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "sse",
            "url": "http://127.0.0.1:{port}/sse"
          },
          "package_arguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "is_required": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            },
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@agent-infra/mcp-server-filesystem",
          "version": "latest",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:{port}/mcp"
          },
          "package_arguments": [
            {
              "description": "Comma-separated list of allowed directories for file operations",
              "is_required": true,
              "format": "string",
              "type": "named",
              "name": "allowed-directories"
            },
            {
              "description": "Server port number",
              "is_required": true,
              "format": "number",
              "default": "8089",
              "type": "named",
              "name": "port"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T06:16:36.369747535Z",
      "updated_at": "2025-09-09T06:16:36.369747535Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "98c4bba3-1c5d-4981-8ba5-6cda90f78c32",
      "name": "io.github.shalevshalit/image-recongnition-mcp",
      "category": "Community",
      "description": "MCP server for AI-powered image recognition and description using OpenAI vision models.",
      "version": "1.0.0",
      "npm": "image-recongnition-mcp",
      "command": "npx image-recongnition-mcp@1.0.4",
      "env": {
        "OPENAI_API_KEY": {
          "required": true,
          "description": "Your OpenAI API key for image recognition and description services",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcp-s-ai/image-recongnition-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "image-recongnition-mcp",
          "version": "1.0.4",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your OpenAI API key for image recognition and description services",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "OPENAI_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T15:01:36.626715571Z",
      "updated_at": "2025-09-10T15:01:36.626715571Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "98f794d9-0a3c-432d-a8d2-3c5cb80eae2d",
      "name": "com.enigma/enigma-mcp-server",
      "category": "Community",
      "description": "An MCP server that provides access to trusted data about business identity and activity",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http-token",
          "headers": [
            {
              "description": "Bearer token of Enigma API key. Used to enable authentication without presenting the user with an oAuth login.",
              "is_required": true,
              "is_secret": true,
              "name": "X-API-Key"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.enigma.com/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T19:14:36.3625643Z",
      "updated_at": "2025-09-10T19:14:36.3625643Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "9978940b-0d97-4ef5-a187-0d5cd56731fb",
      "name": "dev.promplate/hmr",
      "category": "Community",
      "description": "Docs for hot-module-reload and reactive programming for Python (`hmr` on PyPI)",
      "version": "1.0.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/promplate/hmr",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://pyth-on-line.promplate.dev/hmr/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T21:13:12.376456949Z",
      "updated_at": "2025-09-17T21:13:12.376456949Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "999c8e2e-e96b-460c-9e98-f90a7603145c",
      "name": "info.mosaique/mcp",
      "category": "Community",
      "description": "Search and list latest international news (sources, comments, knowledge graph).",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.mosaique.info",
          "headers": [
            {
              "description": "API key for authentication",
              "is_required": true,
              "is_secret": true,
              "name": "X-API-Key"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T18:15:03.198216658Z",
      "updated_at": "2025-09-10T18:15:03.198216658Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "99be110f-d865-4733-88b2-97fc2f9750de",
      "name": "ai.smithery/IlyaGusev-academia_mcp",
      "category": "Community",
      "description": "Search arXiv and ACL Anthology, retrieve citations and references, and browse web sources to accel…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/IlyaGusev/academia_mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@IlyaGusev/academia_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T12:14:42.162775887Z",
      "updated_at": "2025-09-16T12:14:42.162775887Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "9b7b9ce9-886b-4281-9e3e-8b5d45998edb",
      "name": "io.github.Selenium39/mcp-server-tempmail",
      "category": "Community",
      "description": "MCP server for temporary email management using ChatTempMail API",
      "version": "1.0.1",
      "npm": "mcp-server-tempmail",
      "command": "npx mcp-server-tempmail@1.0.1",
      "env": {
        "TEMPMAIL_API_KEY": {
          "required": true,
          "description": "API key for ChatTempMail service",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "TEMPMAIL_BASE_URL": {
          "required": false,
          "description": "Base URL for ChatTempMail API (optional, defaults to https://chat-tempmail.com)",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/Selenium39/mcp-server-tempmail",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-tempmail",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "API key for ChatTempMail service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "TEMPMAIL_API_KEY"
            },
            {
              "description": "Base URL for ChatTempMail API (optional, defaults to https://chat-tempmail.com)",
              "format": "string",
              "name": "TEMPMAIL_BASE_URL"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T14:44:19.170379822Z",
      "updated_at": "2025-09-09T14:44:19.170379822Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "9c344d55-866d-4aad-8caa-5d08fa1ac54d",
      "name": "io.github.IvanMurzak/Unity-MCP",
      "category": "Community",
      "description": "Make 3D games in Unity Engine with AI. MCP Server + Plugin for Unity Editor and Unity games.",
      "version": "0.17.0",
      "npm": null,
      "command": null,
      "env": {
        "UNITY_MCP_PORT": {
          "required": false,
          "description": "Client -> Server <- Plugin connection port (default: 8080)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "UNITY_MCP_PLUGIN_TIMEOUT": {
          "required": false,
          "description": "Plugin -> Server connection timeout (ms) (default: 10000)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "UNITY_MCP_CLIENT_TRANSPORT": {
          "required": false,
          "description": "Client -> Server transport type: stdio or http (default: http)",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/IvanMurzak/Unity-MCP",
      "remotes": [],
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "ivanmurzakdev/unity-mcp-server",
          "version": "0.17.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Client -> Server <- Plugin connection port (default: 8080)",
              "format": "number",
              "name": "UNITY_MCP_PORT"
            },
            {
              "description": "Plugin -> Server connection timeout (ms) (default: 10000)",
              "format": "number",
              "name": "UNITY_MCP_PLUGIN_TIMEOUT"
            },
            {
              "description": "Client -> Server transport type: stdio or http (default: http)",
              "format": "string",
              "default": "stdio",
              "name": "UNITY_MCP_CLIENT_TRANSPORT"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T10:14:26.342754989Z",
      "updated_at": "2025-09-12T11:41:26.342442162Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "9dcd9a6c-b7b1-45f0-98a7-3fd8d3c49d51",
      "name": "ai.waystation/teams",
      "category": "Community",
      "description": "Collaborate, chat, and manage meetings in Microsoft Teams.",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/teams/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/teams/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:46:08.709922175Z",
      "updated_at": "2025-09-09T14:46:08.709922175Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "9e289796-16e8-440e-8b01-311e7bbb64cb",
      "name": "io.github.agentailor/slimcontext-mcp-server",
      "category": "Community",
      "description": "MCP Server for SlimContext - AI chat history compression tools",
      "version": "0.1.1",
      "npm": "slimcontext-mcp-server",
      "command": "npx slimcontext-mcp-server@0.1.1",
      "env": {
        "YOUR_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/agentailor/slimcontext-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "slimcontext-mcp-server",
          "version": "0.1.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T15:57:56.189103539Z",
      "updated_at": "2025-09-16T07:56:23.189924643Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "9ef1c5fc-0d30-4038-b8c0-93f9aaffd1b2",
      "name": "com.apple-rag/mcp-server",
      "category": "Community",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "version": "2.5.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BingoWon/apple-rag-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T15:11:26.206910319Z",
      "updated_at": "2025-09-17T15:13:14.51544383Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a0bcd673-292a-4ba3-8dbc-eaf2ff92e7fc",
      "name": "io.github.cyanheads/mcp-ts-template",
      "category": "Community",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "version": "2.0.2",
      "npm": "mcp-ts-template",
      "command": "npx mcp-ts-template@2.0.1",
      "env": {
        "MCP_LOG_LEVEL": {
          "required": false,
          "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_HTTP_PORT": {
          "required": false,
          "description": "The port to run the HTTP server on.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_AUTH_MODE": {
          "required": false,
          "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cyanheads/mcp-ts-template",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtime_hint": "bun",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtime_hint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-14T10:06:30.723296411Z",
      "updated_at": "2025-09-15T13:43:27.500265535Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a1ca2e8c-20e7-44f7-a0ad-eb2aef2faf78",
      "name": "ai.smithery/aryankeluskar-poke-video-mcp",
      "category": "Community",
      "description": "Search your Flashback video library with natural language to instantly find relevant moments. Get…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/aryankeluskar/poke-video-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@aryankeluskar/poke-video-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T17:42:05.006813829Z",
      "updated_at": "2025-09-14T17:42:05.006813829Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a2e1778e-50cf-4972-a9cb-e31a89068e6f",
      "name": "io.github.linxule/lotus-wisdom",
      "category": "Community",
      "description": "An MCP server for problem-solving using the Lotus Sutra's wisdom framework.",
      "version": "0.1.2",
      "npm": "lotus-wisdom-mcp",
      "command": "npx lotus-wisdom-mcp@0.1.2",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/linxule/lotus-wisdom-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "lotus-wisdom-mcp",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-16T23:53:10.712981505Z",
      "updated_at": "2025-09-16T23:53:10.712981505Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a31f1b64-c682-4771-a4a8-76b0a9d96ec9",
      "name": "io.github.leshchenko1979/fast-mcp-telegram",
      "category": "Community",
      "description": "Telegram MCP server with search and messaging capabilities",
      "version": "0.4.4",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T16:40:10.557651314Z",
      "updated_at": "2025-09-15T08:03:29.365893275Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a6ab98ca-2224-4dc5-b7ce-91f97c40cb56",
      "name": "com.docfork/docfork-mcp",
      "category": "Community",
      "description": "MCP server for Docfork",
      "version": "0.7.2",
      "npm": "docfork",
      "command": "npx docfork@0.7.2",
      "env": {
        "YOUR_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/docfork/docfork-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.docfork.com/mcp"
        }
      ],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "docfork",
          "version": "0.7.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T14:44:53.975619664Z",
      "updated_at": "2025-09-17T14:44:53.975619664Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a77e222c-d64a-4cd2-a44a-b4e46bdcbfed",
      "name": "io.github.b1ff/atlassian-dc-mcp-confluence",
      "category": "Community",
      "description": "MCP server for Atlassian Confluence Data Center - access and manage content",
      "version": "0.9.7",
      "npm": "@atlassian-dc-mcp/confluence",
      "command": "npx @atlassian-dc-mcp/confluence@0.9.7",
      "env": {
        "CONFLUENCE_HOST": {
          "required": false,
          "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CONFLUENCE_API_BASE_PATH": {
          "required": false,
          "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CONFLUENCE_API_TOKEN": {
          "required": true,
          "description": "Confluence Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/confluence",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Confluence host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "CONFLUENCE_HOST"
            },
            {
              "description": "Confluence API base path (alternative to CONFLUENCE_HOST)",
              "format": "string",
              "name": "CONFLUENCE_API_BASE_PATH"
            },
            {
              "description": "Confluence Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CONFLUENCE_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T13:17:33.200471952Z",
      "updated_at": "2025-09-13T13:18:50.974154729Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a793348b-c4ba-457a-aa80-6b7269adc4ce",
      "name": "io.github.yuna0x0/hackmd-mcp",
      "category": "Community",
      "description": "A Model Context Protocol server for integrating HackMD's note-taking platform with AI assistants.",
      "version": "1.5.0",
      "npm": "hackmd-mcp",
      "command": "npx hackmd-mcp@1.5.0",
      "env": {
        "HACKMD_API_TOKEN": {
          "required": true,
          "description": "Your HackMD API token for API authentication",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "HACKMD_API_URL": {
          "required": false,
          "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/yuna0x0/hackmd-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "hackmd-mcp",
          "version": "1.5.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "yuna0x0/hackmd-mcp",
          "version": "1.5.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        },
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/yuna0x0/hackmd-mcp/releases/download/v1.5.0/hackmd-mcp-1.5.0.mcpb",
          "version": "1.5.0",
          "file_sha256": "6035e3082ffaf5627e1293a2c8a5d7f42496010431c9b026859dae3bbaa9ce38",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your HackMD API token for API authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "HACKMD_API_TOKEN"
            },
            {
              "description": "Optional HackMD API URL, defaults to https://api.hackmd.io/v1",
              "format": "string",
              "default": "https://api.hackmd.io/v1",
              "name": "HACKMD_API_URL"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-15T03:10:52.965842649Z",
      "updated_at": "2025-09-15T03:10:52.965842649Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a7aa8d87-ead3-4ee3-9021-f41edf303f72",
      "name": "com.mintmcp/gcal",
      "category": "Community",
      "description": "A MintMCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:28:43.15437668Z",
      "updated_at": "2025-09-09T19:35:28.126060102Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a7fef886-c01c-4752-877e-b0da11049d3d",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "category": "Community",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "version": "0.0.12",
      "npm": "@himorishige/hatago-mcp-hub",
      "command": "npx @himorishige/hatago-mcp-hub@0.0.12",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/himorishige/hatago-mcp-hub",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.12",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T13:55:18.531630059Z",
      "updated_at": "2025-09-13T14:40:04.494030232Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a8a5c761-c1dc-4d1d-9100-b57df4c9ec0d",
      "name": "io.github.chris-schra/mcp-funnel",
      "category": "Community",
      "description": "MCP proxy that aggregates multiple servers with tool filtering and customization",
      "version": "0.0.6",
      "npm": "mcp-funnel",
      "command": "npx mcp-funnel@0.0.6",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/chris-schra/mcp-funnel",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-funnel",
          "version": "0.0.6",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T18:33:35.912597Z",
      "updated_at": "2025-09-17T18:55:31.893305521Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a8f1ddcb-c162-4a50-8295-74ffbfbf76a7",
      "name": "ai.smithery/Aman-Amith-Shastry-scientific_computation_mcp",
      "category": "Community",
      "description": "This MCP server enables users to perform scientific computations regarding linear algebra and vect…",
      "version": "1.13.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/Aman-Amith-Shastry/scientific_computation_mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Aman-Amith-Shastry/scientific_computation_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T01:14:07.078270174Z",
      "updated_at": "2025-09-12T01:14:07.078270174Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a953ea94-b7e7-415c-8766-33c4d5b64b4d",
      "name": "io.github.OpenCageData/opencage-geocoding-mcp",
      "category": "Community",
      "description": "MCP server for OpenCage geocoding API",
      "version": "1.0.3",
      "npm": "@opencage/mcp-opencage-server",
      "command": "npx @opencage/mcp-opencage-server@1.0.3",
      "env": {
        "YOUR_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/OpenCageData/opencage-geocoding-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@opencage/mcp-opencage-server",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T18:24:40.318380733Z",
      "updated_at": "2025-09-11T18:24:40.318380733Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "a9ab84c2-d56e-4bf2-8dc2-ad725fdb8d27",
      "name": "io.github.domdomegg/airtable-mcp-server",
      "category": "Community",
      "description": "Read and write access to Airtable database schemas, tables, and records.",
      "version": "1.7.3",
      "npm": "airtable-mcp-server",
      "command": "npx airtable-mcp-server@1.7.3",
      "env": {
        "AIRTABLE_API_KEY": {
          "required": true,
          "description": "Airtable personal access token (e.g., pat123.abc123). Create at https://airtable.com/create/tokens/new with scopes: schema.bases:read, data.records:read, and optionally schema.bases:write and data.records:write.",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/domdomegg/airtable-mcp-server.git",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "airtable-mcp-server",
          "version": "1.7.3",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Airtable personal access token (e.g., pat123.abc123). Create at https://airtable.com/create/tokens/new with scopes: schema.bases:read, data.records:read, and optionally schema.bases:write and data.records:write.",
              "is_required": true,
              "is_secret": true,
              "name": "AIRTABLE_API_KEY"
            }
          ]
        },
        {
          "registry_type": "oci",
          "identifier": "domdomegg/airtable-mcp-server",
          "version": "1.7.3",
          "runtime_hint": "docker",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Airtable personal access token (e.g., pat123.abc123). Create at https://airtable.com/create/tokens/new with scopes: schema.bases:read, data.records:read, and optionally schema.bases:write and data.records:write.",
              "is_required": true,
              "is_secret": true,
              "name": "AIRTABLE_API_KEY"
            }
          ]
        },
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/domdomegg/airtable-mcp-server/releases/download/v1.7.3/airtable-mcp-server.mcpb",
          "version": "1.7.3",
          "file_sha256": "0f28a9129cfebd262dfb77854c872355d21401bb3e056575b3027081f5d570ca",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T03:19:04.49211253Z",
      "updated_at": "2025-09-12T03:19:04.49211253Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "aa5b856a-de58-4023-b828-489a606c4fba",
      "name": "ai.smithery/plainyogurt21-sec-edgar-mcp",
      "category": "Community",
      "description": "Provide AI assistants with real-time access to official SEC EDGAR filings and financial data. Enab…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/plainyogurt21/sec-edgar-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@plainyogurt21/sec-edgar-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T21:20:44.610657663Z",
      "updated_at": "2025-09-13T21:20:44.610657663Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "aa8580fa-a837-4ca7-83b3-181bed182529",
      "name": "io.github.gradion-ai/ipybox",
      "category": "Community",
      "description": "An MCP server for sandboxed Python code execution with IPython and Docker, and file transfer.",
      "version": "0.6.6",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/gradion-ai/ipybox",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "ipybox",
          "version": "0.6.6",
          "runtime_hint": "uvx",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Required MCP server subcommand",
              "is_required": true,
              "value": "mcp",
              "type": "positional"
            },
            {
              "description": "Directory allowed for host filesystem operations",
              "type": "named",
              "name": "--allowed-dir",
              "is_repeated": true,
              "value_hint": "directory_path"
            },
            {
              "description": "Domain, IP address, or CIDR range allowed for outbound network access",
              "type": "named",
              "name": "--allowed-domain",
              "is_repeated": true,
              "value_hint": "domain_or_ip"
            },
            {
              "description": "Docker image tag to use",
              "type": "named",
              "name": "--container-tag",
              "value_hint": "docker_image_tag"
            },
            {
              "description": "Environment variable for container (KEY=VALUE format)",
              "type": "named",
              "name": "--container-env-var",
              "is_repeated": true,
              "value_hint": "env_var"
            },
            {
              "description": "Path to file containing container environment variables",
              "type": "named",
              "name": "--container-env-file",
              "value_hint": "file_path"
            },
            {
              "description": "Bind mount for container (host_path:container_path format)",
              "type": "named",
              "name": "--container-bind",
              "is_repeated": true,
              "value_hint": "bind_mount"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T09:57:57.864977026Z",
      "updated_at": "2025-09-14T09:57:57.864977026Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "aaf0e62a-eaa9-49d9-a6f1-c10cf459274e",
      "name": "ai.waystation/monday",
      "category": "Community",
      "description": "Access and manage your Monday.com boards, items, and updates seamlessly",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/monday/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/monday/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:20:40.836347203Z",
      "updated_at": "2025-09-09T14:20:40.836347203Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ab48df60-848e-4f96-b5d0-9fa505deb331",
      "name": "io.github.cyanheads/git-mcp-server",
      "category": "Community",
      "description": "Comprehensive Git MCP server enabling native git tools including clone, commit, worktree, & more.",
      "version": "2.3.3",
      "npm": "@cyanheads/git-mcp-server",
      "command": "npx @cyanheads/git-mcp-server@2.3.3",
      "env": {
        "MCP_TRANSPORT_TYPE": {
          "required": true,
          "description": "Specifies the transport mechanism for the server.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_LOG_LEVEL": {
          "required": false,
          "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "GIT_SIGN_COMMITS": {
          "required": false,
          "description": "Set to 'true' to enable GPG/SSH signing for commits made via the git_commit tool.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_HTTP_PORT": {
          "required": false,
          "description": "The port to run the HTTP server on.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_HTTP_HOST": {
          "required": false,
          "description": "The host interface for the HTTP server.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_HTTP_ENDPOINT_PATH": {
          "required": false,
          "description": "The HTTP endpoint path for MCP requests.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_AUTH_STRATEGY": {
          "required": false,
          "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cyanheads/git-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cyanheads/git-mcp-server",
          "version": "2.3.3",
          "runtime_hint": "node",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "is_required": true,
              "format": "string",
              "default": "stdio",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Set to 'true' to enable GPG/SSH signing for commits made via the git_commit tool.",
              "format": "string",
              "default": "false",
              "name": "GIT_SIGN_COMMITS"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cyanheads/git-mcp-server",
          "version": "2.3.3",
          "runtime_hint": "node",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:3015/mcp"
          },
          "package_arguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "is_required": true,
              "format": "string",
              "default": "http",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3015",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The host interface for the HTTP server.",
              "format": "string",
              "default": "127.0.0.1",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The HTTP endpoint path for MCP requests.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode to use: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_STRATEGY"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Set to 'true' to enable GPG/SSH signing for commits made via the git_commit tool.",
              "format": "string",
              "default": "false",
              "name": "GIT_SIGN_COMMITS"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-15T12:59:07.492836786Z",
      "updated_at": "2025-09-15T12:59:07.492836786Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "aba25196-788f-4923-8fc8-836533ad0745",
      "name": "io.github.grupo-avispa/dsr_mcp_server",
      "category": "Community",
      "description": "An MCP server that provides tools for interacting with Deep State Representation (DSR) graphs.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/grupo-avispa/dsr_mcp_server",
      "remotes": [],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T10:15:32.830670599Z",
      "updated_at": "2025-09-17T10:22:23.142839077Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ac1b1492-c254-4727-85e5-21c7efaa26f5",
      "name": "io.github.abelljs/abell",
      "category": "Community",
      "description": "AI tools related to Abell. Currently includes MCP of Abell",
      "version": "0.0.9",
      "npm": "abell-ai",
      "command": "npx abell-ai@0.0.9",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/abelljs/abell",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "abell-ai",
          "version": "0.0.9",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T14:53:07.562174808Z",
      "updated_at": "2025-09-17T14:53:07.562174808Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "aca46879-069c-4052-99a4-b6941bc6fb26",
      "name": "io.github.ruvnet/claude-flow",
      "category": "Community",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "version": "2.0.0-alpha.105",
      "npm": "claude-flow",
      "command": "npx claude-flow@2.0.0-alpha.105",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.105",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T16:46:39.96638146Z",
      "updated_at": "2025-09-10T16:55:33.075242785Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ace42071-ecbd-472a-9738-a4701d427aef",
      "name": "ai.smithery/MetehanGZL-pokemcp",
      "category": "Community",
      "description": "Provide detailed Pokémon data and information through a standardized MCP interface. Enable LLMs an…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/MetehanGZL/PokeMCP",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@MetehanGZL/pokemcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T17:56:16.252320146Z",
      "updated_at": "2025-09-15T17:56:16.252320146Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ad491a05-3439-4f9b-ac52-d3801bdffba4",
      "name": "io.github.jkakar/recipe-mcp",
      "category": "Community",
      "description": "Generate and remix recipes using cookwith.co",
      "version": "1.0.0",
      "npm": "@cookwith/recipe-mcp",
      "command": "npx @cookwith/recipe-mcp@1.0.1",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/blaideinc/recipe-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cookwith/recipe-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T18:11:49.433940965Z",
      "updated_at": "2025-09-11T18:27:40.596727222Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ad85ae5f-c107-4d47-b2c1-af82a1a9a7af",
      "name": "com.notion/mcp",
      "category": "Community",
      "description": "Official Notion MCP server",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/makenotion/notion-next",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.notion.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.notion.com/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T22:19:32.446786781Z",
      "updated_at": "2025-09-11T22:25:50.746839158Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "add45668-2a60-42e1-aed8-09a9f957c589",
      "name": "io.github.xorrkaz/cml-mcp",
      "category": "Community",
      "description": "An MCP server that provides access to common Cisco Modeling Labs (CML) operations.",
      "version": "0.8.4",
      "npm": null,
      "command": null,
      "env": {
        "CML_URL": {
          "required": true,
          "description": "URL for the CML Server",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CML_USERNAME": {
          "required": true,
          "description": "Username for CML authentication",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "CML_PASSWORD": {
          "required": true,
          "description": "Password for CML authentication",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "PYATS_USERNAME": {
          "required": false,
          "description": "Username for authentication to devices running in CML",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "PYATS_PASSWORD": {
          "required": false,
          "description": "Password for authentication to devices running in CML",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "PYATS_AUTH_PASS": {
          "required": false,
          "description": "Enable password for authentication to devices running in CML",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/xorrkaz/cml-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "cml-mcp",
          "version": "0.8.4",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "URL for the CML Server",
              "is_required": true,
              "format": "string",
              "name": "CML_URL"
            },
            {
              "description": "Username for CML authentication",
              "is_required": true,
              "format": "string",
              "name": "CML_USERNAME"
            },
            {
              "description": "Password for CML authentication",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "CML_PASSWORD"
            },
            {
              "description": "Username for authentication to devices running in CML",
              "format": "string",
              "name": "PYATS_USERNAME"
            },
            {
              "description": "Password for authentication to devices running in CML",
              "format": "string",
              "is_secret": true,
              "name": "PYATS_PASSWORD"
            },
            {
              "description": "Enable password for authentication to devices running in CML",
              "format": "string",
              "is_secret": true,
              "name": "PYATS_AUTH_PASS"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T14:57:56.266090296Z",
      "updated_at": "2025-09-14T14:57:56.266090296Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ae385caf-a601-48d2-8ff4-eea1cbc424da",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "category": "Community",
      "description": "Sample .NET MCP Server",
      "version": "0.1.26-beta",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/timheuer/sampledotnetmcpserver",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.26-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T22:11:37.310707427Z",
      "updated_at": "2025-09-16T22:30:54.36195718Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b082814d-7200-439d-9ebf-9683529e2b33",
      "name": "ai.zine/mcp",
      "category": "Community",
      "description": "Your memory, everywhere AI goes. Build knowledge once, access it via MCP anywhere.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/graphlit/graphlit-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://www.zine.ai/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T20:16:56.788715831Z",
      "updated_at": "2025-09-10T18:02:28.779912076Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b092f116-9b0c-4ffd-abb2-a3d2e554c4fc",
      "name": "io.github.tuannvm/mcp-trino",
      "category": "Community",
      "description": "MCP server for Trino distributed SQL query engine access",
      "version": "2.2.1",
      "npm": null,
      "command": null,
      "env": {
        "TRINO_HOST": {
          "required": true,
          "description": "Trino server hostname",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "TRINO_PORT": {
          "required": false,
          "description": "Trino server port",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "TRINO_USER": {
          "required": true,
          "description": "Trino username",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "TRINO_PASSWORD": {
          "required": false,
          "description": "Trino password",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/tuannvm/mcp-trino",
      "remotes": [],
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/tuannvm/mcp-trino/releases/download/v2.2.1/mcp-trino_2.2.1_darwin_arm64.tar.gz",
          "version": "2.2.1",
          "file_sha256": "1a18882ab43243e17420f3562118a4c3e7fff12bc6b145066ae64b90b2dc0159",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Trino server hostname",
              "is_required": true,
              "format": "string",
              "name": "TRINO_HOST"
            },
            {
              "description": "Trino server port",
              "format": "string",
              "name": "TRINO_PORT"
            },
            {
              "description": "Trino username",
              "is_required": true,
              "format": "string",
              "name": "TRINO_USER"
            },
            {
              "description": "Trino password",
              "format": "string",
              "is_secret": true,
              "name": "TRINO_PASSWORD"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T05:26:17.749412364Z",
      "updated_at": "2025-09-09T05:26:17.749412364Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b0d0defb-6cdd-43ea-bcef-6db41f3906f6",
      "name": "io.github.cyanheads/mcp-ts-template",
      "category": "Community",
      "description": "A production-grade TypeScript template for scalable MCP servers with built-in observability.",
      "version": "2.0.1",
      "npm": "mcp-ts-template",
      "command": "npx mcp-ts-template@2.0.1",
      "env": {
        "MCP_HTTP_PORT": {
          "required": false,
          "description": "The port to run the HTTP server on.",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cyanheads/mcp-ts-template",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtime_hint": "bun",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:stdio",
              "type": "positional"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-ts-template",
          "version": "2.0.1",
          "runtime_hint": "bun",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3010/mcp"
          },
          "package_arguments": [
            {
              "value": "run",
              "type": "positional"
            },
            {
              "value": "start:http",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "The port to run the HTTP server on.",
              "format": "string",
              "default": "3010",
              "name": "MCP_HTTP_PORT"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-14T09:08:13.356523069Z",
      "updated_at": "2025-09-14T10:06:30.730167416Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b0d7e2ec-250a-42a7-bc01-198e42672eeb",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "category": "Community",
      "description": "Sample .NET MCP Server",
      "version": "0.1.18-beta",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/timheuer/sampledotnetmcpserver",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.18-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T15:31:23.614864173Z",
      "updated_at": "2025-09-10T16:00:22.19485388Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b2342344-c506-4b06-a8e3-931cb18d22ef",
      "name": "io.github.promplate/hmr",
      "category": "Community",
      "description": "Hot Module Reload (HMR) for Python with reactive programming and MCP tools",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/promplate/pyth-on-line",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://promplate.github.io/pyth-on-line/hmr/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T20:50:30.150753217Z",
      "updated_at": "2025-09-17T20:50:30.150753217Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b305e6df-7c51-4067-a28c-d5964c68bd74",
      "name": "com.letta/memory-mcp",
      "category": "Community",
      "description": "MCP server for AI memory management using Letta - Standard MCP format",
      "version": "2.0.2",
      "npm": "@letta-ai/memory-mcp",
      "command": "npx @letta-ai/memory-mcp@2.0.2",
      "env": {
        "LETTA_API_KEY": {
          "required": true,
          "description": "Letta API key for memory operations",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "LETTA_USER_ID": {
          "required": false,
          "description": "Unique user identifier for associated memories",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/letta-ai/memory-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@letta-ai/memory-mcp",
          "version": "2.0.2",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Letta API key for memory operations",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "LETTA_API_KEY"
            },
            {
              "description": "Unique user identifier for associated memories",
              "format": "string",
              "name": "LETTA_USER_ID"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T06:28:26.340372855Z",
      "updated_at": "2025-09-09T06:28:26.340372855Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b30f06c4-c3de-4734-8996-88c9d13ad12c",
      "name": "io.globalping/mcp",
      "category": "Community",
      "description": "Interact with a global network measurement platform.Run network commands from any point in the world",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/jsdelivr/globalping-mcp-server",
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.globalping.io/sse"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.globalping.io/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T15:58:08.139458885Z",
      "updated_at": "2025-09-09T15:58:08.139458885Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b35a6287-b91e-4a86-9eaa-776fc7d272dc",
      "name": "ai.smithery/browserbasehq-mcp-browserbase",
      "category": "Community",
      "description": "Provides cloud browser automation capabilities using Stagehand and Browserbase, enabling LLMs to i…",
      "version": "2.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/browserbase/mcp-server-browserbase",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@browserbasehq/mcp-browserbase/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T17:17:18.587291714Z",
      "updated_at": "2025-09-16T17:17:18.587291714Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b361137f-582b-4748-8f7f-eb144fd4ed2c",
      "name": "io.github.AungMyoKyaw/betterprompt-mcp",
      "category": "Community",
      "description": "MCP server for AI-enhanced prompt engineering and request conversion.",
      "version": "0.2.1",
      "npm": "betterprompt-mcp",
      "command": "npx betterprompt-mcp@0.2.1",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/AungMyoKyaw/betterprompt-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "betterprompt-mcp",
          "version": "0.2.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T17:15:50.170627394Z",
      "updated_at": "2025-09-17T17:15:50.170627394Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b3c4cf45-bfc9-44b2-8b0f-d2b07f801567",
      "name": "com.getclockwise/clockwise-mcp",
      "category": "Community",
      "description": "An MCP server for managing your calendar, via Clockwise",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.getclockwise.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T23:12:29.67036488Z",
      "updated_at": "2025-09-15T23:12:29.67036488Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b3f3ce4a-be05-4483-ace1-854555225f00",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.5.5",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T01:55:40.782813803Z",
      "updated_at": "2025-09-12T02:03:43.967160658Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b5251106-16c6-40e7-89d7-b123841d18ea",
      "name": "io.github.stefanoamorelli/fred-mcp-server",
      "category": "Community",
      "description": "Federal Reserve Economic Data (FRED) MCP Server - Access all 800,000+ economic time series",
      "version": "1.0.1",
      "npm": "fred-mcp-server",
      "command": "npx fred-mcp-server@1.0.1",
      "env": {
        "FRED_API_KEY": {
          "required": true,
          "description": "Your FRED API key to access the API",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/stefanoamorelli/fred-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "fred-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your FRED API key to access the API",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "FRED_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-14T11:16:38.3334627Z",
      "updated_at": "2025-09-14T11:16:38.3334627Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b54429bf-2285-4bc9-bd62-ec79299fc34b",
      "name": "ai.smithery/zwldarren-akshare-one-mcp",
      "category": "Community",
      "description": "Provide access to Chinese stock market data including historical prices, real-time data, news, and…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/zwldarren/akshare-one-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@zwldarren/akshare-one-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T19:15:39.848820116Z",
      "updated_at": "2025-09-11T19:15:39.848820116Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b5557497-4ef1-4ae1-a7af-08ebce3f5870",
      "name": "io.github.dynatrace-oss/Dynatrace-mcp",
      "category": "Community",
      "description": "Model Context Protocol server for Dynatrace - access logs, events, metrics from Dynatrace via MCP.",
      "version": "0.6.0-rc.1",
      "npm": "@dynatrace-oss/dynatrace-mcp-server",
      "command": "npx @dynatrace-oss/dynatrace-mcp-server@0.6.0-rc.1",
      "env": {
        "DT_PLATFORM_TOKEN": {
          "required": true,
          "description": "Your Dynatrace Platform Token",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "DT_ENVIRONMENT": {
          "required": false,
          "description": "The URL of your Dynatrace environment (e.g. 'https://abc12345.apps.dynatrace.com')",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/dynatrace-oss/Dynatrace-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@dynatrace-oss/dynatrace-mcp-server",
          "version": "0.6.0-rc.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your Dynatrace Platform Token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "DT_PLATFORM_TOKEN"
            },
            {
              "description": "The URL of your Dynatrace environment (e.g. 'https://abc12345.apps.dynatrace.com')",
              "format": "string",
              "name": "DT_ENVIRONMENT"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-15T11:13:59.272010592Z",
      "updated_at": "2025-09-15T11:13:59.272010592Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b5c49bdf-07bc-478b-9048-23590f4052fb",
      "name": "com.enigma/enigma-mcp-server",
      "category": "Community",
      "description": "An MCP server that provides access to trusted data about business identity and activity",
      "version": "1.0.0-build1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http"
        },
        {
          "type": "streamable-http",
          "url": "https://mcp.enigma.com/http-key",
          "headers": [
            {
              "description": "Token of Enigma API key. Used to enable authentication without presenting the user with an oAuth login.",
              "is_required": true,
              "is_secret": true,
              "name": "x-api-key"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://mcp.enigma.com/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T19:23:14.035830574Z",
      "updated_at": "2025-09-10T19:23:14.035830574Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b6c1667c-b54f-4fdf-80cf-3185aa22cc0a",
      "name": "ai.smithery/fengyinxia-jimeng-mcp",
      "category": "Community",
      "description": "Create images and videos from prompts, with options for image mixing, reference images, and start/…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/fengyinxia/jimeng-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fengyinxia/jimeng-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T13:13:51.71154341Z",
      "updated_at": "2025-09-12T13:13:51.71154341Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b8b7c038-1a6f-4152-9282-6de6ea3fe0ff",
      "name": "io.github.burningion/video-editing-mcp",
      "category": "Community",
      "description": "An MCP server that provides [describe what your server does]",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {
        "VJ_API_KEY": {
          "required": true,
          "description": "Video Jungle API Key (found at https://www.video-jungle.com/user/settings)",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/burningion/video-editing-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "video-editor-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Video Jungle API Key (found at https://www.video-jungle.com/user/settings)",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "VJ_API_KEY"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T13:57:16.410605636Z",
      "updated_at": "2025-09-12T12:58:23.995884425Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b946c91b-b9b9-49af-b32a-f47f20484a85",
      "name": "ai.smithery/Danushkumar-V-mcp-discord",
      "category": "Community",
      "description": "An MCP server that integrates with Discord to provide AI-powered features.",
      "version": "1.2.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/Danushkumar-V/mcp-discord",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@Danushkumar-V/mcp-discord/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T22:54:39.805524875Z",
      "updated_at": "2025-09-13T22:54:39.805524875Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b9848a83-605f-4cb3-a9b1-2ed5dd02dd56",
      "name": "io.github.motherduckdb/mcp-server-motherduck",
      "category": "Community",
      "description": "Fast analytics and data processing with DuckDB and MotherDuck",
      "version": "0.6.4",
      "npm": null,
      "command": null,
      "env": {
        "motherduck_token": {
          "required": false,
          "description": "Access token to use for MotherDuck database connections",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "HOME": {
          "required": false,
          "description": "Home directory for DuckDB (used as default if --home-dir not specified)",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/motherduckdb/mcp-server-motherduck",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcp-server-motherduck",
          "version": "0.6.4",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Transport type for MCP server",
              "default": "stdio",
              "choices": [
                "stdio",
                "sse",
                "stream"
              ],
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "Port to listen on for sse and stream transport mode",
              "format": "number",
              "default": "8000",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Path to local DuckDB database file or MotherDuck database",
              "default": "md:",
              "type": "named",
              "name": "--db-path"
            },
            {
              "description": "Access token to use for MotherDuck database connections",
              "is_secret": true,
              "type": "named",
              "name": "--motherduck-token"
            },
            {
              "description": "Flag for connecting to DuckDB or MotherDuck in read-only mode",
              "type": "named",
              "name": "--read-only"
            },
            {
              "description": "Home directory for DuckDB",
              "type": "named",
              "name": "--home-dir"
            },
            {
              "description": "Flag for connecting to MotherDuck in SaaS mode (disables filesystem and write permissions for local DuckDB)",
              "type": "named",
              "name": "--saas-mode"
            },
            {
              "description": "Enable JSON responses for HTTP stream (only supported for stream transport)",
              "type": "named",
              "name": "--json-response"
            }
          ],
          "environment_variables": [
            {
              "description": "Access token to use for MotherDuck database connections",
              "is_secret": true,
              "name": "motherduck_token"
            },
            {
              "description": "Home directory for DuckDB (used as default if --home-dir not specified)",
              "name": "HOME"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T15:38:28.952824815Z",
      "updated_at": "2025-09-10T15:38:28.952824815Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "b9e152e0-8f25-4edb-96be-81e19075dbe6",
      "name": "io.github.spences10/mcp-omnisearch",
      "category": "Community",
      "description": "MCP server for integrating Omnisearch with LLMs",
      "version": "0.0.15",
      "npm": "mcp-omnisearch",
      "command": "npx mcp-omnisearch@0.0.15",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/spences10/mcp-omnisearch",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-omnisearch",
          "version": "0.0.15",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T19:32:04.459621013Z",
      "updated_at": "2025-09-10T19:32:04.459621013Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "bb04de05-3784-4641-a864-e8eb37b1a901",
      "name": "io.github.saucelabs-sample-test-frameworks/sauce-api-mcp",
      "category": "Community",
      "description": "An open-source MCP server that provides LLM access to the Sauce Labs API",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {
        "SAUCE_USERNAME": {
          "required": false,
          "description": "",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "SAUCE_ACCESS_KEY": {
          "required": false,
          "description": "",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/saucelabs/sauce-api-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "sauce-api-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "value": "<sauce-user-name>",
              "name": "SAUCE_USERNAME"
            },
            {
              "value": "<sauce-access-key>",
              "name": "SAUCE_ACCESS_KEY"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T22:36:40.555152268Z",
      "updated_at": "2025-09-12T22:36:40.555152268Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "bbf32ba9-5e10-40ed-ba62-186b509b87c5",
      "name": "io.github.burningion/video-editing-mcp",
      "category": "Community",
      "description": "MCP Server for Video Jungle - Analyze, Search, Generate, and Edit Videos",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {
        "VJ_API_KEY": {
          "required": true,
          "description": "Video Jungle API Key (found at https://www.video-jungle.com/user/settings)",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/burningion/video-editing-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "video-editor-mcp",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Video Jungle API Key (found at https://www.video-jungle.com/user/settings)",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "VJ_API_KEY"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T12:58:23.949572999Z",
      "updated_at": "2025-09-12T12:58:23.949572999Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "bc101c44-3702-449a-b569-74f3078eac9d",
      "name": "ai.waystation/supabase",
      "category": "Community",
      "description": "Connect to your Supabase database to query data and schemas.",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/supabase/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/supabase/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:46:10.221625416Z",
      "updated_at": "2025-09-09T14:46:10.221625416Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "bcafddd0-d2f1-4dfd-8411-433242ee6202",
      "name": "io.github.timheuer/sampledotnetmcpserver",
      "category": "Community",
      "description": "Sample .NET MCP Server",
      "version": "0.1.27-beta",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/timheuer/sampledotnetmcpserver",
      "remotes": [],
      "packages": [
        {
          "registry_type": "nuget",
          "identifier": "TimHeuer.SampleDotnetMcpServer",
          "version": "0.1.27-beta",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T22:30:54.35634821Z",
      "updated_at": "2025-09-17T01:27:02.860023046Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "bdbc5988-0d10-4957-8c87-45678bf5d404",
      "name": "ai.smithery/arjunkmrm-lta-mcp",
      "category": "Community",
      "description": "Provide real-time transportation data including bus arrivals, train service alerts, carpark availa…",
      "version": "0.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/arjunkmrm/lta-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/lta-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T16:52:48.059122135Z",
      "updated_at": "2025-09-11T16:52:48.059122135Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "bde26216-0984-4c1d-bc1c-7d9096688a79",
      "name": "com.mintmcp/gcal",
      "category": "Community",
      "description": "A MCP server that works with Google Calendar to manage event listing, reading, and updates.",
      "version": "1.0.3",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gcal.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:42:00.464295781Z",
      "updated_at": "2025-09-09T19:49:54.017385171Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "bf89e9e0-a6aa-417a-9295-ac03d9493dd3",
      "name": "ai.smithery/faithk7-gmail-mcp",
      "category": "Community",
      "description": "Manage Gmail messages, threads, labels, drafts, and settings from your workflows. Send and organiz…",
      "version": "1.7.4",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/faithk7/gmail-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@faithk7/gmail-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T13:42:20.13425818Z",
      "updated_at": "2025-09-14T13:42:20.13425818Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "bfcc47f4-8a2f-4c3a-8767-9ab71d609fb1",
      "name": "ai.smithery/cc25a-openai-api-agent-project123123123",
      "category": "Community",
      "description": "Look up the latest stock prices by ticker symbol across global markets. Get current price and esse…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cc25a/openai-api-agent-project",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@cc25a/openai-api-agent-project123123123/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T03:32:54.14301964Z",
      "updated_at": "2025-09-17T03:32:54.14301964Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c0a8366b-7531-4a2d-990e-6ba630cd3712",
      "name": "ai.smithery/pythondev-pro-egw_writings_mcp_server",
      "category": "Community",
      "description": "Search Ellen G. White’s writings by keyword to surface relevant quotations. Retrieve exact passage…",
      "version": "1.12.4",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/pythondev-pro/egw_writings_mcp_server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@pythondev-pro/egw_writings_mcp_server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T12:48:16.278544327Z",
      "updated_at": "2025-09-11T12:48:16.278544327Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c0d0e773-8e78-437f-a9d5-b417e26aa3fa",
      "name": "com.agilitycms/mcp-server",
      "category": "Community",
      "description": "An MCP server that provides access to Agility CMS.  See https://mcp.agilitycms.com for more details.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/agility/agility-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.agilitycms.com/api/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T21:00:43.348780132Z",
      "updated_at": "2025-09-15T21:00:43.348780132Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c20de9bf-9464-472b-8dcb-32503b984d56",
      "name": "io.github.CursorTouch/Windows-MCP",
      "category": "Community",
      "description": "An MCP Server for computer-use in Windows OS",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/CursorTouch/Windows-MCP",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "windows_mcp",
          "version": "0.3.0",
          "runtime_hint": "uvx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T13:24:08.521350318Z",
      "updated_at": "2025-09-17T13:24:08.521350318Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c29777b7-3957-42a7-8000-d675c0ecb2b2",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.5.8",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T04:28:40.558477428Z",
      "updated_at": "2025-09-12T04:48:10.705163493Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c2c0a8ed-6ad8-42fd-97d8-5da83965d302",
      "name": "io.github.huoshuiai42/huoshui-pdf-converter",
      "category": "Community",
      "description": "An MCP server that provides PDF file conversion",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/huoshuiai42/huoshui-pdf-converter",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "huoshui-pdf-converter",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T01:34:53.40476072Z",
      "updated_at": "2025-09-11T01:34:53.40476072Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c339f751-fd5c-487a-b5c2-14971011acb4",
      "name": "io.github.zhongweili/nanobanana-mcp-server",
      "category": "Community",
      "description": "An MCP server that provides image generation and editing capabilities",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {
        "GEMINI_API_KEY": {
          "required": true,
          "description": "Your Gemini API key",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "IMAGE_OUTPUT_DIR": {
          "required": false,
          "description": "The image output directory",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/zhongweili/nanobanana-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "nanobanana-mcp-server",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your Gemini API key",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "GEMINI_API_KEY"
            },
            {
              "description": "The image output directory",
              "format": "string",
              "name": "IMAGE_OUTPUT_DIR"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T13:45:29.896269404Z",
      "updated_at": "2025-09-09T13:45:29.896269404Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c372a906-9758-46ce-8211-602c545dffc3",
      "name": "ai.smithery/arjunkmrm-ahoy",
      "category": "Community",
      "description": "Send friendly, personalized greetings by name. Switch to a playful pirate voice for themed salutat…",
      "version": "1.13.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/arjunkmrm/ahoy",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@arjunkmrm/ahoy/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T03:11:31.224722296Z",
      "updated_at": "2025-09-14T03:11:31.224722296Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c41fdf1c-b9b0-4101-ba38-7584f2e6135a",
      "name": "io.github.variflight/variflight-mcp",
      "category": "Community",
      "description": "Variflight MCP Server",
      "version": "1.0.0",
      "npm": "@variflight-ai/variflight-mcp",
      "command": "npx @variflight-ai/variflight-mcp@1.0.0",
      "env": {
        "VARIFLIGHT_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/variflight/variflight-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@variflight-ai/variflight-mcp",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "VARIFLIGHT_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T13:30:29.381063731Z",
      "updated_at": "2025-09-09T13:43:56.537303875Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c477c6e2-388e-43a1-892d-250cbf90120c",
      "name": "ai.smithery/lineex-pubmed-mcp-smithery",
      "category": "Community",
      "description": "Search PubMed with precision using keyword and journal filters and smart sorting. Uncover MeSH ter…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/lineex/pubmed-mcp-smithery",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@lineex/pubmed-mcp-smithery/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T01:10:37.458958533Z",
      "updated_at": "2025-09-16T01:10:37.458958533Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c6f34744-715a-490d-996c-7e87596b8681",
      "name": "io.github.cameroncooke/XcodeBuildMCP",
      "category": "Community",
      "description": "XcodeBuildMCP provides tools for Xcode project management, simulator management, and app utilities.",
      "version": "1.12.8",
      "npm": "xcodebuildmcp",
      "command": "npx xcodebuildmcp@1.12.8",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cameroncooke/XcodeBuildMCP",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "xcodebuildmcp",
          "version": "1.12.8",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T19:54:23.228606748Z",
      "updated_at": "2025-09-09T19:54:23.228606748Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c6fe5633-4091-4018-8fd7-57b555f568ec",
      "name": "io.github.jkawamoto/mcp-youtube-transcript",
      "category": "Community",
      "description": "An MCP server retrieving transcripts of YouTube videos",
      "version": "0.5.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/jkawamoto/mcp-youtube-transcript",
      "remotes": [],
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/jkawamoto/mcp-youtube-transcript/releases/download/v0.5.1/mcp-youtube-transcript.mcpb",
          "version": "0.5.1",
          "file_sha256": "3356e741d4dafa24b0e931e3afd773c64d503f6624338beec62885f0dde59695",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T08:10:03.858868083Z",
      "updated_at": "2025-09-17T08:10:03.858868083Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "c9fdc775-1ff6-4c60-a696-58b5a07ab59e",
      "name": "com.close/close-mcp",
      "category": "Community",
      "description": "Close CRM to manage your sales pipeline. Learn more at https://close.com or https://mcp.close.com",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.close.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T18:15:23.108331317Z",
      "updated_at": "2025-09-09T18:15:23.108331317Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "cc123f69-0820-4c87-b304-99e82175a541",
      "name": "io.github.domdomegg/time-mcp-pypi",
      "category": "Community",
      "description": "Get the current UTC time in RFC 3339 format.",
      "version": "1.0.6",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/domdomegg/time-mcp-pypi.git",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "identifier": "time-mcp-pypi",
          "version": "1.0.6",
          "runtime_hint": "python",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T02:14:45.618237925Z",
      "updated_at": "2025-09-12T02:14:45.618237925Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "cc6f63b8-d592-4ca8-9440-9e3be35be2c8",
      "name": "io.github.pshivapr/selenium-mcp",
      "category": "Community",
      "description": "Selenium Tools for MCP",
      "version": "0.3.9",
      "npm": "selenium-webdriver-mcp",
      "command": "npx selenium-webdriver-mcp@0.3.9",
      "env": {
        "YOUR_API_KEY": {
          "required": false,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/pshivapr/selenium-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "selenium-webdriver-mcp",
          "version": "0.3.9",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T19:08:26.435100548Z",
      "updated_at": "2025-09-11T13:43:51.367329854Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ccdf5061-3cb1-4dfe-a36a-f6bbbf6c3abf",
      "name": "io.github.ChiR24/unreal-engine-mcp",
      "category": "Community",
      "description": "Production-ready MCP server for Unreal Engine with comprehensive game development tools",
      "version": "0.3.0",
      "npm": "unreal-engine-mcp-server",
      "command": "npx unreal-engine-mcp-server@0.3.0",
      "env": {
        "UE_HOST": {
          "required": false,
          "description": "Unreal Engine host address",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "UE_RC_HTTP_PORT": {
          "required": false,
          "description": "Remote Control HTTP port",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "UE_RC_WS_PORT": {
          "required": false,
          "description": "Remote Control WebSocket port",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ChiR24/Unreal_mcp.git",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "unreal-engine-mcp-server",
          "version": "0.3.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Unreal Engine host address",
              "value": "127.0.0.1",
              "name": "UE_HOST"
            },
            {
              "description": "Remote Control HTTP port",
              "value": "30010",
              "name": "UE_RC_HTTP_PORT"
            },
            {
              "description": "Remote Control WebSocket port",
              "value": "30020",
              "name": "UE_RC_WS_PORT"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T12:43:41.483739766Z",
      "updated_at": "2025-09-17T12:43:41.483739766Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "cd5b8366-f0bb-42fd-98bb-e8e467db2554",
      "name": "ai.mcpanalytics/analytics",
      "category": "Community",
      "description": "MCP Analytics, searchable tools and reports with interactive HTML visualization",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://api.mcpanalytics.ai/auth0"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T02:38:18.067163459Z",
      "updated_at": "2025-09-17T03:00:38.275209785Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ceb6f1e9-0f6b-4668-aa74-a7308963775f",
      "name": "com.cloudflare.mcp/mcp",
      "category": "Community",
      "description": "Cloudflare MCP servers",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cloudflare/mcp-server-cloudflare",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://docs.mcp.cloudflare.com/mcp"
        },
        {
          "type": "streamable-http",
          "url": "https://observability.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://bindings.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://builds.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://radar.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://containers.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://browser.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://logs.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://ai-gateway.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://autorag.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://auditlogs.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://dns-analytics.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://dex.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://casb.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "streamable-http",
          "url": "https://graphql.mcp.cloudflare.com/mcp",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://docs.mcp.cloudflare.com/sse"
        },
        {
          "type": "sse",
          "url": "https://observability.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://bindings.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://builds.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://radar.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://containers.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://browser.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://logs.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://ai-gateway.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://autorag.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://auditlogs.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://dns-analytics.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://dex.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://casb.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        },
        {
          "type": "sse",
          "url": "https://graphql.mcp.cloudflare.com/sse",
          "headers": [
            {
              "description": "Optional Cloudflare API key for authentication if not using OAuth. Can use User or Account owned tokens as a Bearer token.",
              "is_secret": true,
              "name": "Authentication"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T22:06:29.987728525Z",
      "updated_at": "2025-09-16T22:06:29.987728525Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "cee0c5a8-9a97-455d-91c4-14135d905e43",
      "name": "io.github.cyanheads/pubmed-mcp-server",
      "category": "Community",
      "description": "Comprehensive PubMed MCP Server to search, retrieve, and analyze biomedical literature from NCBI.",
      "version": "1.4.4",
      "npm": "@cyanheads/pubmed-mcp-server",
      "command": "npx @cyanheads/pubmed-mcp-server@1.4.4",
      "env": {
        "MCP_TRANSPORT_TYPE": {
          "required": true,
          "description": "Specifies the transport mechanism for the server.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_LOG_LEVEL": {
          "required": false,
          "description": "Sets the minimum log level (e.g., 'debug', 'info', 'warn').",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "NCBI_API_KEY": {
          "required": false,
          "description": "Your NCBI API key for higher rate limits.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_HTTP_HOST": {
          "required": false,
          "description": "The host for the HTTP server.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_HTTP_PORT": {
          "required": false,
          "description": "The port for the HTTP server.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_HTTP_ENDPOINT_PATH": {
          "required": false,
          "description": "The endpoint path for MCP requests.",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "MCP_AUTH_MODE": {
          "required": false,
          "description": "Authentication mode: 'none', 'jwt', or 'oauth'.",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cyanheads/pubmed-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cyanheads/pubmed-mcp-server",
          "version": "1.4.4",
          "runtime_hint": "node",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "is_required": true,
              "format": "string",
              "default": "stdio",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "Sets the minimum log level for output (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Your NCBI API key for higher rate limits.",
              "format": "string",
              "name": "NCBI_API_KEY"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@cyanheads/pubmed-mcp-server",
          "version": "1.4.4",
          "runtime_hint": "node",
          "transport": {
            "type": "streamable-http",
            "url": "http://localhost:3017/mcp"
          },
          "package_arguments": [
            {
              "value": "dist/index.js",
              "type": "positional"
            }
          ],
          "environment_variables": [
            {
              "description": "Specifies the transport mechanism for the server.",
              "is_required": true,
              "format": "string",
              "default": "http",
              "name": "MCP_TRANSPORT_TYPE"
            },
            {
              "description": "The host for the HTTP server.",
              "format": "string",
              "default": "localhost",
              "name": "MCP_HTTP_HOST"
            },
            {
              "description": "The port for the HTTP server.",
              "format": "string",
              "default": "3017",
              "name": "MCP_HTTP_PORT"
            },
            {
              "description": "The endpoint path for MCP requests.",
              "format": "string",
              "default": "/mcp",
              "name": "MCP_HTTP_ENDPOINT_PATH"
            },
            {
              "description": "Authentication mode: 'none', 'jwt', or 'oauth'.",
              "format": "string",
              "default": "none",
              "name": "MCP_AUTH_MODE"
            },
            {
              "description": "Sets the minimum log level (e.g., 'debug', 'info', 'warn').",
              "format": "string",
              "default": "info",
              "name": "MCP_LOG_LEVEL"
            },
            {
              "description": "Your NCBI API key for higher rate limits.",
              "format": "string",
              "name": "NCBI_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-15T13:34:11.145838692Z",
      "updated_at": "2025-09-15T13:34:11.145838692Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "cf109d3d-025a-4fad-82ce-701c2741df50",
      "name": "ai.smithery/neverinfamous-memory-journal-mcp",
      "category": "Community",
      "description": "A MCP server built for developers enabling Git based project management with project and personal…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/neverinfamous/memory-journal-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@neverinfamous/memory-journal-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T03:39:21.908030323Z",
      "updated_at": "2025-09-15T03:39:21.908030323Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "cf1ae9e0-e572-47a9-961b-21c516bb7606",
      "name": "io.github.himorishige/hatago-mcp-hub",
      "category": "Community",
      "description": "Unified MCP Hub for managing multiple Model Context Protocol servers",
      "version": "0.0.16",
      "npm": "@himorishige/hatago-mcp-hub",
      "command": "npx @himorishige/hatago-mcp-hub@0.0.16",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/himorishige/hatago-mcp-hub",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@himorishige/hatago-mcp-hub",
          "version": "0.0.16",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-14T14:57:18.596180971Z",
      "updated_at": "2025-09-14T14:57:18.596180971Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "cfe9b2c3-e001-4c33-8cb8-1a6aca43b309",
      "name": "ai.shawndurrani/mcp-merchant",
      "category": "Community",
      "description": "Search-only commerce MCP server backed by Stripe (test)",
      "version": "0.1.0",
      "npm": "mcp-merchant",
      "command": "npx mcp-merchant@0.1.0",
      "env": {
        "STRIPE_SECRET_KEY": {
          "required": true,
          "description": "Stripe secret key (test mode)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "PRODUCT_LIMIT": {
          "required": false,
          "description": "Max products to cache",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "REFRESH_INTERVAL_SEC": {
          "required": false,
          "description": "Catalog refresh interval in seconds",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-merchant",
          "version": "0.1.0",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Stripe secret key (test mode)",
              "is_required": true,
              "is_secret": true,
              "name": "STRIPE_SECRET_KEY"
            },
            {
              "description": "Max products to cache",
              "default": "100",
              "name": "PRODUCT_LIMIT"
            },
            {
              "description": "Catalog refresh interval in seconds",
              "default": "600",
              "name": "REFRESH_INTERVAL_SEC"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T10:36:46.541849731Z",
      "updated_at": "2025-09-14T02:22:00.59735517Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d04e69ef-3bd3-4216-8145-928c3c775ee8",
      "name": "io.github.ruvnet/claude-flow",
      "category": "Community",
      "description": "AI orchestration with hive-mind swarms, neural networks, and 87 MCP tools for enterprise dev.",
      "version": "2.0.0-alpha.104",
      "npm": "claude-flow",
      "command": "npx claude-flow@2.0.0-alpha.104",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "identifier": "claude-flow",
          "version": "2.0.0-alpha.104",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T16:20:48.985187906Z",
      "updated_at": "2025-09-10T16:46:39.972611608Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d0551f52-173b-4443-8125-a58153f8f82e",
      "name": "com.timeslope/timeslope-mcp",
      "category": "Community",
      "description": "Equip AI with tools for researching economic data from Federal Reserve Economic Data (FRED).",
      "version": "0.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.timeslope.com/mcp",
          "headers": [
            {
              "description": "Authorization Bearer header containing API key or OAuth token",
              "is_required": true,
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T18:16:25.262687063Z",
      "updated_at": "2025-09-11T18:16:25.262687063Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d1378e5e-f1cf-4eeb-bbb1-9e9527654acf",
      "name": "io.github.ycjcl868/mcp-server-fear-greed",
      "category": "Community",
      "description": "An MCP server for mcp-server-fear-greed",
      "version": "1.0.1",
      "npm": "mcp-server-fear-greed",
      "command": "npx mcp-server-fear-greed@1.0.1",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ycjcl868/mcp-server-fear-greed",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-server-fear-greed",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T03:01:43.052528327Z",
      "updated_at": "2025-09-09T04:08:35.763104718Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d19619da-84d8-4b62-a2f4-766eca866ea2",
      "name": "io.github.overstarry/qweather-mcp",
      "category": "Community",
      "description": "a qweather mcp server",
      "version": "1.0.12",
      "npm": "qweather-mcp",
      "command": "npx qweather-mcp@1.0.12",
      "env": {
        "QWEATHER_API_BASE": {
          "required": true,
          "description": "Your qweather api host",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "QWEATHER_API_KEY": {
          "required": true,
          "description": "Your qweather api key",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/overstarry/qweather-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "qweather-mcp",
          "version": "1.0.12",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your qweather api host",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "QWEATHER_API_BASE"
            },
            {
              "description": "Your qweather api key",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "QWEATHER_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T14:28:10.30769765Z",
      "updated_at": "2025-09-10T14:28:10.30769765Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d2fa299a-65ac-4c2d-8d48-b30826140fb3",
      "name": "ai.waystation/wrike",
      "category": "Community",
      "description": "Manage projects, tasks, and workflows with Wrike project management.",
      "version": "0.3.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/waystation-ai/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://waystation.ai/wrike/mcp"
        },
        {
          "type": "sse",
          "url": "https://waystation.ai/wrike/mcp/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T14:37:01.216778711Z",
      "updated_at": "2025-09-09T14:37:01.216778711Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d300fcf6-437a-444d-ac42-f7e55f9d5380",
      "name": "ai.smithery/yuna0x0-hackmd-mcp",
      "category": "Community",
      "description": "Interact with your HackMD notes and teams seamlessly. Manage your notes, view reading history, and…",
      "version": "1.4.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/yuna0x0/hackmd-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@yuna0x0/hackmd-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T08:37:37.613854961Z",
      "updated_at": "2025-09-15T03:33:42.700252156Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d50ffd11-3650-48ce-ba9b-6aaaea10ee1c",
      "name": "io.github.rbonestell/ap-mcp-server",
      "category": "Community",
      "description": "Model Context Protocol (MCP) server for the Associated Press Media API",
      "version": "1.2.6",
      "npm": "ap-mcp-server",
      "command": "npx ap-mcp-server@1.2.6",
      "env": {
        "YOUR_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/rbonestell/ap-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "ap-mcp-server",
          "version": "1.2.6",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T14:57:28.79470971Z",
      "updated_at": "2025-09-09T14:57:28.79470971Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d544bbcc-44e2-4774-b097-e886b50dd022",
      "name": "io.ignission/mcp",
      "category": "Community",
      "description": "TikTok video data analytics and content strategy tools",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/ignission-io/mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.ignission.io/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T16:49:33.978580087Z",
      "updated_at": "2025-09-10T16:49:33.978580087Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d76fb4c9-af0a-4588-9de3-2dd0856ba874",
      "name": "io.github.taurgis/sfcc-dev-mcp",
      "category": "Community",
      "description": "MCP server for Salesforce B2C Commerce Cloud development assistance",
      "version": "1.0.14",
      "npm": "sfcc-dev-mcp",
      "command": "npx sfcc-dev-mcp@1.0.14",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/taurgis/sfcc-dev-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "sfcc-dev-mcp",
          "version": "1.0.14",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T07:22:50.583895618Z",
      "updated_at": "2025-09-17T07:22:50.583895618Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d7d98bbe-95e6-491b-af67-3646314b554a",
      "name": "ai.smithery/JMoak-chrono-mcp",
      "category": "Community",
      "description": "Convert and compare dates and times across any timezone with flexible, locale-aware formatting. Ad…",
      "version": "0.2.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/JMoak/chrono-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@JMoak/chrono-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T02:23:35.312972065Z",
      "updated_at": "2025-09-17T02:23:35.312972065Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d8bd9e48-abc3-47b9-b08b-3840ecb838c5",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "category": "Community",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "version": "0.9.7",
      "npm": "@atlassian-dc-mcp/bitbucket",
      "command": "npx @atlassian-dc-mcp/bitbucket@0.9.7",
      "env": {
        "BITBUCKET_HOST": {
          "required": false,
          "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "BITBUCKET_API_BASE_PATH": {
          "required": false,
          "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "BITBUCKET_API_TOKEN": {
          "required": true,
          "description": "Bitbucket Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.7",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T13:17:33.579913494Z",
      "updated_at": "2025-09-13T13:18:51.365304119Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "d8cd8b14-0050-458f-9a86-2ecd60df7b1b",
      "name": "io.github.dockersamples/mcp-docker-release-information",
      "category": "Community",
      "description": "MCP server providing Docker Desktop release notes and security information.",
      "version": "0.2.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/dockersamples/mcp-docker-release-information",
      "remotes": [],
      "packages": [
        {
          "registry_type": "oci",
          "identifier": "dockersamples/mcp-docker-release-information",
          "version": "0.2.0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T15:23:14.335332844Z",
      "updated_at": "2025-09-10T18:54:52.777673838Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "dc27ec5b-37aa-4537-a0b2-3bc603e23e1d",
      "name": "com.apple-rag/mcp-server",
      "category": "Community",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "version": "2.4.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BingoWon/apple-rag-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T14:41:53.205694658Z",
      "updated_at": "2025-09-17T14:43:14.562703229Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "dc884dc5-6e28-4fc8-9ae7-d3374c803288",
      "name": "ai.smithery/slhad-aha-mcp",
      "category": "Community",
      "description": "A TypeScript MCP server for Home Assistant, enabling programmatic management of entities, automati…",
      "version": "0.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/slhad/aha-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@slhad/aha-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-14T21:53:54.664725619Z",
      "updated_at": "2025-09-14T21:53:54.664725619Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "dcdafe42-5317-4d98-bdaf-c66382fb0d7d",
      "name": "io.github.kkjdaniel/bgg-mcp",
      "category": "Community",
      "description": "BoardGameGeek MCP server providing access to BGG API data through standardized tools",
      "version": "1.4.0",
      "npm": null,
      "command": null,
      "env": {
        "BGG_USERNAME": {
          "required": false,
          "description": "Your BoardGameGeek username for references such as ME or MY in prompts",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/kkjdaniel/bgg-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "kdaniel/bgg-mcp",
          "version": "1.4.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your BoardGameGeek username for references such as ME or MY in prompts",
              "format": "string",
              "name": "BGG_USERNAME"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T01:51:47.021731658Z",
      "updated_at": "2025-09-16T01:51:47.021731658Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "de316363-fd3c-4c96-ad69-221ece1f5f67",
      "name": "ai.smithery/MisterSandFR-supabase-mcp-selfhosted",
      "category": "Community",
      "description": "Query and manage your Supabase database directly from your workspace. Execute SQL statements, brow…",
      "version": "1.14.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/MisterSandFR/Supabase-MCP-SelfHosted",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@MisterSandFR/supabase-mcp-selfhosted/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T22:41:06.53621168Z",
      "updated_at": "2025-09-16T22:41:06.53621168Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "dee80ba3-a6f1-4bc0-bac5-7a3c3d4c5597",
      "name": "ai.smithery/fitaf-ai-fitaf-ai-mcp",
      "category": "Community",
      "description": "Manage workouts, nutrition, goals, and progress across the FitAF platform. Connect wearables, sync…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@fitaf-ai/fitaf-ai-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T17:59:11.653728452Z",
      "updated_at": "2025-09-12T17:59:11.653728452Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "df7356a1-098a-49c7-b14c-a816cad55978",
      "name": "ai.smithery/DynamicEndpoints-m365-core-mcp",
      "category": "Community",
      "description": "*Updated June 17th 2025** Manage your Microsoft 365 services effortlessly. Create and manage distr…",
      "version": "1.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/DynamicEndpoints/m365-core-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@DynamicEndpoints/m365-core-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T13:58:16.278260728Z",
      "updated_at": "2025-09-11T13:58:16.278260728Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e07e5ac4-de2c-4e3e-bdf6-637c2cad0f34",
      "name": "com.apple-rag/mcp-server",
      "category": "Community",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "version": "2.6.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BingoWon/apple-rag-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T15:13:14.508375885Z",
      "updated_at": "2025-09-17T15:13:14.508375885Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e1318fc8-1005-4014-928e-5b82595773a9",
      "name": "ai.smithery/hithereiamaliff-mcp-nextcloud",
      "category": "Community",
      "description": "A comprehensive Model Context Protocol (MCP) server that enables AI assistants to interact with yo…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/hithereiamaliff/mcp-nextcloud",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@hithereiamaliff/mcp-nextcloud/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T18:40:25.891251629Z",
      "updated_at": "2025-09-11T18:40:25.891251629Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e14d142c-7c8d-4231-b0f0-0a1dbf2357b6",
      "name": "io.github.b1ff/atlassian-dc-mcp-bitbucket",
      "category": "Community",
      "description": "MCP server for Atlassian Bitbucket Data Center - interact with repositories and code",
      "version": "0.9.0",
      "npm": "@atlassian-dc-mcp/bitbucket",
      "command": "npx @atlassian-dc-mcp/bitbucket@0.9.0",
      "env": {
        "BITBUCKET_HOST": {
          "required": false,
          "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "BITBUCKET_API_BASE_PATH": {
          "required": false,
          "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "BITBUCKET_API_TOKEN": {
          "required": true,
          "description": "Bitbucket Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/bitbucket",
          "version": "0.9.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Bitbucket host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "BITBUCKET_HOST"
            },
            {
              "description": "Bitbucket API base path (alternative to BITBUCKET_HOST)",
              "format": "string",
              "name": "BITBUCKET_API_BASE_PATH"
            },
            {
              "description": "Bitbucket Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "BITBUCKET_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T11:37:20.709225306Z",
      "updated_at": "2025-09-13T13:17:33.583855205Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e1990434-a6a0-47f9-834d-d59cee7d8efb",
      "name": "ai.smithery/brave",
      "category": "Community",
      "description": "Visit https://brave.com/search/api/ for a free API key. Search the web, local businesses, images,…",
      "version": "2.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/brave/brave-search-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/brave/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T14:23:41.666711561Z",
      "updated_at": "2025-09-12T14:23:41.666711561Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e2adcc04-ca22-44d7-9fb6-a095d6f78bef",
      "name": "io.github.IvanMurzak/Unity-MCP",
      "category": "Community",
      "description": "Make 3D games in Unity Engine with AI. MCP Server + Plugin for Unity Editor and Unity games.",
      "version": "0.17.1",
      "npm": null,
      "command": null,
      "env": {
        "UNITY_MCP_PORT": {
          "required": false,
          "description": "Client -> Server <- Plugin connection port (default: 8080)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "UNITY_MCP_PLUGIN_TIMEOUT": {
          "required": false,
          "description": "Plugin -> Server connection timeout (ms) (default: 10000)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "UNITY_MCP_CLIENT_TRANSPORT": {
          "required": false,
          "description": "Client -> Server transport type: stdio or http (default: http)",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/IvanMurzak/Unity-MCP",
      "remotes": [],
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "ivanmurzakdev/unity-mcp-server",
          "version": "0.17.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Client -> Server <- Plugin connection port (default: 8080)",
              "format": "number",
              "name": "UNITY_MCP_PORT"
            },
            {
              "description": "Plugin -> Server connection timeout (ms) (default: 10000)",
              "format": "number",
              "name": "UNITY_MCP_PLUGIN_TIMEOUT"
            },
            {
              "description": "Client -> Server transport type: stdio or http (default: http)",
              "format": "string",
              "default": "stdio",
              "name": "UNITY_MCP_CLIENT_TRANSPORT"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T11:41:26.282067118Z",
      "updated_at": "2025-09-12T11:41:26.282067118Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e347bd04-44d1-4492-a2a2-657e75782db2",
      "name": "io.github.hellocoop/admin-mcp",
      "category": "Community",
      "description": "Model Context Protocol (MCP) for Hellō Admin API.",
      "version": "1.5.7",
      "npm": "@hellocoop/admin-mcp",
      "command": "npx @hellocoop/admin-mcp@1.5.7",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/hellocoop/admin-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@hellocoop/admin-mcp",
          "version": "1.5.7",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-12T15:07:41.224545153Z",
      "updated_at": "2025-09-12T15:07:41.224545153Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e426621e-4c78-4d87-ac66-8cb3db910b25",
      "name": "io.github.chris-schra/mcp-funnel",
      "category": "Community",
      "description": "MCP proxy that aggregates multiple servers with tool filtering and customization",
      "version": "0.0.7",
      "npm": "mcp-funnel",
      "command": "npx mcp-funnel@0.0.6",
      "env": {
        "MCP_FUNNEL_CONFIG": {
          "required": false,
          "description": "Alternative way to specify config file path",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/chris-schra/mcp-funnel",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-funnel",
          "version": "0.0.6",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "runtime_arguments": [
            {
              "value": "-y",
              "type": "positional"
            }
          ],
          "package_arguments": [
            {
              "description": "Optional path to .mcp-funnel.json config file",
              "format": "filepath",
              "type": "positional",
              "value_hint": "config_path"
            }
          ],
          "environment_variables": [
            {
              "description": "Alternative way to specify config file path",
              "format": "filepath",
              "name": "MCP_FUNNEL_CONFIG"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T18:55:31.888644079Z",
      "updated_at": "2025-09-17T18:55:31.888644079Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e522a3bc-d23c-4215-aacc-a5ae5c78ce5c",
      "name": "dev.promplate/hmr",
      "category": "Community",
      "description": "Hot Module Reload (HMR) and reactive programming for Python",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/promplate/hmr",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://pyth-on-line.promplate.dev/hmr/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T21:09:37.850175971Z",
      "updated_at": "2025-09-17T21:13:12.384420864Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e6f3c597-90f1-42a4-ae3e-5a22662e6ac3",
      "name": "com.devcycle/mcp",
      "category": "Community",
      "description": "DevCycle MCP server for feature flag management",
      "version": "6.0.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.devcycle.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.devcycle.com/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T19:06:43.362452757Z",
      "updated_at": "2025-09-17T20:28:36.462391026Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e7ceccf7-af99-447d-a3a6-139b1501c5b5",
      "name": "ai.smithery/STUzhy-py_execute_mcp",
      "category": "Community",
      "description": "Run Python code in a secure sandbox without local setup. Declare inline dependencies and execute s…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@STUzhy/py_execute_mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T04:55:34.956438187Z",
      "updated_at": "2025-09-17T04:55:34.956438187Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e7e2ee65-c9b0-436b-b709-cd909c24f25e",
      "name": "io.github.morinokami/astro-mcp",
      "category": "Community",
      "description": "MCP server to support Astro project development",
      "version": "0.4.2",
      "npm": "astro-mcp",
      "command": "npx astro-mcp@0.4.2 --transport sse",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/morinokami/astro-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "astro-mcp",
          "version": "0.4.2",
          "transport": {
            "type": "sse",
            "url": "http://localhost:4321/__mcp/sse"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T17:37:51.51070648Z",
      "updated_at": "2025-09-11T17:37:51.51070648Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e82405a7-01da-410c-911e-1df13b446157",
      "name": "com.vercel/vercel-mcp",
      "category": "Community",
      "description": "An MCP server for connecting to Vercel",
      "version": "0.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.vercel.com"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T21:18:23.966053956Z",
      "updated_at": "2025-09-17T21:18:23.966053956Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e9991cfc-6b4d-40bf-ab93-1a03567afdb4",
      "name": "dev.augments/mcp",
      "category": "Community",
      "description": "Augments MCP Server - A comprehensive framework documentation provider for Claude Code",
      "version": "2.0.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/augmnt/augments-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.augments.dev/mcp"
        }
      ],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "augments-mcp-server",
          "version": "2.0.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-13T19:11:59.363394215Z",
      "updated_at": "2025-09-13T19:11:59.363394215Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "e9fd4b99-b11b-481e-8b72-3a3348f0ca2b",
      "name": "ai.smithery/CollectiveSpend-collectivespend-smithery-mcp",
      "category": "Community",
      "description": "Connect CollectiveSpend with Xero to manage contacts. Retrieve, create, and update contact records…",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@CollectiveSpend/collectivespend-smithery-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T17:03:02.996324887Z",
      "updated_at": "2025-09-10T17:03:02.996324887Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ec8a6ef0-99ae-4c1d-a83b-23f5c793af0f",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.5.6",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T02:03:43.941695432Z",
      "updated_at": "2025-09-12T04:24:04.029498004Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "edc83edd-076f-4b36-ab2b-be86395d1486",
      "name": "io.github.priyankark/lighthouse-mcp",
      "category": "Community",
      "description": "MCP server for Google Lighthouse performance metrics",
      "version": "0.1.7",
      "npm": "lighthouse-mcp",
      "command": "npx lighthouse-mcp@0.1.7",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/priyankark/lighthouse-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "lighthouse-mcp",
          "version": "0.1.7",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-09T08:43:00.133473658Z",
      "updated_at": "2025-09-09T10:02:57.251229005Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ef18922c-2269-41c8-9e37-770f5dc2fbb6",
      "name": "io.github.indragiek/uniprof",
      "category": "Community",
      "description": "Universal CPU profiler designed for humans and AI agents",
      "version": "0.3.3",
      "npm": "uniprof",
      "command": "npx uniprof@0.3.3",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/indragiek/uniprof",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "uniprof",
          "version": "0.3.3",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "value": "mcp",
              "type": "positional"
            },
            {
              "value": "run",
              "type": "positional"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T15:16:37.815857232Z",
      "updated_at": "2025-09-11T00:59:36.881548344Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "ef42161e-89a0-45f2-8daf-3c1ffb9e9eaf",
      "name": "ai.shawndurrani/mcp-registry",
      "category": "Community",
      "description": "Search the public MCP Registry; discover servers and copy SSE URLs.",
      "version": "0.1.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp-registry.shawndurrani.ai/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T04:20:53.726246251Z",
      "updated_at": "2025-09-16T23:02:09.747665936Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f0cb5880-9aec-40ae-8388-97f8b63d4370",
      "name": "ai.smithery/exa-labs-exa-code-mcp",
      "category": "Community",
      "description": "Find open-source libraries and fetch contextual code snippets by version to accelerate development…",
      "version": "0.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/exa-labs/exa-code-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@exa-labs/exa-code-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T20:44:09.235886235Z",
      "updated_at": "2025-09-17T20:44:09.235886235Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f0e93c38-849c-4cb5-baee-04077afc48ea",
      "name": "io.github.dubuqingfeng/gitlab-mcp-server",
      "category": "Community",
      "description": "GitLab MCP (Model Context Protocol) server for AI agents",
      "version": "1.0.0",
      "npm": "@dubuqingfeng/gitlab-mcp-server",
      "command": "npx @dubuqingfeng/gitlab-mcp-server@2.0.12",
      "env": {
        "YOUR_API_KEY": {
          "required": true,
          "description": "Your API key for the service",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/dubuqingfeng/gitlab-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@dubuqingfeng/gitlab-mcp-server",
          "version": "2.0.12",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the service",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "YOUR_API_KEY"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T09:34:47.415483452Z",
      "updated_at": "2025-09-11T09:41:43.917858507Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f15adbff-4318-4751-acbe-8361dfb17f1f",
      "name": "io.github.zenml-io/mcp-zenml",
      "category": "Community",
      "description": "MCP server for ZenML - browse stacks, pipelines, runs, artifacts & trigger pipeline runs via API",
      "version": "1.0.3",
      "npm": null,
      "command": null,
      "env": {
        "ZENML_STORE_URL": {
          "required": true,
          "description": "Base URL of your ZenML server (e.g., https://<workspace-id>-zenml.cloudinfra.zenml.io).",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "ZENML_STORE_API_KEY": {
          "required": true,
          "description": "API key used to authenticate with your ZenML server (ideally a service account key).",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/zenml-io/mcp-zenml",
      "remotes": [],
      "packages": [
        {
          "registry_type": "oci",
          "registry_base_url": "https://docker.io",
          "identifier": "zenmldocker/mcp-zenml",
          "version": "1.0.3",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Base URL of your ZenML server (e.g., https://<workspace-id>-zenml.cloudinfra.zenml.io).",
              "is_required": true,
              "format": "string",
              "name": "ZENML_STORE_URL"
            },
            {
              "description": "API key used to authenticate with your ZenML server (ideally a service account key).",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "ZENML_STORE_API_KEY"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T13:56:29.446726607Z",
      "updated_at": "2025-09-10T13:56:29.446726607Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f181c9a0-74c1-44b2-841c-fa0561074d1d",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.5.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-12T01:41:27.474864739Z",
      "updated_at": "2025-09-12T01:50:59.06860546Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f1820b4a-0c7f-4198-b15c-bbc316af3429",
      "name": "io.github.huoshuiai42/huoshui-file-converter",
      "category": "Community",
      "description": "An MCP server that provides document format conversion",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {
        "HUOSHUI_WORKING_DIR": {
          "required": false,
          "description": "Your workding directory",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/huoshuiai42/huoshui-file-converter",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "huoshui-file-converter",
          "version": "1.0.0",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your workding directory",
              "format": "string",
              "name": "HUOSHUI_WORKING_DIR"
            }
          ]
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T01:34:28.334413427Z",
      "updated_at": "2025-09-11T01:34:28.334413427Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f2550c4a-7aeb-4af9-93c5-8e92b0c7087e",
      "name": "com.apple-rag/mcp-server",
      "category": "Community",
      "description": "Apple Developer Documentation with Semantic Search, RAG, and AI reranking for MCP clients",
      "version": "2.5.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/BingoWon/apple-rag-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.apple-rag.com",
          "headers": [
            {
              "description": "MCP Token for authentication (optional - free tier available without token)",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-17T15:08:38.002759406Z",
      "updated_at": "2025-09-17T15:11:26.214637982Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f25aa5fa-263a-4662-885d-35f2ea58fcb5",
      "name": "ai.smithery/kkjdaniel-bgg-mcp",
      "category": "Community",
      "description": "BGG MCP provides access to the BoardGameGeek API through the Model Context Protocol, enabling retr…",
      "version": "1.3.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/kkjdaniel/bgg-mcp",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kkjdaniel/bgg-mcp/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T00:14:29.642755949Z",
      "updated_at": "2025-09-16T00:14:29.642755949Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f2712336-6ab8-4d62-8e75-63b1da189866",
      "name": "com.mintmcp/gmail",
      "category": "Community",
      "description": "A MCP server for Gmail that lets you search, read, and draft emails and replies.",
      "version": "1.0.4",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mintmcp/servers",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://gmail.mintmcp.com/mcp"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T19:49:24.175897882Z",
      "updated_at": "2025-09-09T19:53:13.48979916Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f307b5a8-fd0a-4cf8-ac0a-8bfcecf9d6d4",
      "name": "ai.shawndurrani/mcp-merchant",
      "category": "Community",
      "description": "Search-only commerce MCP server backed by Stripe (test)",
      "version": "0.1.3",
      "npm": "mcp-merchant",
      "command": "npx mcp-merchant@0.1.3",
      "env": {
        "STRIPE_SECRET_KEY": {
          "required": true,
          "description": "Stripe secret key (test mode)",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "PRODUCT_LIMIT": {
          "required": false,
          "description": "Max products to cache",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "REFRESH_INTERVAL_SEC": {
          "required": false,
          "description": "Catalog refresh interval in seconds",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "sse",
          "url": "https://mcp.shawndurrani.ai/sse"
        }
      ],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "mcp-merchant",
          "version": "0.1.3",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Stripe secret key (test mode)",
              "is_required": true,
              "is_secret": true,
              "name": "STRIPE_SECRET_KEY"
            },
            {
              "description": "Max products to cache",
              "default": "100",
              "name": "PRODUCT_LIMIT"
            },
            {
              "description": "Catalog refresh interval in seconds",
              "default": "600",
              "name": "REFRESH_INTERVAL_SEC"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-16T22:54:28.454307047Z",
      "updated_at": "2025-09-16T22:54:28.454307047Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f6b2f17e-e856-4a38-ae94-bba78d25fbb7",
      "name": "io.github.imbenrabi/financial-modeling-prep-mcp-server",
      "category": "Community",
      "description": "MCP server for Financial Modeling Prep API with 250+ financial data tools",
      "version": "2.4.0",
      "npm": "financial-modeling-prep-mcp-server",
      "command": "npx financial-modeling-prep-mcp-server@2.4.0",
      "env": {
        "FMP_ACCESS_TOKEN": {
          "required": false,
          "description": "Financial Modeling Prep API access token",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "PORT": {
          "required": false,
          "description": "Port number for HTTP server mode",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "DYNAMIC_TOOL_DISCOVERY": {
          "required": false,
          "description": "Enable dynamic tool discovery mode",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "FMP_TOOL_SETS": {
          "required": false,
          "description": "Comma-separated list of tool sets to load",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/imbenrabi/Financial-Modeling-Prep-MCP-Server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "financial-modeling-prep-mcp-server",
          "version": "2.4.0",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "https://financial-modeling-prep-mcp-server-production.up.railway.app/mcp"
          },
          "package_arguments": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "type": "named",
              "name": "--fmp-token"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "type": "named",
              "name": "--port"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "type": "named",
              "name": "--dynamic-tool-discovery"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "type": "named",
              "name": "--fmp-tool-sets"
            }
          ],
          "environment_variables": [
            {
              "description": "Financial Modeling Prep API access token",
              "format": "string",
              "is_secret": true,
              "name": "FMP_ACCESS_TOKEN"
            },
            {
              "description": "Port number for HTTP server mode",
              "format": "number",
              "name": "PORT"
            },
            {
              "description": "Enable dynamic tool discovery mode",
              "format": "boolean",
              "name": "DYNAMIC_TOOL_DISCOVERY"
            },
            {
              "description": "Comma-separated list of tool sets to load",
              "format": "string",
              "name": "FMP_TOOL_SETS"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T08:26:14.672007798Z",
      "updated_at": "2025-09-11T12:44:51.220271633Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f7dc49e8-f522-49ef-8c83-ac14a51f5989",
      "name": "io.github.b1ff/atlassian-dc-mcp-jira",
      "category": "Community",
      "description": "MCP server for Atlassian Jira Data Center - search, view, and create issues",
      "version": "0.9.8",
      "npm": "@atlassian-dc-mcp/jira",
      "command": "npx @atlassian-dc-mcp/jira@0.9.8",
      "env": {
        "JIRA_HOST": {
          "required": false,
          "description": "Jira host domain (e.g. your-instance.atlassian.net)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "JIRA_API_BASE_PATH": {
          "required": false,
          "description": "Jira API base path (alternative to JIRA_HOST)",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "JIRA_API_TOKEN": {
          "required": true,
          "description": "Jira Personal Access Token or API token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/b1ff/atlassian-dc-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@atlassian-dc-mcp/jira",
          "version": "0.9.8",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Jira host domain (e.g. your-instance.atlassian.net)",
              "format": "string",
              "name": "JIRA_HOST"
            },
            {
              "description": "Jira API base path (alternative to JIRA_HOST)",
              "format": "string",
              "name": "JIRA_API_BASE_PATH"
            },
            {
              "description": "Jira Personal Access Token or API token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "JIRA_API_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-13T13:18:50.716321679Z",
      "updated_at": "2025-09-13T13:29:18.034212935Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "f9fca6a5-fbdc-4dbe-b28c-ff352d059d7b",
      "name": "io.github.rfdez/pvpc-mcp-server",
      "category": "Community",
      "description": "Retrieve daily PVPC electricity tariffs for 2.0 TD consumers, published by Red Eléctrica.",
      "version": "3.2.3",
      "npm": "@rfdez/pvpc-mcp-server",
      "command": "npx @rfdez/pvpc-mcp-server@3.2.3",
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/rfdez/pvpc-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@rfdez/pvpc-mcp-server",
          "version": "3.2.3",
          "runtime_hint": "npx",
          "transport": {
            "type": "stdio"
          },
          "package_arguments": [
            {
              "description": "Use stdio transport type for MCP server",
              "value": "stdio",
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "ESIOS API key for authentication",
              "is_required": true,
              "is_secret": true,
              "type": "named",
              "name": "--api-key"
            }
          ]
        },
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@rfdez/pvpc-mcp-server",
          "version": "3.2.3",
          "runtime_hint": "npx",
          "transport": {
            "type": "streamable-http",
            "url": "http://127.0.0.1:8080/mcp",
            "headers": [
              {
                "description": "ESIOS API key for authentication",
                "is_required": true,
                "is_secret": true,
                "name": "X-API-Key"
              }
            ]
          },
          "package_arguments": [
            {
              "description": "Use HTTP transport type for MCP server",
              "value": "http",
              "type": "named",
              "name": "--transport"
            },
            {
              "description": "Port for HTTP transport",
              "default": "8080",
              "type": "named",
              "name": "--port"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-10T16:53:23.880648467Z",
      "updated_at": "2025-09-10T16:53:23.880648467Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fa2dcb23-c912-4aba-8296-c65162809bbf",
      "name": "com.1stdibs/1stDibs",
      "category": "Community",
      "description": "MCP server for browsing and searching items on 1stDibs marketplace.",
      "version": "1.0.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://www.1stdibs.com/soa/mcp/"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-16T23:01:22.451131743Z",
      "updated_at": "2025-09-16T23:01:22.451131743Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fa434ba2-0704-4420-859e-2a5aa9fa14d9",
      "name": "io.github.cmpxchg16/mcp-ethical-hacking",
      "category": "Community",
      "description": "An MCP server that provides LinkedIn & Reddit data",
      "version": "1.2.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/cmpxchg16/mcp-ethical-hacking",
      "remotes": [],
      "packages": [
        {
          "registry_type": "mcpb",
          "identifier": "https://github.com/cmpxchg16/mcp-ethical-hacking/releases/download/v1.0.0/server.mcpb",
          "version": "1.2.0",
          "file_sha256": "294365cbf53a602df093e3757e6a31cca6c50dd6af343fefa4a528ab869d24a0",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T12:55:00.133512333Z",
      "updated_at": "2025-09-15T12:56:52.963416323Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "faa26cb9-3aad-415e-aece-f715fff5fe5e",
      "name": "app.getdialer/dialer",
      "category": "Community",
      "description": "An MCP server that provides lets you make outbound phone calls using your own phone number",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://getdialer.app/mcp"
        },
        {
          "type": "sse",
          "url": "https://getdialer.app/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-09T00:16:49.107842808Z",
      "updated_at": "2025-09-09T00:16:49.107842808Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fb85b1a6-168c-4775-ae6b-2ab63c5506c2",
      "name": "ai.smithery/smithery-ai-cookbook-python-quickstart",
      "category": "Community",
      "description": "A simple MCP server built with FastMCP and python",
      "version": "1.13.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/smithery-ai/smithery-cookbook",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@smithery-ai/cookbook-python-quickstart/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T16:07:02.461934808Z",
      "updated_at": "2025-09-10T16:07:02.461934808Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fb955a62-b750-4145-926a-824b47307d13",
      "name": "com.notion/mcp",
      "category": "Community",
      "description": "Official Notion MCP server",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": null,
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://mcp.notion.com/mcp"
        },
        {
          "type": "sse",
          "url": "https://mcp.notion.com/sse"
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T22:25:50.737872147Z",
      "updated_at": "2025-09-11T22:25:50.737872147Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fbae7b01-59cc-4777-a9e6-22b171703fe7",
      "name": "io.github.dubuqingfeng/gitlab-mcp-server",
      "category": "Community",
      "description": "GitLab MCP (Model Context Protocol) server for AI agents",
      "version": "1.0.1",
      "npm": "@dubuqingfeng/gitlab-mcp-server",
      "command": "npx @dubuqingfeng/gitlab-mcp-server@2.0.12",
      "env": {
        "GITLAB_TOKEN": {
          "required": true,
          "description": "Your API key for the gitlab",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "GITLAB_URL": {
          "required": false,
          "description": "Gitlab URL",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "LARK_WEBHOOK_URL": {
          "required": false,
          "description": "Lark 机器人 Webhook URL",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "LARK_SECRET_KEY": {
          "required": false,
          "description": "可选：签名密钥（如果机器人启用了签名验证）",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "LARK_ENABLE_NOTIFICATION": {
          "required": false,
          "description": "可选：是否启用通知，默认为 true",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "GITLAB_NOTE_MODE": {
          "required": false,
          "description": "可选：通知模式 - gitlab_only(仅GitLab)、lark_only(仅Lark)、both(两者都发)，默认为 gitlab_only",
          "placeholder": "",
          "help": "",
          "secret": false
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/dubuqingfeng/gitlab-mcp-server",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "@dubuqingfeng/gitlab-mcp-server",
          "version": "2.0.12",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your API key for the gitlab",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "GITLAB_TOKEN"
            },
            {
              "description": "Gitlab URL",
              "format": "string",
              "name": "GITLAB_URL"
            },
            {
              "description": "Lark 机器人 Webhook URL",
              "format": "string",
              "is_secret": true,
              "name": "LARK_WEBHOOK_URL"
            },
            {
              "description": "可选：签名密钥（如果机器人启用了签名验证）",
              "format": "string",
              "is_secret": true,
              "name": "LARK_SECRET_KEY"
            },
            {
              "description": "可选：是否启用通知，默认为 true",
              "format": "boolean",
              "name": "LARK_ENABLE_NOTIFICATION"
            },
            {
              "description": "可选：通知模式 - gitlab_only(仅GitLab)、lark_only(仅Lark)、both(两者都发)，默认为 gitlab_only",
              "format": "string",
              "name": "GITLAB_NOTE_MODE"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-11T09:41:43.896888413Z",
      "updated_at": "2025-09-11T09:41:43.896888413Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fc1a3aad-1f9b-4a33-9a96-3f19509d4419",
      "name": "io.github.SnowLeopard-AI/bigquery-mcp",
      "category": "Community",
      "description": "A SnowLeopardAI-managed MCP server that provides access to Google BigQuery data.",
      "version": "0.1.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/SnowLeopard-AI/bigquery-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "sl-bigquery-mcp",
          "version": "0.1.8",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-15T22:35:28.327511086Z",
      "updated_at": "2025-09-15T22:35:28.327511086Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fc7be6d0-3fb9-4f63-9858-86a62c456a15",
      "name": "ai.mcpcap/mcpcap",
      "category": "Community",
      "description": "An MCP server for analyzing PCAP files.",
      "version": "0.4.4",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/mcpcap/mcpcap",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcpcap",
          "version": "0.4.4",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T01:06:15.722886488Z",
      "updated_at": "2025-09-12T01:41:27.484537348Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fca4551c-4c86-485f-a548-9263a147effb",
      "name": "ai.smithery/kesslerio-attio-mcp-server",
      "category": "Community",
      "description": "Enable AI assistants to interact directly with your Attio CRM data through natural language querie…",
      "version": "0.2.0",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/kesslerio/attio-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@kesslerio/attio-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-10T17:52:23.110357722Z",
      "updated_at": "2025-09-10T17:52:23.110357722Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fce998d0-3374-49ad-ab92-a1dce675be47",
      "name": "io.github.r-huijts/strava-mcp",
      "category": "Community",
      "description": "MCP server for accessing Strava API",
      "version": "1.0.1",
      "npm": "strava-mcp-server",
      "command": "npx strava-mcp-server@1.0.1",
      "env": {
        "STRAVA_CLIENT_ID": {
          "required": true,
          "description": "Your Strava API client ID",
          "placeholder": "",
          "help": "",
          "secret": false
        },
        "STRAVA_CLIENT_SECRET": {
          "required": true,
          "description": "Your Strava API client secret",
          "placeholder": "",
          "help": "",
          "secret": true
        },
        "STRAVA_ACCESS_TOKEN": {
          "required": true,
          "description": "Your Strava API access token",
          "placeholder": "",
          "help": "",
          "secret": true
        }
      },
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/r-huijts/strava-mcp",
      "remotes": [],
      "packages": [
        {
          "registry_type": "npm",
          "registry_base_url": "https://registry.npmjs.org",
          "identifier": "strava-mcp-server",
          "version": "1.0.1",
          "transport": {
            "type": "stdio"
          },
          "environment_variables": [
            {
              "description": "Your Strava API client ID",
              "is_required": true,
              "format": "string",
              "name": "STRAVA_CLIENT_ID"
            },
            {
              "description": "Your Strava API client secret",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "STRAVA_CLIENT_SECRET"
            },
            {
              "description": "Your Strava API access token",
              "is_required": true,
              "format": "string",
              "is_secret": true,
              "name": "STRAVA_ACCESS_TOKEN"
            }
          ]
        }
      ],
      "registry_type": "npm",
      "registry_base_url": "https://registry.npmjs.org",
      "license": null,
      "published_at": "2025-09-17T13:52:27.488577467Z",
      "updated_at": "2025-09-17T13:52:27.488577467Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fd5f5556-3f1d-46a1-8b5d-90f1f3d66078",
      "name": "ai.smithery/CryptoCultCurt-appfolio-mcp-server",
      "category": "Community",
      "description": "Provide seamless access to Appfolio Property Manager Reporting API through a standardized MCP serv…",
      "version": "1.0.1",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/CryptoCultCurt/appfolio-mcp-server",
      "remotes": [
        {
          "type": "streamable-http",
          "url": "https://server.smithery.ai/@CryptoCultCurt/appfolio-mcp-server/mcp",
          "headers": [
            {
              "description": "Bearer token for Smithery authentication",
              "is_required": true,
              "value": "Bearer {smithery_api_key}",
              "is_secret": true,
              "name": "Authorization"
            }
          ]
        }
      ],
      "packages": [],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T00:42:54.55597845Z",
      "updated_at": "2025-09-11T00:42:54.55597845Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    },
    {
      "id": "fe025150-d0bd-42e5-8c5f-3ea6ec61db33",
      "name": "io.github.henilcalagiya/mcp-apple-notes",
      "category": "Community",
      "description": "MCP server for Apple Notes integration using AppleScript with full CRUD operations",
      "version": "0.1.2",
      "npm": null,
      "command": null,
      "env": {},
      "setup_instructions": [],
      "uninstall_steps": [],
      "documentation": "",
      "homepage": "",
      "repository": "https://github.com/henilcalagiya/mcp-apple-notes",
      "remotes": [],
      "packages": [
        {
          "registry_type": "pypi",
          "registry_base_url": "https://pypi.org",
          "identifier": "mcp-apple-notes",
          "version": "0.1.2",
          "transport": {
            "type": "stdio"
          }
        }
      ],
      "registry_type": null,
      "registry_base_url": null,
      "license": null,
      "published_at": "2025-09-11T05:36:33.726309509Z",
      "updated_at": "2025-09-11T05:36:33.726309509Z",
      "installed": false,
      "installation_date": null,
      "installed_agents": []
    }
  ]
}